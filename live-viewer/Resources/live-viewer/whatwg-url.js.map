{
  "version": 3,
  "sources": ["../node_modules/webidl-conversions/lib/index.js", "../lib/utils.js", "../node_modules/tr46/node_modules/punycode/punycode.js", "../node_modules/tr46/lib/regexes.js", "../node_modules/tr46/lib/statusMapping.js", "../node_modules/tr46/index.js", "../lib/infra.js", "../lib/encoding.js", "../lib/percent-encoding.js", "../lib/url-state-machine.js", "../lib/urlencoded.js", "../lib/Function.js", "../lib/URLSearchParams-impl.js", "../lib/URLSearchParams.js", "../lib/URL-impl.js", "../lib/URL.js", "../webidl2js-wrapper.js", "../index.js"],
  "sourcesContent": ["\"use strict\";\n\nfunction makeException(ErrorType, message, options) {\n  if (options.globals) {\n    ErrorType = options.globals[ErrorType.name];\n  }\n  return new ErrorType(`${options.context ? options.context : \"Value\"} ${message}.`);\n}\n\nfunction toNumber(value, options) {\n  if (typeof value === \"bigint\") {\n    throw makeException(TypeError, \"is a BigInt which cannot be converted to a number\", options);\n  }\n  if (!options.globals) {\n    return Number(value);\n  }\n  return options.globals.Number(value);\n}\n\n// Round x to the nearest integer, choosing the even integer if it lies halfway between two.\nfunction evenRound(x) {\n  // There are four cases for numbers with fractional part being .5:\n  //\n  // case |     x     | floor(x) | round(x) | expected | x <> 0 | x % 1 | x & 1 |   example\n  //   1  |  2n + 0.5 |  2n      |  2n + 1  |  2n      |   >    |  0.5  |   0   |  0.5 ->  0\n  //   2  |  2n + 1.5 |  2n + 1  |  2n + 2  |  2n + 2  |   >    |  0.5  |   1   |  1.5 ->  2\n  //   3  | -2n - 0.5 | -2n - 1  | -2n      | -2n      |   <    | -0.5  |   0   | -0.5 ->  0\n  //   4  | -2n - 1.5 | -2n - 2  | -2n - 1  | -2n - 2  |   <    | -0.5  |   1   | -1.5 -> -2\n  // (where n is a non-negative integer)\n  //\n  // Branch here for cases 1 and 4\n  if ((x > 0 && (x % 1) === +0.5 && (x & 1) === 0) ||\n        (x < 0 && (x % 1) === -0.5 && (x & 1) === 1)) {\n    return censorNegativeZero(Math.floor(x));\n  }\n\n  return censorNegativeZero(Math.round(x));\n}\n\nfunction integerPart(n) {\n  return censorNegativeZero(Math.trunc(n));\n}\n\nfunction sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\nfunction modulo(x, y) {\n  // https://tc39.github.io/ecma262/#eqn-modulo\n  // Note that http://stackoverflow.com/a/4467559/3191 does NOT work for large modulos\n  const signMightNotMatch = x % y;\n  if (sign(y) !== sign(signMightNotMatch)) {\n    return signMightNotMatch + y;\n  }\n  return signMightNotMatch;\n}\n\nfunction censorNegativeZero(x) {\n  return x === 0 ? 0 : x;\n}\n\nfunction createIntegerConversion(bitLength, { unsigned }) {\n  let lowerBound, upperBound;\n  if (unsigned) {\n    lowerBound = 0;\n    upperBound = 2 ** bitLength - 1;\n  } else {\n    lowerBound = -(2 ** (bitLength - 1));\n    upperBound = 2 ** (bitLength - 1) - 1;\n  }\n\n  const twoToTheBitLength = 2 ** bitLength;\n  const twoToOneLessThanTheBitLength = 2 ** (bitLength - 1);\n\n  return (value, options = {}) => {\n    let x = toNumber(value, options);\n    x = censorNegativeZero(x);\n\n    if (options.enforceRange) {\n      if (!Number.isFinite(x)) {\n        throw makeException(TypeError, \"is not a finite number\", options);\n      }\n\n      x = integerPart(x);\n\n      if (x < lowerBound || x > upperBound) {\n        throw makeException(\n          TypeError,\n          `is outside the accepted range of ${lowerBound} to ${upperBound}, inclusive`,\n          options\n        );\n      }\n\n      return x;\n    }\n\n    if (!Number.isNaN(x) && options.clamp) {\n      x = Math.min(Math.max(x, lowerBound), upperBound);\n      x = evenRound(x);\n      return x;\n    }\n\n    if (!Number.isFinite(x) || x === 0) {\n      return 0;\n    }\n    x = integerPart(x);\n\n    // Math.pow(2, 64) is not accurately representable in JavaScript, so try to avoid these per-spec operations if\n    // possible. Hopefully it's an optimization for the non-64-bitLength cases too.\n    if (x >= lowerBound && x <= upperBound) {\n      return x;\n    }\n\n    // These will not work great for bitLength of 64, but oh well. See the README for more details.\n    x = modulo(x, twoToTheBitLength);\n    if (!unsigned && x >= twoToOneLessThanTheBitLength) {\n      return x - twoToTheBitLength;\n    }\n    return x;\n  };\n}\n\nfunction createLongLongConversion(bitLength, { unsigned }) {\n  const upperBound = Number.MAX_SAFE_INTEGER;\n  const lowerBound = unsigned ? 0 : Number.MIN_SAFE_INTEGER;\n  const asBigIntN = unsigned ? BigInt.asUintN : BigInt.asIntN;\n\n  return (value, options = {}) => {\n    let x = toNumber(value, options);\n    x = censorNegativeZero(x);\n\n    if (options.enforceRange) {\n      if (!Number.isFinite(x)) {\n        throw makeException(TypeError, \"is not a finite number\", options);\n      }\n\n      x = integerPart(x);\n\n      if (x < lowerBound || x > upperBound) {\n        throw makeException(\n          TypeError,\n          `is outside the accepted range of ${lowerBound} to ${upperBound}, inclusive`,\n          options\n        );\n      }\n\n      return x;\n    }\n\n    if (!Number.isNaN(x) && options.clamp) {\n      x = Math.min(Math.max(x, lowerBound), upperBound);\n      x = evenRound(x);\n      return x;\n    }\n\n    if (!Number.isFinite(x) || x === 0) {\n      return 0;\n    }\n\n    let xBigInt = BigInt(integerPart(x));\n    xBigInt = asBigIntN(bitLength, xBigInt);\n    return Number(xBigInt);\n  };\n}\n\nexports.any = value => {\n  return value;\n};\n\nexports.undefined = () => {\n  return undefined;\n};\n\nexports.boolean = value => {\n  return Boolean(value);\n};\n\nexports.byte = createIntegerConversion(8, { unsigned: false });\nexports.octet = createIntegerConversion(8, { unsigned: true });\n\nexports.short = createIntegerConversion(16, { unsigned: false });\nexports[\"unsigned short\"] = createIntegerConversion(16, { unsigned: true });\n\nexports.long = createIntegerConversion(32, { unsigned: false });\nexports[\"unsigned long\"] = createIntegerConversion(32, { unsigned: true });\n\nexports[\"long long\"] = createLongLongConversion(64, { unsigned: false });\nexports[\"unsigned long long\"] = createLongLongConversion(64, { unsigned: true });\n\nexports.double = (value, options = {}) => {\n  const x = toNumber(value, options);\n\n  if (!Number.isFinite(x)) {\n    throw makeException(TypeError, \"is not a finite floating-point value\", options);\n  }\n\n  return x;\n};\n\nexports[\"unrestricted double\"] = (value, options = {}) => {\n  const x = toNumber(value, options);\n\n  return x;\n};\n\nexports.float = (value, options = {}) => {\n  const x = toNumber(value, options);\n\n  if (!Number.isFinite(x)) {\n    throw makeException(TypeError, \"is not a finite floating-point value\", options);\n  }\n\n  if (Object.is(x, -0)) {\n    return x;\n  }\n\n  const y = Math.fround(x);\n\n  if (!Number.isFinite(y)) {\n    throw makeException(TypeError, \"is outside the range of a single-precision floating-point value\", options);\n  }\n\n  return y;\n};\n\nexports[\"unrestricted float\"] = (value, options = {}) => {\n  const x = toNumber(value, options);\n\n  if (isNaN(x)) {\n    return x;\n  }\n\n  if (Object.is(x, -0)) {\n    return x;\n  }\n\n  return Math.fround(x);\n};\n\nexports.DOMString = (value, options = {}) => {\n  if (options.treatNullAsEmptyString && value === null) {\n    return \"\";\n  }\n\n  if (typeof value === \"symbol\") {\n    throw makeException(TypeError, \"is a symbol, which cannot be converted to a string\", options);\n  }\n\n  const StringCtor = options.globals ? options.globals.String : String;\n  return StringCtor(value);\n};\n\nexports.ByteString = (value, options = {}) => {\n  const x = exports.DOMString(value, options);\n  let c;\n  for (let i = 0; (c = x.codePointAt(i)) !== undefined; ++i) {\n    if (c > 255) {\n      throw makeException(TypeError, \"is not a valid ByteString\", options);\n    }\n  }\n\n  return x;\n};\n\nexports.USVString = (value, options = {}) => {\n  const S = exports.DOMString(value, options);\n  const n = S.length;\n  const U = [];\n  for (let i = 0; i < n; ++i) {\n    const c = S.charCodeAt(i);\n    if (c < 0xD800 || c > 0xDFFF) {\n      U.push(String.fromCodePoint(c));\n    } else if (0xDC00 <= c && c <= 0xDFFF) {\n      U.push(String.fromCodePoint(0xFFFD));\n    } else if (i === n - 1) {\n      U.push(String.fromCodePoint(0xFFFD));\n    } else {\n      const d = S.charCodeAt(i + 1);\n      if (0xDC00 <= d && d <= 0xDFFF) {\n        const a = c & 0x3FF;\n        const b = d & 0x3FF;\n        U.push(String.fromCodePoint((2 << 15) + ((2 << 9) * a) + b));\n        ++i;\n      } else {\n        U.push(String.fromCodePoint(0xFFFD));\n      }\n    }\n  }\n\n  return U.join(\"\");\n};\n\nexports.object = (value, options = {}) => {\n  if (value === null || (typeof value !== \"object\" && typeof value !== \"function\")) {\n    throw makeException(TypeError, \"is not an object\", options);\n  }\n\n  return value;\n};\n\nconst abByteLengthGetter =\n    Object.getOwnPropertyDescriptor(ArrayBuffer.prototype, \"byteLength\").get;\nconst sabByteLengthGetter =\n    typeof SharedArrayBuffer === \"function\" ?\n      Object.getOwnPropertyDescriptor(SharedArrayBuffer.prototype, \"byteLength\").get :\n      null;\n\nfunction isNonSharedArrayBuffer(value) {\n  try {\n    // This will throw on SharedArrayBuffers, but not detached ArrayBuffers.\n    // (The spec says it should throw, but the spec conflicts with implementations: https://github.com/tc39/ecma262/issues/678)\n    abByteLengthGetter.call(value);\n\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nfunction isSharedArrayBuffer(value) {\n  try {\n    sabByteLengthGetter.call(value);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nfunction isArrayBufferDetached(value) {\n  try {\n    // eslint-disable-next-line no-new\n    new Uint8Array(value);\n    return false;\n  } catch {\n    return true;\n  }\n}\n\nexports.ArrayBuffer = (value, options = {}) => {\n  if (!isNonSharedArrayBuffer(value)) {\n    if (options.allowShared && !isSharedArrayBuffer(value)) {\n      throw makeException(TypeError, \"is not an ArrayBuffer or SharedArrayBuffer\", options);\n    }\n    throw makeException(TypeError, \"is not an ArrayBuffer\", options);\n  }\n  if (isArrayBufferDetached(value)) {\n    throw makeException(TypeError, \"is a detached ArrayBuffer\", options);\n  }\n\n  return value;\n};\n\nconst dvByteLengthGetter =\n    Object.getOwnPropertyDescriptor(DataView.prototype, \"byteLength\").get;\nexports.DataView = (value, options = {}) => {\n  try {\n    dvByteLengthGetter.call(value);\n  } catch (e) {\n    throw makeException(TypeError, \"is not a DataView\", options);\n  }\n\n  if (!options.allowShared && isSharedArrayBuffer(value.buffer)) {\n    throw makeException(TypeError, \"is backed by a SharedArrayBuffer, which is not allowed\", options);\n  }\n  if (isArrayBufferDetached(value.buffer)) {\n    throw makeException(TypeError, \"is backed by a detached ArrayBuffer\", options);\n  }\n\n  return value;\n};\n\n// Returns the unforgeable `TypedArray` constructor name or `undefined`,\n// if the `this` value isn't a valid `TypedArray` object.\n//\n// https://tc39.es/ecma262/#sec-get-%typedarray%.prototype-@@tostringtag\nconst typedArrayNameGetter = Object.getOwnPropertyDescriptor(\n  Object.getPrototypeOf(Uint8Array).prototype,\n  Symbol.toStringTag\n).get;\n[\n  Int8Array,\n  Int16Array,\n  Int32Array,\n  Uint8Array,\n  Uint16Array,\n  Uint32Array,\n  Uint8ClampedArray,\n  Float32Array,\n  Float64Array\n].forEach(func => {\n  const { name } = func;\n  const article = /^[AEIOU]/u.test(name) ? \"an\" : \"a\";\n  exports[name] = (value, options = {}) => {\n    if (!ArrayBuffer.isView(value) || typedArrayNameGetter.call(value) !== name) {\n      throw makeException(TypeError, `is not ${article} ${name} object`, options);\n    }\n    if (!options.allowShared && isSharedArrayBuffer(value.buffer)) {\n      throw makeException(TypeError, \"is a view on a SharedArrayBuffer, which is not allowed\", options);\n    }\n    if (isArrayBufferDetached(value.buffer)) {\n      throw makeException(TypeError, \"is a view on a detached ArrayBuffer\", options);\n    }\n\n    return value;\n  };\n});\n\n// Common definitions\n\nexports.ArrayBufferView = (value, options = {}) => {\n  if (!ArrayBuffer.isView(value)) {\n    throw makeException(TypeError, \"is not a view on an ArrayBuffer or SharedArrayBuffer\", options);\n  }\n\n  if (!options.allowShared && isSharedArrayBuffer(value.buffer)) {\n    throw makeException(TypeError, \"is a view on a SharedArrayBuffer, which is not allowed\", options);\n  }\n\n  if (isArrayBufferDetached(value.buffer)) {\n    throw makeException(TypeError, \"is a view on a detached ArrayBuffer\", options);\n  }\n  return value;\n};\n\nexports.BufferSource = (value, options = {}) => {\n  if (ArrayBuffer.isView(value)) {\n    if (!options.allowShared && isSharedArrayBuffer(value.buffer)) {\n      throw makeException(TypeError, \"is a view on a SharedArrayBuffer, which is not allowed\", options);\n    }\n\n    if (isArrayBufferDetached(value.buffer)) {\n      throw makeException(TypeError, \"is a view on a detached ArrayBuffer\", options);\n    }\n    return value;\n  }\n\n  if (!options.allowShared && !isNonSharedArrayBuffer(value)) {\n    throw makeException(TypeError, \"is not an ArrayBuffer or a view on one\", options);\n  }\n  if (options.allowShared && !isSharedArrayBuffer(value) && !isNonSharedArrayBuffer(value)) {\n    throw makeException(TypeError, \"is not an ArrayBuffer, SharedArrayBuffer, or a view on one\", options);\n  }\n  if (isArrayBufferDetached(value)) {\n    throw makeException(TypeError, \"is a detached ArrayBuffer\", options);\n  }\n\n  return value;\n};\n\nexports.DOMTimeStamp = exports[\"unsigned long long\"];\n", "\"use strict\";\n\n// Returns \"Type(value) is Object\" in ES terminology.\nfunction isObject(value) {\n  return (typeof value === \"object\" && value !== null) || typeof value === \"function\";\n}\n\nconst hasOwn = Function.prototype.call.bind(Object.prototype.hasOwnProperty);\n\n// Like `Object.assign`, but using `[[GetOwnProperty]]` and `[[DefineOwnProperty]]`\n// instead of `[[Get]]` and `[[Set]]` and only allowing objects\nfunction define(target, source) {\n  for (const key of Reflect.ownKeys(source)) {\n    const descriptor = Reflect.getOwnPropertyDescriptor(source, key);\n    if (descriptor && !Reflect.defineProperty(target, key, descriptor)) {\n      throw new TypeError(`Cannot redefine property: ${String(key)}`);\n    }\n  }\n}\n\nfunction newObjectInRealm(globalObject, object) {\n  const ctorRegistry = initCtorRegistry(globalObject);\n  return Object.defineProperties(\n    Object.create(ctorRegistry[\"%Object.prototype%\"]),\n    Object.getOwnPropertyDescriptors(object)\n  );\n}\n\nconst wrapperSymbol = Symbol(\"wrapper\");\nconst implSymbol = Symbol(\"impl\");\nconst sameObjectCaches = Symbol(\"SameObject caches\");\nconst ctorRegistrySymbol = Symbol.for(\"[webidl2js] constructor registry\");\n\nconst AsyncIteratorPrototype = Object.getPrototypeOf(Object.getPrototypeOf(async function* () {}).prototype);\n\nfunction initCtorRegistry(globalObject) {\n  if (hasOwn(globalObject, ctorRegistrySymbol)) {\n    return globalObject[ctorRegistrySymbol];\n  }\n\n  const ctorRegistry = Object.create(null);\n\n  // In addition to registering all the WebIDL2JS-generated types in the constructor registry,\n  // we also register a few intrinsics that we make use of in generated code, since they are not\n  // easy to grab from the globalObject variable.\n  ctorRegistry[\"%Object.prototype%\"] = globalObject.Object.prototype;\n  ctorRegistry[\"%IteratorPrototype%\"] = Object.getPrototypeOf(\n    Object.getPrototypeOf(new globalObject.Array()[Symbol.iterator]())\n  );\n\n  try {\n    ctorRegistry[\"%AsyncIteratorPrototype%\"] = Object.getPrototypeOf(\n      Object.getPrototypeOf(\n        globalObject.eval(\"(async function* () {})\").prototype\n      )\n    );\n  } catch {\n    ctorRegistry[\"%AsyncIteratorPrototype%\"] = AsyncIteratorPrototype;\n  }\n\n  globalObject[ctorRegistrySymbol] = ctorRegistry;\n  return ctorRegistry;\n}\n\nfunction getSameObject(wrapper, prop, creator) {\n  if (!wrapper[sameObjectCaches]) {\n    wrapper[sameObjectCaches] = Object.create(null);\n  }\n\n  if (prop in wrapper[sameObjectCaches]) {\n    return wrapper[sameObjectCaches][prop];\n  }\n\n  wrapper[sameObjectCaches][prop] = creator();\n  return wrapper[sameObjectCaches][prop];\n}\n\nfunction wrapperForImpl(impl) {\n  return impl ? impl[wrapperSymbol] : null;\n}\n\nfunction implForWrapper(wrapper) {\n  return wrapper ? wrapper[implSymbol] : null;\n}\n\nfunction tryWrapperForImpl(impl) {\n  const wrapper = wrapperForImpl(impl);\n  return wrapper ? wrapper : impl;\n}\n\nfunction tryImplForWrapper(wrapper) {\n  const impl = implForWrapper(wrapper);\n  return impl ? impl : wrapper;\n}\n\nconst iterInternalSymbol = Symbol(\"internal\");\n\nfunction isArrayIndexPropName(P) {\n  if (typeof P !== \"string\") {\n    return false;\n  }\n  const i = P >>> 0;\n  if (i === 2 ** 32 - 1) {\n    return false;\n  }\n  const s = `${i}`;\n  if (P !== s) {\n    return false;\n  }\n  return true;\n}\n\nconst byteLengthGetter =\n    Object.getOwnPropertyDescriptor(ArrayBuffer.prototype, \"byteLength\").get;\nfunction isArrayBuffer(value) {\n  try {\n    byteLengthGetter.call(value);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction iteratorResult([key, value], kind) {\n  let result;\n  switch (kind) {\n    case \"key\":\n      result = key;\n      break;\n    case \"value\":\n      result = value;\n      break;\n    case \"key+value\":\n      result = [key, value];\n      break;\n  }\n  return { value: result, done: false };\n}\n\nconst supportsPropertyIndex = Symbol(\"supports property index\");\nconst supportedPropertyIndices = Symbol(\"supported property indices\");\nconst supportsPropertyName = Symbol(\"supports property name\");\nconst supportedPropertyNames = Symbol(\"supported property names\");\nconst indexedGet = Symbol(\"indexed property get\");\nconst indexedSetNew = Symbol(\"indexed property set new\");\nconst indexedSetExisting = Symbol(\"indexed property set existing\");\nconst namedGet = Symbol(\"named property get\");\nconst namedSetNew = Symbol(\"named property set new\");\nconst namedSetExisting = Symbol(\"named property set existing\");\nconst namedDelete = Symbol(\"named property delete\");\n\nconst asyncIteratorNext = Symbol(\"async iterator get the next iteration result\");\nconst asyncIteratorReturn = Symbol(\"async iterator return steps\");\nconst asyncIteratorInit = Symbol(\"async iterator initialization steps\");\nconst asyncIteratorEOI = Symbol(\"async iterator end of iteration\");\n\nmodule.exports = exports = {\n  isObject,\n  hasOwn,\n  define,\n  newObjectInRealm,\n  wrapperSymbol,\n  implSymbol,\n  getSameObject,\n  ctorRegistrySymbol,\n  initCtorRegistry,\n  wrapperForImpl,\n  implForWrapper,\n  tryWrapperForImpl,\n  tryImplForWrapper,\n  iterInternalSymbol,\n  isArrayBuffer,\n  isArrayIndexPropName,\n  supportsPropertyIndex,\n  supportedPropertyIndices,\n  supportsPropertyName,\n  supportedPropertyNames,\n  indexedGet,\n  indexedSetNew,\n  indexedSetExisting,\n  namedGet,\n  namedSetNew,\n  namedSetExisting,\n  namedDelete,\n  asyncIteratorNext,\n  asyncIteratorReturn,\n  asyncIteratorInit,\n  asyncIteratorEOI,\n  iteratorResult\n};\n", "'use strict';\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexPunycode = /^xn--/;\nconst regexNonASCII = /[^\\0-\\x7E]/; // non-ASCII chars\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nconst errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\nconst floor = Math.floor;\nconst stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, fn) {\n\tconst result = [];\n\tlet length = array.length;\n\twhile (length--) {\n\t\tresult[length] = fn(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {Array} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(string, fn) {\n\tconst parts = string.split('@');\n\tlet result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tstring = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tstring = string.replace(regexSeparators, '\\x2E');\n\tconst labels = string.split('.');\n\tconst encoded = map(labels, fn).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tconst output = [];\n\tlet counter = 0;\n\tconst length = string.length;\n\twhile (counter < length) {\n\t\tconst value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tconst extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nconst ucs2encode = array => String.fromCodePoint(...array);\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nconst basicToDigit = function(codePoint) {\n\tif (codePoint - 0x30 < 0x0A) {\n\t\treturn codePoint - 0x16;\n\t}\n\tif (codePoint - 0x41 < 0x1A) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint - 0x61 < 0x1A) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nconst digitToBasic = function(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nconst adapt = function(delta, numPoints, firstTime) {\n\tlet k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nconst decode = function(input) {\n\t// Don't use UCS-2.\n\tconst output = [];\n\tconst inputLength = input.length;\n\tlet i = 0;\n\tlet n = initialN;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tlet basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (let j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (let index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tlet oldi = i;\n\t\tfor (let w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\n\t\t\tconst digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\n\t\t}\n\n\t\tconst out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\n\t}\n\n\treturn String.fromCodePoint(...output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nconst encode = function(input) {\n\tconst output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tlet inputLength = input.length;\n\n\t// Initialize the state.\n\tlet n = initialN;\n\tlet delta = 0;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points.\n\tfor (const currentValue of input) {\n\t\tif (currentValue < 0x80) {\n\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t}\n\t}\n\n\tlet basicLength = output.length;\n\tlet handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tlet m = maxInt;\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\tm = currentValue;\n\t\t\t}\n\t\t}\n\n\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t// but guard against overflow.\n\t\tconst handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\t\t\tif (currentValue == n) {\n\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\tlet q = delta;\n\t\t\t\tfor (let k = base; /* no condition */; k += base) {\n\t\t\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst qMinusT = q - t;\n\t\t\t\t\tconst baseMinusT = base - t;\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t);\n\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t}\n\n\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\tdelta = 0;\n\t\t\t\t++handledCPCount;\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nconst toUnicode = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexPunycode.test(string)\n\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t: string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nconst toASCII = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexNonASCII.test(string)\n\t\t\t? 'xn--' + encode(string)\n\t\t\t: string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nconst punycode = {\n\t/**\n\t * A string representing the current Punycode.js version number.\n\t * @memberOf punycode\n\t * @type String\n\t */\n\t'version': '2.1.0',\n\t/**\n\t * An object of methods to convert from JavaScript's internal character\n\t * representation (UCS-2) to Unicode code points, and back.\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode\n\t * @type Object\n\t */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\nmodule.exports = punycode;\n", "\"use strict\";\n\nconst combiningMarks = /[\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u0898-\\u089F\\u08CA-\\u08E1\\u08E3-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u09FE\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0AFA-\\u0AFF\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B55-\\u0B57\\u0B62\\u0B63\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0C00-\\u0C04\\u0C3C\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0D00-\\u0D03\\u0D3B\\u0D3C\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D81-\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F\\u109A-\\u109D\\u135D-\\u135F\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u180B-\\u180D\\u180F\\u1885\\u1886\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F\\u1AB0-\\u1ACE\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF4\\u1CF7-\\u1CF9\\u1DC0-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA82C\\uA880\\uA881\\uA8B4-\\uA8C5\\uA8E0-\\uA8F1\\uA8FF\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9E5\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\u{101FD}\\u{102E0}\\u{10376}-\\u{1037A}\\u{10A01}-\\u{10A03}\\u{10A05}\\u{10A06}\\u{10A0C}-\\u{10A0F}\\u{10A38}-\\u{10A3A}\\u{10A3F}\\u{10AE5}\\u{10AE6}\\u{10D24}-\\u{10D27}\\u{10EAB}\\u{10EAC}\\u{10F46}-\\u{10F50}\\u{10F82}-\\u{10F85}\\u{11000}-\\u{11002}\\u{11038}-\\u{11046}\\u{11070}\\u{11073}\\u{11074}\\u{1107F}-\\u{11082}\\u{110B0}-\\u{110BA}\\u{110C2}\\u{11100}-\\u{11102}\\u{11127}-\\u{11134}\\u{11145}\\u{11146}\\u{11173}\\u{11180}-\\u{11182}\\u{111B3}-\\u{111C0}\\u{111C9}-\\u{111CC}\\u{111CE}\\u{111CF}\\u{1122C}-\\u{11237}\\u{1123E}\\u{112DF}-\\u{112EA}\\u{11300}-\\u{11303}\\u{1133B}\\u{1133C}\\u{1133E}-\\u{11344}\\u{11347}\\u{11348}\\u{1134B}-\\u{1134D}\\u{11357}\\u{11362}\\u{11363}\\u{11366}-\\u{1136C}\\u{11370}-\\u{11374}\\u{11435}-\\u{11446}\\u{1145E}\\u{114B0}-\\u{114C3}\\u{115AF}-\\u{115B5}\\u{115B8}-\\u{115C0}\\u{115DC}\\u{115DD}\\u{11630}-\\u{11640}\\u{116AB}-\\u{116B7}\\u{1171D}-\\u{1172B}\\u{1182C}-\\u{1183A}\\u{11930}-\\u{11935}\\u{11937}\\u{11938}\\u{1193B}-\\u{1193E}\\u{11940}\\u{11942}\\u{11943}\\u{119D1}-\\u{119D7}\\u{119DA}-\\u{119E0}\\u{119E4}\\u{11A01}-\\u{11A0A}\\u{11A33}-\\u{11A39}\\u{11A3B}-\\u{11A3E}\\u{11A47}\\u{11A51}-\\u{11A5B}\\u{11A8A}-\\u{11A99}\\u{11C2F}-\\u{11C36}\\u{11C38}-\\u{11C3F}\\u{11C92}-\\u{11CA7}\\u{11CA9}-\\u{11CB6}\\u{11D31}-\\u{11D36}\\u{11D3A}\\u{11D3C}\\u{11D3D}\\u{11D3F}-\\u{11D45}\\u{11D47}\\u{11D8A}-\\u{11D8E}\\u{11D90}\\u{11D91}\\u{11D93}-\\u{11D97}\\u{11EF3}-\\u{11EF6}\\u{16AF0}-\\u{16AF4}\\u{16B30}-\\u{16B36}\\u{16F4F}\\u{16F51}-\\u{16F87}\\u{16F8F}-\\u{16F92}\\u{16FE4}\\u{16FF0}\\u{16FF1}\\u{1BC9D}\\u{1BC9E}\\u{1CF00}-\\u{1CF2D}\\u{1CF30}-\\u{1CF46}\\u{1D165}-\\u{1D169}\\u{1D16D}-\\u{1D172}\\u{1D17B}-\\u{1D182}\\u{1D185}-\\u{1D18B}\\u{1D1AA}-\\u{1D1AD}\\u{1D242}-\\u{1D244}\\u{1DA00}-\\u{1DA36}\\u{1DA3B}-\\u{1DA6C}\\u{1DA75}\\u{1DA84}\\u{1DA9B}-\\u{1DA9F}\\u{1DAA1}-\\u{1DAAF}\\u{1E000}-\\u{1E006}\\u{1E008}-\\u{1E018}\\u{1E01B}-\\u{1E021}\\u{1E023}\\u{1E024}\\u{1E026}-\\u{1E02A}\\u{1E130}-\\u{1E136}\\u{1E2AE}\\u{1E2EC}-\\u{1E2EF}\\u{1E8D0}-\\u{1E8D6}\\u{1E944}-\\u{1E94A}\\u{E0100}-\\u{E01EF}]/u;\nconst combiningClassVirama = /[\\u094D\\u09CD\\u0A4D\\u0ACD\\u0B4D\\u0BCD\\u0C4D\\u0CCD\\u0D3B\\u0D3C\\u0D4D\\u0DCA\\u0E3A\\u0EBA\\u0F84\\u1039\\u103A\\u1714\\u1734\\u17D2\\u1A60\\u1B44\\u1BAA\\u1BAB\\u1BF2\\u1BF3\\u2D7F\\uA806\\uA8C4\\uA953\\uA9C0\\uAAF6\\uABED\\u{10A3F}\\u{11046}\\u{1107F}\\u{110B9}\\u{11133}\\u{11134}\\u{111C0}\\u{11235}\\u{112EA}\\u{1134D}\\u{11442}\\u{114C2}\\u{115BF}\\u{1163F}\\u{116B6}\\u{1172B}\\u{11839}\\u{119E0}\\u{11A34}\\u{11A47}\\u{11A99}\\u{11C3F}\\u{11D44}\\u{11D45}\\u{11D97}]/u;\nconst validZWNJ = /[\\u0620\\u0626\\u0628\\u062A-\\u062E\\u0633-\\u063F\\u0641-\\u0647\\u0649\\u064A\\u066E\\u066F\\u0678-\\u0687\\u069A-\\u06BF\\u06C1\\u06C2\\u06CC\\u06CE\\u06D0\\u06D1\\u06FA-\\u06FC\\u06FF\\u0712-\\u0714\\u071A-\\u071D\\u071F-\\u0727\\u0729\\u072B\\u072D\\u072E\\u074E-\\u0758\\u075C-\\u076A\\u076D-\\u0770\\u0772\\u0775-\\u0777\\u077A-\\u077F\\u07CA-\\u07EA\\u0841-\\u0845\\u0848\\u084A-\\u0853\\u0855\\u0860\\u0862-\\u0865\\u0868\\u08A0-\\u08A9\\u08AF\\u08B0\\u08B3\\u08B4\\u08B6-\\u08B8\\u08BA-\\u08BD\\u1807\\u1820-\\u1878\\u1887-\\u18A8\\u18AA\\uA840-\\uA872\\u{10AC0}-\\u{10AC4}\\u{10ACD}\\u{10AD3}-\\u{10ADC}\\u{10ADE}-\\u{10AE0}\\u{10AEB}-\\u{10AEE}\\u{10B80}\\u{10B82}\\u{10B86}-\\u{10B88}\\u{10B8A}\\u{10B8B}\\u{10B8D}\\u{10B90}\\u{10BAD}\\u{10BAE}\\u{10D00}-\\u{10D21}\\u{10D23}\\u{10F30}-\\u{10F32}\\u{10F34}-\\u{10F44}\\u{10F51}-\\u{10F53}\\u{1E900}-\\u{1E943}][\\xAD\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u061C\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u070F\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08D3-\\u08E1\\u08E3-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u09FE\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0AFA-\\u0AFF\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0C00\\u0C04\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81\\u0CBC\\u0CBF\\u0CC6\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D00\\u0D01\\u0D3B\\u0D3C\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4\\u17B5\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DD\\u180B-\\u180D\\u1885\\u1886\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1A17\\u1A18\\u1A1B\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1AB0-\\u1ABE\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1BAB-\\u1BAD\\u1BE6\\u1BE8\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF9\\u1DFB-\\u1DFF\\u200B\\u200E\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u206A-\\u206F\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302D\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA8C4\\uA8C5\\uA8E0-\\uA8F1\\uA8FF\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uA9BD\\uA9E5\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAA7C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEC\\uAAED\\uAAF6\\uABE5\\uABE8\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFEFF\\uFFF9-\\uFFFB\\u{101FD}\\u{102E0}\\u{10376}-\\u{1037A}\\u{10A01}-\\u{10A03}\\u{10A05}\\u{10A06}\\u{10A0C}-\\u{10A0F}\\u{10A38}-\\u{10A3A}\\u{10A3F}\\u{10AE5}\\u{10AE6}\\u{10D24}-\\u{10D27}\\u{10F46}-\\u{10F50}\\u{11001}\\u{11038}-\\u{11046}\\u{1107F}-\\u{11081}\\u{110B3}-\\u{110B6}\\u{110B9}\\u{110BA}\\u{11100}-\\u{11102}\\u{11127}-\\u{1112B}\\u{1112D}-\\u{11134}\\u{11173}\\u{11180}\\u{11181}\\u{111B6}-\\u{111BE}\\u{111C9}-\\u{111CC}\\u{1122F}-\\u{11231}\\u{11234}\\u{11236}\\u{11237}\\u{1123E}\\u{112DF}\\u{112E3}-\\u{112EA}\\u{11300}\\u{11301}\\u{1133B}\\u{1133C}\\u{11340}\\u{11366}-\\u{1136C}\\u{11370}-\\u{11374}\\u{11438}-\\u{1143F}\\u{11442}-\\u{11444}\\u{11446}\\u{1145E}\\u{114B3}-\\u{114B8}\\u{114BA}\\u{114BF}\\u{114C0}\\u{114C2}\\u{114C3}\\u{115B2}-\\u{115B5}\\u{115BC}\\u{115BD}\\u{115BF}\\u{115C0}\\u{115DC}\\u{115DD}\\u{11633}-\\u{1163A}\\u{1163D}\\u{1163F}\\u{11640}\\u{116AB}\\u{116AD}\\u{116B0}-\\u{116B5}\\u{116B7}\\u{1171D}-\\u{1171F}\\u{11722}-\\u{11725}\\u{11727}-\\u{1172B}\\u{1182F}-\\u{11837}\\u{11839}\\u{1183A}\\u{119D4}-\\u{119D7}\\u{119DA}\\u{119DB}\\u{119E0}\\u{11A01}-\\u{11A0A}\\u{11A33}-\\u{11A38}\\u{11A3B}-\\u{11A3E}\\u{11A47}\\u{11A51}-\\u{11A56}\\u{11A59}-\\u{11A5B}\\u{11A8A}-\\u{11A96}\\u{11A98}\\u{11A99}\\u{11C30}-\\u{11C36}\\u{11C38}-\\u{11C3D}\\u{11C3F}\\u{11C92}-\\u{11CA7}\\u{11CAA}-\\u{11CB0}\\u{11CB2}\\u{11CB3}\\u{11CB5}\\u{11CB6}\\u{11D31}-\\u{11D36}\\u{11D3A}\\u{11D3C}\\u{11D3D}\\u{11D3F}-\\u{11D45}\\u{11D47}\\u{11D90}\\u{11D91}\\u{11D95}\\u{11D97}\\u{11EF3}\\u{11EF4}\\u{13430}-\\u{13438}\\u{16AF0}-\\u{16AF4}\\u{16B30}-\\u{16B36}\\u{16F4F}\\u{16F8F}-\\u{16F92}\\u{1BC9D}\\u{1BC9E}\\u{1BCA0}-\\u{1BCA3}\\u{1D167}-\\u{1D169}\\u{1D173}-\\u{1D182}\\u{1D185}-\\u{1D18B}\\u{1D1AA}-\\u{1D1AD}\\u{1D242}-\\u{1D244}\\u{1DA00}-\\u{1DA36}\\u{1DA3B}-\\u{1DA6C}\\u{1DA75}\\u{1DA84}\\u{1DA9B}-\\u{1DA9F}\\u{1DAA1}-\\u{1DAAF}\\u{1E000}-\\u{1E006}\\u{1E008}-\\u{1E018}\\u{1E01B}-\\u{1E021}\\u{1E023}\\u{1E024}\\u{1E026}-\\u{1E02A}\\u{1E130}-\\u{1E136}\\u{1E2EC}-\\u{1E2EF}\\u{1E8D0}-\\u{1E8D6}\\u{1E944}-\\u{1E94B}\\u{E0001}\\u{E0020}-\\u{E007F}\\u{E0100}-\\u{E01EF}]*\\u200C[\\xAD\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u061C\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u070F\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08D3-\\u08E1\\u08E3-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u09FE\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0AFA-\\u0AFF\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0C00\\u0C04\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81\\u0CBC\\u0CBF\\u0CC6\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D00\\u0D01\\u0D3B\\u0D3C\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4\\u17B5\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DD\\u180B-\\u180D\\u1885\\u1886\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1A17\\u1A18\\u1A1B\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1AB0-\\u1ABE\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1BAB-\\u1BAD\\u1BE6\\u1BE8\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF9\\u1DFB-\\u1DFF\\u200B\\u200E\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u206A-\\u206F\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302D\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA8C4\\uA8C5\\uA8E0-\\uA8F1\\uA8FF\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uA9BD\\uA9E5\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAA7C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEC\\uAAED\\uAAF6\\uABE5\\uABE8\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFEFF\\uFFF9-\\uFFFB\\u{101FD}\\u{102E0}\\u{10376}-\\u{1037A}\\u{10A01}-\\u{10A03}\\u{10A05}\\u{10A06}\\u{10A0C}-\\u{10A0F}\\u{10A38}-\\u{10A3A}\\u{10A3F}\\u{10AE5}\\u{10AE6}\\u{10D24}-\\u{10D27}\\u{10F46}-\\u{10F50}\\u{11001}\\u{11038}-\\u{11046}\\u{1107F}-\\u{11081}\\u{110B3}-\\u{110B6}\\u{110B9}\\u{110BA}\\u{11100}-\\u{11102}\\u{11127}-\\u{1112B}\\u{1112D}-\\u{11134}\\u{11173}\\u{11180}\\u{11181}\\u{111B6}-\\u{111BE}\\u{111C9}-\\u{111CC}\\u{1122F}-\\u{11231}\\u{11234}\\u{11236}\\u{11237}\\u{1123E}\\u{112DF}\\u{112E3}-\\u{112EA}\\u{11300}\\u{11301}\\u{1133B}\\u{1133C}\\u{11340}\\u{11366}-\\u{1136C}\\u{11370}-\\u{11374}\\u{11438}-\\u{1143F}\\u{11442}-\\u{11444}\\u{11446}\\u{1145E}\\u{114B3}-\\u{114B8}\\u{114BA}\\u{114BF}\\u{114C0}\\u{114C2}\\u{114C3}\\u{115B2}-\\u{115B5}\\u{115BC}\\u{115BD}\\u{115BF}\\u{115C0}\\u{115DC}\\u{115DD}\\u{11633}-\\u{1163A}\\u{1163D}\\u{1163F}\\u{11640}\\u{116AB}\\u{116AD}\\u{116B0}-\\u{116B5}\\u{116B7}\\u{1171D}-\\u{1171F}\\u{11722}-\\u{11725}\\u{11727}-\\u{1172B}\\u{1182F}-\\u{11837}\\u{11839}\\u{1183A}\\u{119D4}-\\u{119D7}\\u{119DA}\\u{119DB}\\u{119E0}\\u{11A01}-\\u{11A0A}\\u{11A33}-\\u{11A38}\\u{11A3B}-\\u{11A3E}\\u{11A47}\\u{11A51}-\\u{11A56}\\u{11A59}-\\u{11A5B}\\u{11A8A}-\\u{11A96}\\u{11A98}\\u{11A99}\\u{11C30}-\\u{11C36}\\u{11C38}-\\u{11C3D}\\u{11C3F}\\u{11C92}-\\u{11CA7}\\u{11CAA}-\\u{11CB0}\\u{11CB2}\\u{11CB3}\\u{11CB5}\\u{11CB6}\\u{11D31}-\\u{11D36}\\u{11D3A}\\u{11D3C}\\u{11D3D}\\u{11D3F}-\\u{11D45}\\u{11D47}\\u{11D90}\\u{11D91}\\u{11D95}\\u{11D97}\\u{11EF3}\\u{11EF4}\\u{13430}-\\u{13438}\\u{16AF0}-\\u{16AF4}\\u{16B30}-\\u{16B36}\\u{16F4F}\\u{16F8F}-\\u{16F92}\\u{1BC9D}\\u{1BC9E}\\u{1BCA0}-\\u{1BCA3}\\u{1D167}-\\u{1D169}\\u{1D173}-\\u{1D182}\\u{1D185}-\\u{1D18B}\\u{1D1AA}-\\u{1D1AD}\\u{1D242}-\\u{1D244}\\u{1DA00}-\\u{1DA36}\\u{1DA3B}-\\u{1DA6C}\\u{1DA75}\\u{1DA84}\\u{1DA9B}-\\u{1DA9F}\\u{1DAA1}-\\u{1DAAF}\\u{1E000}-\\u{1E006}\\u{1E008}-\\u{1E018}\\u{1E01B}-\\u{1E021}\\u{1E023}\\u{1E024}\\u{1E026}-\\u{1E02A}\\u{1E130}-\\u{1E136}\\u{1E2EC}-\\u{1E2EF}\\u{1E8D0}-\\u{1E8D6}\\u{1E944}-\\u{1E94B}\\u{E0001}\\u{E0020}-\\u{E007F}\\u{E0100}-\\u{E01EF}]*[\\u0620\\u0622-\\u063F\\u0641-\\u064A\\u066E\\u066F\\u0671-\\u0673\\u0675-\\u06D3\\u06D5\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u077F\\u07CA-\\u07EA\\u0840-\\u0855\\u0860\\u0862-\\u0865\\u0867-\\u086A\\u08A0-\\u08AC\\u08AE-\\u08B4\\u08B6-\\u08BD\\u1807\\u1820-\\u1878\\u1887-\\u18A8\\u18AA\\uA840-\\uA871\\u{10AC0}-\\u{10AC5}\\u{10AC7}\\u{10AC9}\\u{10ACA}\\u{10ACE}-\\u{10AD6}\\u{10AD8}-\\u{10AE1}\\u{10AE4}\\u{10AEB}-\\u{10AEF}\\u{10B80}-\\u{10B91}\\u{10BA9}-\\u{10BAE}\\u{10D01}-\\u{10D23}\\u{10F30}-\\u{10F44}\\u{10F51}-\\u{10F54}\\u{1E900}-\\u{1E943}]/u;\nconst bidiDomain = /[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05EA\\u05EF-\\u05F4\\u0600-\\u0605\\u0608\\u060B\\u060D\\u061B-\\u064A\\u0660-\\u0669\\u066B-\\u066F\\u0671-\\u06D5\\u06DD\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u070D\\u070F\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07C0-\\u07EA\\u07F4\\u07F5\\u07FA\\u07FE-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u083E\\u0840-\\u0858\\u085E\\u0860-\\u086A\\u0870-\\u088E\\u0890\\u0891\\u08A0-\\u08C9\\u08E2\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBC2\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFC\\uFE70-\\uFE74\\uFE76-\\uFEFC\\u{10800}-\\u{10805}\\u{10808}\\u{1080A}-\\u{10835}\\u{10837}\\u{10838}\\u{1083C}\\u{1083F}-\\u{10855}\\u{10857}-\\u{1089E}\\u{108A7}-\\u{108AF}\\u{108E0}-\\u{108F2}\\u{108F4}\\u{108F5}\\u{108FB}-\\u{1091B}\\u{10920}-\\u{10939}\\u{1093F}\\u{10980}-\\u{109B7}\\u{109BC}-\\u{109CF}\\u{109D2}-\\u{10A00}\\u{10A10}-\\u{10A13}\\u{10A15}-\\u{10A17}\\u{10A19}-\\u{10A35}\\u{10A40}-\\u{10A48}\\u{10A50}-\\u{10A58}\\u{10A60}-\\u{10A9F}\\u{10AC0}-\\u{10AE4}\\u{10AEB}-\\u{10AF6}\\u{10B00}-\\u{10B35}\\u{10B40}-\\u{10B55}\\u{10B58}-\\u{10B72}\\u{10B78}-\\u{10B91}\\u{10B99}-\\u{10B9C}\\u{10BA9}-\\u{10BAF}\\u{10C00}-\\u{10C48}\\u{10C80}-\\u{10CB2}\\u{10CC0}-\\u{10CF2}\\u{10CFA}-\\u{10D23}\\u{10D30}-\\u{10D39}\\u{10E60}-\\u{10E7E}\\u{10E80}-\\u{10EA9}\\u{10EAD}\\u{10EB0}\\u{10EB1}\\u{10F00}-\\u{10F27}\\u{10F30}-\\u{10F45}\\u{10F51}-\\u{10F59}\\u{10F70}-\\u{10F81}\\u{10F86}-\\u{10F89}\\u{10FB0}-\\u{10FCB}\\u{10FE0}-\\u{10FF6}\\u{1E800}-\\u{1E8C4}\\u{1E8C7}-\\u{1E8CF}\\u{1E900}-\\u{1E943}\\u{1E94B}\\u{1E950}-\\u{1E959}\\u{1E95E}\\u{1E95F}\\u{1EC71}-\\u{1ECB4}\\u{1ED01}-\\u{1ED3D}\\u{1EE00}-\\u{1EE03}\\u{1EE05}-\\u{1EE1F}\\u{1EE21}\\u{1EE22}\\u{1EE24}\\u{1EE27}\\u{1EE29}-\\u{1EE32}\\u{1EE34}-\\u{1EE37}\\u{1EE39}\\u{1EE3B}\\u{1EE42}\\u{1EE47}\\u{1EE49}\\u{1EE4B}\\u{1EE4D}-\\u{1EE4F}\\u{1EE51}\\u{1EE52}\\u{1EE54}\\u{1EE57}\\u{1EE59}\\u{1EE5B}\\u{1EE5D}\\u{1EE5F}\\u{1EE61}\\u{1EE62}\\u{1EE64}\\u{1EE67}-\\u{1EE6A}\\u{1EE6C}-\\u{1EE72}\\u{1EE74}-\\u{1EE77}\\u{1EE79}-\\u{1EE7C}\\u{1EE7E}\\u{1EE80}-\\u{1EE89}\\u{1EE8B}-\\u{1EE9B}\\u{1EEA1}-\\u{1EEA3}\\u{1EEA5}-\\u{1EEA9}\\u{1EEAB}-\\u{1EEBB}]/u;\nconst bidiS1LTR = /[A-Za-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02B8\\u02BB-\\u02C1\\u02D0\\u02D1\\u02E0-\\u02E4\\u02EE\\u0370-\\u0373\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0482\\u048A-\\u052F\\u0531-\\u0556\\u0559-\\u0589\\u0903-\\u0939\\u093B\\u093D-\\u0940\\u0949-\\u094C\\u094E-\\u0950\\u0958-\\u0961\\u0964-\\u0980\\u0982\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD-\\u09C0\\u09C7\\u09C8\\u09CB\\u09CC\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E1\\u09E6-\\u09F1\\u09F4-\\u09FA\\u09FC\\u09FD\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3E-\\u0A40\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A6F\\u0A72-\\u0A74\\u0A76\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD-\\u0AC0\\u0AC9\\u0ACB\\u0ACC\\u0AD0\\u0AE0\\u0AE1\\u0AE6-\\u0AF0\\u0AF9\\u0B02\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B3E\\u0B40\\u0B47\\u0B48\\u0B4B\\u0B4C\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B66-\\u0B77\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE\\u0BBF\\u0BC1\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCC\\u0BD0\\u0BD7\\u0BE6-\\u0BF2\\u0C01-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C41-\\u0C44\\u0C58-\\u0C5A\\u0C5D\\u0C60\\u0C61\\u0C66-\\u0C6F\\u0C77\\u0C7F\\u0C80\\u0C82-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA\\u0CCB\\u0CD5\\u0CD6\\u0CDD\\u0CDE\\u0CE0\\u0CE1\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D02-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D40\\u0D46-\\u0D48\\u0D4A-\\u0D4C\\u0D4E\\u0D4F\\u0D54-\\u0D61\\u0D66-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCF-\\u0DD1\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2-\\u0DF4\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E4F-\\u0E5B\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00-\\u0F17\\u0F1A-\\u0F34\\u0F36\\u0F38\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F7F\\u0F85\\u0F88-\\u0F8C\\u0FBE-\\u0FC5\\u0FC7-\\u0FCC\\u0FCE-\\u0FDA\\u1000-\\u102C\\u1031\\u1038\\u103B\\u103C\\u103F-\\u1057\\u105A-\\u105D\\u1061-\\u1070\\u1075-\\u1081\\u1083\\u1084\\u1087-\\u108C\\u108E-\\u109C\\u109E-\\u10C5\\u10C7\\u10CD\\u10D0-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1360-\\u137C\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u167F\\u1681-\\u169A\\u16A0-\\u16F8\\u1700-\\u1711\\u1715\\u171F-\\u1731\\u1734-\\u1736\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17B6\\u17BE-\\u17C5\\u17C7\\u17C8\\u17D4-\\u17DA\\u17DC\\u17E0-\\u17E9\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1923-\\u1926\\u1929-\\u192B\\u1930\\u1931\\u1933-\\u1938\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A16\\u1A19\\u1A1A\\u1A1E-\\u1A55\\u1A57\\u1A61\\u1A63\\u1A64\\u1A6D-\\u1A72\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1AA0-\\u1AAD\\u1B04-\\u1B33\\u1B35\\u1B3B\\u1B3D-\\u1B41\\u1B43-\\u1B4C\\u1B50-\\u1B6A\\u1B74-\\u1B7E\\u1B82-\\u1BA1\\u1BA6\\u1BA7\\u1BAA\\u1BAE-\\u1BE5\\u1BE7\\u1BEA-\\u1BEC\\u1BEE\\u1BF2\\u1BF3\\u1BFC-\\u1C2B\\u1C34\\u1C35\\u1C3B-\\u1C49\\u1C4D-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CC7\\u1CD3\\u1CE1\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5-\\u1CF7\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200E\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u214F\\u2160-\\u2188\\u2336-\\u237A\\u2395\\u249C-\\u24E9\\u26AC\\u2800-\\u28FF\\u2C00-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D70\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u302E\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3190-\\u31BF\\u31F0-\\u321C\\u3220-\\u324F\\u3260-\\u327B\\u327F-\\u32B0\\u32C0-\\u32CB\\u32D0-\\u3376\\u337B-\\u33DD\\u33E0-\\u33FE\\u3400-\\u4DBF\\u4E00-\\uA48C\\uA4D0-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66E\\uA680-\\uA69D\\uA6A0-\\uA6EF\\uA6F2-\\uA6F7\\uA722-\\uA787\\uA789-\\uA7CA\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7D9\\uA7F2-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA824\\uA827\\uA830-\\uA837\\uA840-\\uA873\\uA880-\\uA8C3\\uA8CE-\\uA8D9\\uA8F2-\\uA8FE\\uA900-\\uA925\\uA92E-\\uA946\\uA952\\uA953\\uA95F-\\uA97C\\uA983-\\uA9B2\\uA9B4\\uA9B5\\uA9BA\\uA9BB\\uA9BE-\\uA9CD\\uA9CF-\\uA9D9\\uA9DE-\\uA9E4\\uA9E6-\\uA9FE\\uAA00-\\uAA28\\uAA2F\\uAA30\\uAA33\\uAA34\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA4D\\uAA50-\\uAA59\\uAA5C-\\uAA7B\\uAA7D-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAAEB\\uAAEE-\\uAAF5\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB69\\uAB70-\\uABE4\\uABE6\\uABE7\\uABE9-\\uABEC\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uD800-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC\\u{10000}-\\u{1000B}\\u{1000D}-\\u{10026}\\u{10028}-\\u{1003A}\\u{1003C}\\u{1003D}\\u{1003F}-\\u{1004D}\\u{10050}-\\u{1005D}\\u{10080}-\\u{100FA}\\u{10100}\\u{10102}\\u{10107}-\\u{10133}\\u{10137}-\\u{1013F}\\u{1018D}\\u{1018E}\\u{101D0}-\\u{101FC}\\u{10280}-\\u{1029C}\\u{102A0}-\\u{102D0}\\u{10300}-\\u{10323}\\u{1032D}-\\u{1034A}\\u{10350}-\\u{10375}\\u{10380}-\\u{1039D}\\u{1039F}-\\u{103C3}\\u{103C8}-\\u{103D5}\\u{10400}-\\u{1049D}\\u{104A0}-\\u{104A9}\\u{104B0}-\\u{104D3}\\u{104D8}-\\u{104FB}\\u{10500}-\\u{10527}\\u{10530}-\\u{10563}\\u{1056F}-\\u{1057A}\\u{1057C}-\\u{1058A}\\u{1058C}-\\u{10592}\\u{10594}\\u{10595}\\u{10597}-\\u{105A1}\\u{105A3}-\\u{105B1}\\u{105B3}-\\u{105B9}\\u{105BB}\\u{105BC}\\u{10600}-\\u{10736}\\u{10740}-\\u{10755}\\u{10760}-\\u{10767}\\u{10780}-\\u{10785}\\u{10787}-\\u{107B0}\\u{107B2}-\\u{107BA}\\u{11000}\\u{11002}-\\u{11037}\\u{11047}-\\u{1104D}\\u{11066}-\\u{1106F}\\u{11071}\\u{11072}\\u{11075}\\u{11082}-\\u{110B2}\\u{110B7}\\u{110B8}\\u{110BB}-\\u{110C1}\\u{110CD}\\u{110D0}-\\u{110E8}\\u{110F0}-\\u{110F9}\\u{11103}-\\u{11126}\\u{1112C}\\u{11136}-\\u{11147}\\u{11150}-\\u{11172}\\u{11174}-\\u{11176}\\u{11182}-\\u{111B5}\\u{111BF}-\\u{111C8}\\u{111CD}\\u{111CE}\\u{111D0}-\\u{111DF}\\u{111E1}-\\u{111F4}\\u{11200}-\\u{11211}\\u{11213}-\\u{1122E}\\u{11232}\\u{11233}\\u{11235}\\u{11238}-\\u{1123D}\\u{11280}-\\u{11286}\\u{11288}\\u{1128A}-\\u{1128D}\\u{1128F}-\\u{1129D}\\u{1129F}-\\u{112A9}\\u{112B0}-\\u{112DE}\\u{112E0}-\\u{112E2}\\u{112F0}-\\u{112F9}\\u{11302}\\u{11303}\\u{11305}-\\u{1130C}\\u{1130F}\\u{11310}\\u{11313}-\\u{11328}\\u{1132A}-\\u{11330}\\u{11332}\\u{11333}\\u{11335}-\\u{11339}\\u{1133D}-\\u{1133F}\\u{11341}-\\u{11344}\\u{11347}\\u{11348}\\u{1134B}-\\u{1134D}\\u{11350}\\u{11357}\\u{1135D}-\\u{11363}\\u{11400}-\\u{11437}\\u{11440}\\u{11441}\\u{11445}\\u{11447}-\\u{1145B}\\u{1145D}\\u{1145F}-\\u{11461}\\u{11480}-\\u{114B2}\\u{114B9}\\u{114BB}-\\u{114BE}\\u{114C1}\\u{114C4}-\\u{114C7}\\u{114D0}-\\u{114D9}\\u{11580}-\\u{115B1}\\u{115B8}-\\u{115BB}\\u{115BE}\\u{115C1}-\\u{115DB}\\u{11600}-\\u{11632}\\u{1163B}\\u{1163C}\\u{1163E}\\u{11641}-\\u{11644}\\u{11650}-\\u{11659}\\u{11680}-\\u{116AA}\\u{116AC}\\u{116AE}\\u{116AF}\\u{116B6}\\u{116B8}\\u{116B9}\\u{116C0}-\\u{116C9}\\u{11700}-\\u{1171A}\\u{11720}\\u{11721}\\u{11726}\\u{11730}-\\u{11746}\\u{11800}-\\u{1182E}\\u{11838}\\u{1183B}\\u{118A0}-\\u{118F2}\\u{118FF}-\\u{11906}\\u{11909}\\u{1190C}-\\u{11913}\\u{11915}\\u{11916}\\u{11918}-\\u{11935}\\u{11937}\\u{11938}\\u{1193D}\\u{1193F}-\\u{11942}\\u{11944}-\\u{11946}\\u{11950}-\\u{11959}\\u{119A0}-\\u{119A7}\\u{119AA}-\\u{119D3}\\u{119DC}-\\u{119DF}\\u{119E1}-\\u{119E4}\\u{11A00}\\u{11A07}\\u{11A08}\\u{11A0B}-\\u{11A32}\\u{11A39}\\u{11A3A}\\u{11A3F}-\\u{11A46}\\u{11A50}\\u{11A57}\\u{11A58}\\u{11A5C}-\\u{11A89}\\u{11A97}\\u{11A9A}-\\u{11AA2}\\u{11AB0}-\\u{11AF8}\\u{11C00}-\\u{11C08}\\u{11C0A}-\\u{11C2F}\\u{11C3E}-\\u{11C45}\\u{11C50}-\\u{11C6C}\\u{11C70}-\\u{11C8F}\\u{11CA9}\\u{11CB1}\\u{11CB4}\\u{11D00}-\\u{11D06}\\u{11D08}\\u{11D09}\\u{11D0B}-\\u{11D30}\\u{11D46}\\u{11D50}-\\u{11D59}\\u{11D60}-\\u{11D65}\\u{11D67}\\u{11D68}\\u{11D6A}-\\u{11D8E}\\u{11D93}\\u{11D94}\\u{11D96}\\u{11D98}\\u{11DA0}-\\u{11DA9}\\u{11EE0}-\\u{11EF2}\\u{11EF5}-\\u{11EF8}\\u{11FB0}\\u{11FC0}-\\u{11FD4}\\u{11FFF}-\\u{12399}\\u{12400}-\\u{1246E}\\u{12470}-\\u{12474}\\u{12480}-\\u{12543}\\u{12F90}-\\u{12FF2}\\u{13000}-\\u{1342E}\\u{13430}-\\u{13438}\\u{14400}-\\u{14646}\\u{16800}-\\u{16A38}\\u{16A40}-\\u{16A5E}\\u{16A60}-\\u{16A69}\\u{16A6E}-\\u{16ABE}\\u{16AC0}-\\u{16AC9}\\u{16AD0}-\\u{16AED}\\u{16AF5}\\u{16B00}-\\u{16B2F}\\u{16B37}-\\u{16B45}\\u{16B50}-\\u{16B59}\\u{16B5B}-\\u{16B61}\\u{16B63}-\\u{16B77}\\u{16B7D}-\\u{16B8F}\\u{16E40}-\\u{16E9A}\\u{16F00}-\\u{16F4A}\\u{16F50}-\\u{16F87}\\u{16F93}-\\u{16F9F}\\u{16FE0}\\u{16FE1}\\u{16FE3}\\u{16FF0}\\u{16FF1}\\u{17000}-\\u{187F7}\\u{18800}-\\u{18CD5}\\u{18D00}-\\u{18D08}\\u{1AFF0}-\\u{1AFF3}\\u{1AFF5}-\\u{1AFFB}\\u{1AFFD}\\u{1AFFE}\\u{1B000}-\\u{1B122}\\u{1B150}-\\u{1B152}\\u{1B164}-\\u{1B167}\\u{1B170}-\\u{1B2FB}\\u{1BC00}-\\u{1BC6A}\\u{1BC70}-\\u{1BC7C}\\u{1BC80}-\\u{1BC88}\\u{1BC90}-\\u{1BC99}\\u{1BC9C}\\u{1BC9F}\\u{1CF50}-\\u{1CFC3}\\u{1D000}-\\u{1D0F5}\\u{1D100}-\\u{1D126}\\u{1D129}-\\u{1D166}\\u{1D16A}-\\u{1D172}\\u{1D183}\\u{1D184}\\u{1D18C}-\\u{1D1A9}\\u{1D1AE}-\\u{1D1E8}\\u{1D2E0}-\\u{1D2F3}\\u{1D360}-\\u{1D378}\\u{1D400}-\\u{1D454}\\u{1D456}-\\u{1D49C}\\u{1D49E}\\u{1D49F}\\u{1D4A2}\\u{1D4A5}\\u{1D4A6}\\u{1D4A9}-\\u{1D4AC}\\u{1D4AE}-\\u{1D4B9}\\u{1D4BB}\\u{1D4BD}-\\u{1D4C3}\\u{1D4C5}-\\u{1D505}\\u{1D507}-\\u{1D50A}\\u{1D50D}-\\u{1D514}\\u{1D516}-\\u{1D51C}\\u{1D51E}-\\u{1D539}\\u{1D53B}-\\u{1D53E}\\u{1D540}-\\u{1D544}\\u{1D546}\\u{1D54A}-\\u{1D550}\\u{1D552}-\\u{1D6A5}\\u{1D6A8}-\\u{1D6DA}\\u{1D6DC}-\\u{1D714}\\u{1D716}-\\u{1D74E}\\u{1D750}-\\u{1D788}\\u{1D78A}-\\u{1D7C2}\\u{1D7C4}-\\u{1D7CB}\\u{1D800}-\\u{1D9FF}\\u{1DA37}-\\u{1DA3A}\\u{1DA6D}-\\u{1DA74}\\u{1DA76}-\\u{1DA83}\\u{1DA85}-\\u{1DA8B}\\u{1DF00}-\\u{1DF1E}\\u{1E100}-\\u{1E12C}\\u{1E137}-\\u{1E13D}\\u{1E140}-\\u{1E149}\\u{1E14E}\\u{1E14F}\\u{1E290}-\\u{1E2AD}\\u{1E2C0}-\\u{1E2EB}\\u{1E2F0}-\\u{1E2F9}\\u{1E7E0}-\\u{1E7E6}\\u{1E7E8}-\\u{1E7EB}\\u{1E7ED}\\u{1E7EE}\\u{1E7F0}-\\u{1E7FE}\\u{1F110}-\\u{1F12E}\\u{1F130}-\\u{1F169}\\u{1F170}-\\u{1F1AC}\\u{1F1E6}-\\u{1F202}\\u{1F210}-\\u{1F23B}\\u{1F240}-\\u{1F248}\\u{1F250}\\u{1F251}\\u{20000}-\\u{2A6DF}\\u{2A700}-\\u{2B738}\\u{2B740}-\\u{2B81D}\\u{2B820}-\\u{2CEA1}\\u{2CEB0}-\\u{2EBE0}\\u{2F800}-\\u{2FA1D}\\u{30000}-\\u{3134A}\\u{F0000}-\\u{FFFFD}\\u{100000}-\\u{10FFFD}]/u;\nconst bidiS1RTL = /[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05EA\\u05EF-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u070D\\u070F\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07C0-\\u07EA\\u07F4\\u07F5\\u07FA\\u07FE-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u083E\\u0840-\\u0858\\u085E\\u0860-\\u086A\\u0870-\\u088E\\u08A0-\\u08C9\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBC2\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFC\\uFE70-\\uFE74\\uFE76-\\uFEFC\\u{10800}-\\u{10805}\\u{10808}\\u{1080A}-\\u{10835}\\u{10837}\\u{10838}\\u{1083C}\\u{1083F}-\\u{10855}\\u{10857}-\\u{1089E}\\u{108A7}-\\u{108AF}\\u{108E0}-\\u{108F2}\\u{108F4}\\u{108F5}\\u{108FB}-\\u{1091B}\\u{10920}-\\u{10939}\\u{1093F}\\u{10980}-\\u{109B7}\\u{109BC}-\\u{109CF}\\u{109D2}-\\u{10A00}\\u{10A10}-\\u{10A13}\\u{10A15}-\\u{10A17}\\u{10A19}-\\u{10A35}\\u{10A40}-\\u{10A48}\\u{10A50}-\\u{10A58}\\u{10A60}-\\u{10A9F}\\u{10AC0}-\\u{10AE4}\\u{10AEB}-\\u{10AF6}\\u{10B00}-\\u{10B35}\\u{10B40}-\\u{10B55}\\u{10B58}-\\u{10B72}\\u{10B78}-\\u{10B91}\\u{10B99}-\\u{10B9C}\\u{10BA9}-\\u{10BAF}\\u{10C00}-\\u{10C48}\\u{10C80}-\\u{10CB2}\\u{10CC0}-\\u{10CF2}\\u{10CFA}-\\u{10D23}\\u{10E80}-\\u{10EA9}\\u{10EAD}\\u{10EB0}\\u{10EB1}\\u{10F00}-\\u{10F27}\\u{10F30}-\\u{10F45}\\u{10F51}-\\u{10F59}\\u{10F70}-\\u{10F81}\\u{10F86}-\\u{10F89}\\u{10FB0}-\\u{10FCB}\\u{10FE0}-\\u{10FF6}\\u{1E800}-\\u{1E8C4}\\u{1E8C7}-\\u{1E8CF}\\u{1E900}-\\u{1E943}\\u{1E94B}\\u{1E950}-\\u{1E959}\\u{1E95E}\\u{1E95F}\\u{1EC71}-\\u{1ECB4}\\u{1ED01}-\\u{1ED3D}\\u{1EE00}-\\u{1EE03}\\u{1EE05}-\\u{1EE1F}\\u{1EE21}\\u{1EE22}\\u{1EE24}\\u{1EE27}\\u{1EE29}-\\u{1EE32}\\u{1EE34}-\\u{1EE37}\\u{1EE39}\\u{1EE3B}\\u{1EE42}\\u{1EE47}\\u{1EE49}\\u{1EE4B}\\u{1EE4D}-\\u{1EE4F}\\u{1EE51}\\u{1EE52}\\u{1EE54}\\u{1EE57}\\u{1EE59}\\u{1EE5B}\\u{1EE5D}\\u{1EE5F}\\u{1EE61}\\u{1EE62}\\u{1EE64}\\u{1EE67}-\\u{1EE6A}\\u{1EE6C}-\\u{1EE72}\\u{1EE74}-\\u{1EE77}\\u{1EE79}-\\u{1EE7C}\\u{1EE7E}\\u{1EE80}-\\u{1EE89}\\u{1EE8B}-\\u{1EE9B}\\u{1EEA1}-\\u{1EEA3}\\u{1EEA5}-\\u{1EEA9}\\u{1EEAB}-\\u{1EEBB}]/u;\nconst bidiS2 = /^[\\0-\\x08\\x0E-\\x1B!-@\\[-`\\{-\\x84\\x86-\\xA9\\xAB-\\xB4\\xB6-\\xB9\\xBB-\\xBF\\xD7\\xF7\\u02B9\\u02BA\\u02C2-\\u02CF\\u02D2-\\u02DF\\u02E5-\\u02ED\\u02EF-\\u036F\\u0374\\u0375\\u037E\\u0384\\u0385\\u0387\\u03F6\\u0483-\\u0489\\u058A\\u058D-\\u058F\\u0591-\\u05C7\\u05D0-\\u05EA\\u05EF-\\u05F4\\u0600-\\u070D\\u070F-\\u074A\\u074D-\\u07B1\\u07C0-\\u07FA\\u07FD-\\u082D\\u0830-\\u083E\\u0840-\\u085B\\u085E\\u0860-\\u086A\\u0870-\\u088E\\u0890\\u0891\\u0898-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u09F2\\u09F3\\u09FB\\u09FE\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0AF1\\u0AFA-\\u0AFF\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B55\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0BF3-\\u0BFA\\u0C00\\u0C04\\u0C3C\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C78-\\u0C7E\\u0C81\\u0CBC\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D00\\u0D01\\u0D3B\\u0D3C\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0D81\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E3F\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39-\\u0F3D\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1390-\\u1399\\u1400\\u169B\\u169C\\u1712-\\u1714\\u1732\\u1733\\u1752\\u1753\\u1772\\u1773\\u17B4\\u17B5\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DB\\u17DD\\u17F0-\\u17F9\\u1800-\\u180F\\u1885\\u1886\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1940\\u1944\\u1945\\u19DE-\\u19FF\\u1A17\\u1A18\\u1A1B\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1AB0-\\u1ACE\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1BAB-\\u1BAD\\u1BE6\\u1BE8\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DFF\\u1FBD\\u1FBF-\\u1FC1\\u1FCD-\\u1FCF\\u1FDD-\\u1FDF\\u1FED-\\u1FEF\\u1FFD\\u1FFE\\u200B-\\u200D\\u200F-\\u2027\\u202F-\\u205E\\u2060-\\u2064\\u206A-\\u2070\\u2074-\\u207E\\u2080-\\u208E\\u20A0-\\u20C0\\u20D0-\\u20F0\\u2100\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u2140-\\u2144\\u214A-\\u214D\\u2150-\\u215F\\u2189-\\u218B\\u2190-\\u2335\\u237B-\\u2394\\u2396-\\u2426\\u2440-\\u244A\\u2460-\\u249B\\u24EA-\\u26AB\\u26AD-\\u27FF\\u2900-\\u2B73\\u2B76-\\u2B95\\u2B97-\\u2BFF\\u2CE5-\\u2CEA\\u2CEF-\\u2CF1\\u2CF9-\\u2CFF\\u2D7F\\u2DE0-\\u2E5D\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u2FF0-\\u2FFB\\u3001-\\u3004\\u3008-\\u3020\\u302A-\\u302D\\u3030\\u3036\\u3037\\u303D-\\u303F\\u3099-\\u309C\\u30A0\\u30FB\\u31C0-\\u31E3\\u321D\\u321E\\u3250-\\u325F\\u327C-\\u327E\\u32B1-\\u32BF\\u32CC-\\u32CF\\u3377-\\u337A\\u33DE\\u33DF\\u33FF\\u4DC0-\\u4DFF\\uA490-\\uA4C6\\uA60D-\\uA60F\\uA66F-\\uA67F\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA700-\\uA721\\uA788\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA828-\\uA82C\\uA838\\uA839\\uA874-\\uA877\\uA8C4\\uA8C5\\uA8E0-\\uA8F1\\uA8FF\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uA9BD\\uA9E5\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAA7C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEC\\uAAED\\uAAF6\\uAB6A\\uAB6B\\uABE5\\uABE8\\uABED\\uFB1D-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBC2\\uFBD3-\\uFD8F\\uFD92-\\uFDC7\\uFDCF\\uFDF0-\\uFE19\\uFE20-\\uFE52\\uFE54-\\uFE66\\uFE68-\\uFE6B\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFEFF\\uFF01-\\uFF20\\uFF3B-\\uFF40\\uFF5B-\\uFF65\\uFFE0-\\uFFE6\\uFFE8-\\uFFEE\\uFFF9-\\uFFFD\\u{10101}\\u{10140}-\\u{1018C}\\u{10190}-\\u{1019C}\\u{101A0}\\u{101FD}\\u{102E0}-\\u{102FB}\\u{10376}-\\u{1037A}\\u{10800}-\\u{10805}\\u{10808}\\u{1080A}-\\u{10835}\\u{10837}\\u{10838}\\u{1083C}\\u{1083F}-\\u{10855}\\u{10857}-\\u{1089E}\\u{108A7}-\\u{108AF}\\u{108E0}-\\u{108F2}\\u{108F4}\\u{108F5}\\u{108FB}-\\u{1091B}\\u{1091F}-\\u{10939}\\u{1093F}\\u{10980}-\\u{109B7}\\u{109BC}-\\u{109CF}\\u{109D2}-\\u{10A03}\\u{10A05}\\u{10A06}\\u{10A0C}-\\u{10A13}\\u{10A15}-\\u{10A17}\\u{10A19}-\\u{10A35}\\u{10A38}-\\u{10A3A}\\u{10A3F}-\\u{10A48}\\u{10A50}-\\u{10A58}\\u{10A60}-\\u{10A9F}\\u{10AC0}-\\u{10AE6}\\u{10AEB}-\\u{10AF6}\\u{10B00}-\\u{10B35}\\u{10B39}-\\u{10B55}\\u{10B58}-\\u{10B72}\\u{10B78}-\\u{10B91}\\u{10B99}-\\u{10B9C}\\u{10BA9}-\\u{10BAF}\\u{10C00}-\\u{10C48}\\u{10C80}-\\u{10CB2}\\u{10CC0}-\\u{10CF2}\\u{10CFA}-\\u{10D27}\\u{10D30}-\\u{10D39}\\u{10E60}-\\u{10E7E}\\u{10E80}-\\u{10EA9}\\u{10EAB}-\\u{10EAD}\\u{10EB0}\\u{10EB1}\\u{10F00}-\\u{10F27}\\u{10F30}-\\u{10F59}\\u{10F70}-\\u{10F89}\\u{10FB0}-\\u{10FCB}\\u{10FE0}-\\u{10FF6}\\u{11001}\\u{11038}-\\u{11046}\\u{11052}-\\u{11065}\\u{11070}\\u{11073}\\u{11074}\\u{1107F}-\\u{11081}\\u{110B3}-\\u{110B6}\\u{110B9}\\u{110BA}\\u{110C2}\\u{11100}-\\u{11102}\\u{11127}-\\u{1112B}\\u{1112D}-\\u{11134}\\u{11173}\\u{11180}\\u{11181}\\u{111B6}-\\u{111BE}\\u{111C9}-\\u{111CC}\\u{111CF}\\u{1122F}-\\u{11231}\\u{11234}\\u{11236}\\u{11237}\\u{1123E}\\u{112DF}\\u{112E3}-\\u{112EA}\\u{11300}\\u{11301}\\u{1133B}\\u{1133C}\\u{11340}\\u{11366}-\\u{1136C}\\u{11370}-\\u{11374}\\u{11438}-\\u{1143F}\\u{11442}-\\u{11444}\\u{11446}\\u{1145E}\\u{114B3}-\\u{114B8}\\u{114BA}\\u{114BF}\\u{114C0}\\u{114C2}\\u{114C3}\\u{115B2}-\\u{115B5}\\u{115BC}\\u{115BD}\\u{115BF}\\u{115C0}\\u{115DC}\\u{115DD}\\u{11633}-\\u{1163A}\\u{1163D}\\u{1163F}\\u{11640}\\u{11660}-\\u{1166C}\\u{116AB}\\u{116AD}\\u{116B0}-\\u{116B5}\\u{116B7}\\u{1171D}-\\u{1171F}\\u{11722}-\\u{11725}\\u{11727}-\\u{1172B}\\u{1182F}-\\u{11837}\\u{11839}\\u{1183A}\\u{1193B}\\u{1193C}\\u{1193E}\\u{11943}\\u{119D4}-\\u{119D7}\\u{119DA}\\u{119DB}\\u{119E0}\\u{11A01}-\\u{11A06}\\u{11A09}\\u{11A0A}\\u{11A33}-\\u{11A38}\\u{11A3B}-\\u{11A3E}\\u{11A47}\\u{11A51}-\\u{11A56}\\u{11A59}-\\u{11A5B}\\u{11A8A}-\\u{11A96}\\u{11A98}\\u{11A99}\\u{11C30}-\\u{11C36}\\u{11C38}-\\u{11C3D}\\u{11C92}-\\u{11CA7}\\u{11CAA}-\\u{11CB0}\\u{11CB2}\\u{11CB3}\\u{11CB5}\\u{11CB6}\\u{11D31}-\\u{11D36}\\u{11D3A}\\u{11D3C}\\u{11D3D}\\u{11D3F}-\\u{11D45}\\u{11D47}\\u{11D90}\\u{11D91}\\u{11D95}\\u{11D97}\\u{11EF3}\\u{11EF4}\\u{11FD5}-\\u{11FF1}\\u{16AF0}-\\u{16AF4}\\u{16B30}-\\u{16B36}\\u{16F4F}\\u{16F8F}-\\u{16F92}\\u{16FE2}\\u{16FE4}\\u{1BC9D}\\u{1BC9E}\\u{1BCA0}-\\u{1BCA3}\\u{1CF00}-\\u{1CF2D}\\u{1CF30}-\\u{1CF46}\\u{1D167}-\\u{1D169}\\u{1D173}-\\u{1D182}\\u{1D185}-\\u{1D18B}\\u{1D1AA}-\\u{1D1AD}\\u{1D1E9}\\u{1D1EA}\\u{1D200}-\\u{1D245}\\u{1D300}-\\u{1D356}\\u{1D6DB}\\u{1D715}\\u{1D74F}\\u{1D789}\\u{1D7C3}\\u{1D7CE}-\\u{1D7FF}\\u{1DA00}-\\u{1DA36}\\u{1DA3B}-\\u{1DA6C}\\u{1DA75}\\u{1DA84}\\u{1DA9B}-\\u{1DA9F}\\u{1DAA1}-\\u{1DAAF}\\u{1E000}-\\u{1E006}\\u{1E008}-\\u{1E018}\\u{1E01B}-\\u{1E021}\\u{1E023}\\u{1E024}\\u{1E026}-\\u{1E02A}\\u{1E130}-\\u{1E136}\\u{1E2AE}\\u{1E2EC}-\\u{1E2EF}\\u{1E2FF}\\u{1E800}-\\u{1E8C4}\\u{1E8C7}-\\u{1E8D6}\\u{1E900}-\\u{1E94B}\\u{1E950}-\\u{1E959}\\u{1E95E}\\u{1E95F}\\u{1EC71}-\\u{1ECB4}\\u{1ED01}-\\u{1ED3D}\\u{1EE00}-\\u{1EE03}\\u{1EE05}-\\u{1EE1F}\\u{1EE21}\\u{1EE22}\\u{1EE24}\\u{1EE27}\\u{1EE29}-\\u{1EE32}\\u{1EE34}-\\u{1EE37}\\u{1EE39}\\u{1EE3B}\\u{1EE42}\\u{1EE47}\\u{1EE49}\\u{1EE4B}\\u{1EE4D}-\\u{1EE4F}\\u{1EE51}\\u{1EE52}\\u{1EE54}\\u{1EE57}\\u{1EE59}\\u{1EE5B}\\u{1EE5D}\\u{1EE5F}\\u{1EE61}\\u{1EE62}\\u{1EE64}\\u{1EE67}-\\u{1EE6A}\\u{1EE6C}-\\u{1EE72}\\u{1EE74}-\\u{1EE77}\\u{1EE79}-\\u{1EE7C}\\u{1EE7E}\\u{1EE80}-\\u{1EE89}\\u{1EE8B}-\\u{1EE9B}\\u{1EEA1}-\\u{1EEA3}\\u{1EEA5}-\\u{1EEA9}\\u{1EEAB}-\\u{1EEBB}\\u{1EEF0}\\u{1EEF1}\\u{1F000}-\\u{1F02B}\\u{1F030}-\\u{1F093}\\u{1F0A0}-\\u{1F0AE}\\u{1F0B1}-\\u{1F0BF}\\u{1F0C1}-\\u{1F0CF}\\u{1F0D1}-\\u{1F0F5}\\u{1F100}-\\u{1F10F}\\u{1F12F}\\u{1F16A}-\\u{1F16F}\\u{1F1AD}\\u{1F260}-\\u{1F265}\\u{1F300}-\\u{1F6D7}\\u{1F6DD}-\\u{1F6EC}\\u{1F6F0}-\\u{1F6FC}\\u{1F700}-\\u{1F773}\\u{1F780}-\\u{1F7D8}\\u{1F7E0}-\\u{1F7EB}\\u{1F7F0}\\u{1F800}-\\u{1F80B}\\u{1F810}-\\u{1F847}\\u{1F850}-\\u{1F859}\\u{1F860}-\\u{1F887}\\u{1F890}-\\u{1F8AD}\\u{1F8B0}\\u{1F8B1}\\u{1F900}-\\u{1FA53}\\u{1FA60}-\\u{1FA6D}\\u{1FA70}-\\u{1FA74}\\u{1FA78}-\\u{1FA7C}\\u{1FA80}-\\u{1FA86}\\u{1FA90}-\\u{1FAAC}\\u{1FAB0}-\\u{1FABA}\\u{1FAC0}-\\u{1FAC5}\\u{1FAD0}-\\u{1FAD9}\\u{1FAE0}-\\u{1FAE7}\\u{1FAF0}-\\u{1FAF6}\\u{1FB00}-\\u{1FB92}\\u{1FB94}-\\u{1FBCA}\\u{1FBF0}-\\u{1FBF9}\\u{E0001}\\u{E0020}-\\u{E007F}\\u{E0100}-\\u{E01EF}]*$/u;\nconst bidiS3 = /[0-9\\xB2\\xB3\\xB9\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05EA\\u05EF-\\u05F4\\u0600-\\u0605\\u0608\\u060B\\u060D\\u061B-\\u064A\\u0660-\\u0669\\u066B-\\u066F\\u0671-\\u06D5\\u06DD\\u06E5\\u06E6\\u06EE-\\u070D\\u070F\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07C0-\\u07EA\\u07F4\\u07F5\\u07FA\\u07FE-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u083E\\u0840-\\u0858\\u085E\\u0860-\\u086A\\u0870-\\u088E\\u0890\\u0891\\u08A0-\\u08C9\\u08E2\\u200F\\u2070\\u2074-\\u2079\\u2080-\\u2089\\u2488-\\u249B\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBC2\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFC\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\u{102E1}-\\u{102FB}\\u{10800}-\\u{10805}\\u{10808}\\u{1080A}-\\u{10835}\\u{10837}\\u{10838}\\u{1083C}\\u{1083F}-\\u{10855}\\u{10857}-\\u{1089E}\\u{108A7}-\\u{108AF}\\u{108E0}-\\u{108F2}\\u{108F4}\\u{108F5}\\u{108FB}-\\u{1091B}\\u{10920}-\\u{10939}\\u{1093F}\\u{10980}-\\u{109B7}\\u{109BC}-\\u{109CF}\\u{109D2}-\\u{10A00}\\u{10A10}-\\u{10A13}\\u{10A15}-\\u{10A17}\\u{10A19}-\\u{10A35}\\u{10A40}-\\u{10A48}\\u{10A50}-\\u{10A58}\\u{10A60}-\\u{10A9F}\\u{10AC0}-\\u{10AE4}\\u{10AEB}-\\u{10AF6}\\u{10B00}-\\u{10B35}\\u{10B40}-\\u{10B55}\\u{10B58}-\\u{10B72}\\u{10B78}-\\u{10B91}\\u{10B99}-\\u{10B9C}\\u{10BA9}-\\u{10BAF}\\u{10C00}-\\u{10C48}\\u{10C80}-\\u{10CB2}\\u{10CC0}-\\u{10CF2}\\u{10CFA}-\\u{10D23}\\u{10D30}-\\u{10D39}\\u{10E60}-\\u{10E7E}\\u{10E80}-\\u{10EA9}\\u{10EAD}\\u{10EB0}\\u{10EB1}\\u{10F00}-\\u{10F27}\\u{10F30}-\\u{10F45}\\u{10F51}-\\u{10F59}\\u{10F70}-\\u{10F81}\\u{10F86}-\\u{10F89}\\u{10FB0}-\\u{10FCB}\\u{10FE0}-\\u{10FF6}\\u{1D7CE}-\\u{1D7FF}\\u{1E800}-\\u{1E8C4}\\u{1E8C7}-\\u{1E8CF}\\u{1E900}-\\u{1E943}\\u{1E94B}\\u{1E950}-\\u{1E959}\\u{1E95E}\\u{1E95F}\\u{1EC71}-\\u{1ECB4}\\u{1ED01}-\\u{1ED3D}\\u{1EE00}-\\u{1EE03}\\u{1EE05}-\\u{1EE1F}\\u{1EE21}\\u{1EE22}\\u{1EE24}\\u{1EE27}\\u{1EE29}-\\u{1EE32}\\u{1EE34}-\\u{1EE37}\\u{1EE39}\\u{1EE3B}\\u{1EE42}\\u{1EE47}\\u{1EE49}\\u{1EE4B}\\u{1EE4D}-\\u{1EE4F}\\u{1EE51}\\u{1EE52}\\u{1EE54}\\u{1EE57}\\u{1EE59}\\u{1EE5B}\\u{1EE5D}\\u{1EE5F}\\u{1EE61}\\u{1EE62}\\u{1EE64}\\u{1EE67}-\\u{1EE6A}\\u{1EE6C}-\\u{1EE72}\\u{1EE74}-\\u{1EE77}\\u{1EE79}-\\u{1EE7C}\\u{1EE7E}\\u{1EE80}-\\u{1EE89}\\u{1EE8B}-\\u{1EE9B}\\u{1EEA1}-\\u{1EEA3}\\u{1EEA5}-\\u{1EEA9}\\u{1EEAB}-\\u{1EEBB}\\u{1F100}-\\u{1F10A}\\u{1FBF0}-\\u{1FBF9}][\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u0898-\\u089F\\u08CA-\\u08E1\\u08E3-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u09FE\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0AFA-\\u0AFF\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B55\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0C00\\u0C04\\u0C3C\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81\\u0CBC\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D00\\u0D01\\u0D3B\\u0D3C\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0D81\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732\\u1733\\u1752\\u1753\\u1772\\u1773\\u17B4\\u17B5\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DD\\u180B-\\u180D\\u180F\\u1885\\u1886\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1A17\\u1A18\\u1A1B\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1AB0-\\u1ACE\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1BAB-\\u1BAD\\u1BE6\\u1BE8\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302D\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA82C\\uA8C4\\uA8C5\\uA8E0-\\uA8F1\\uA8FF\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uA9BD\\uA9E5\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAA7C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEC\\uAAED\\uAAF6\\uABE5\\uABE8\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\u{101FD}\\u{102E0}\\u{10376}-\\u{1037A}\\u{10A01}-\\u{10A03}\\u{10A05}\\u{10A06}\\u{10A0C}-\\u{10A0F}\\u{10A38}-\\u{10A3A}\\u{10A3F}\\u{10AE5}\\u{10AE6}\\u{10D24}-\\u{10D27}\\u{10EAB}\\u{10EAC}\\u{10F46}-\\u{10F50}\\u{10F82}-\\u{10F85}\\u{11001}\\u{11038}-\\u{11046}\\u{11070}\\u{11073}\\u{11074}\\u{1107F}-\\u{11081}\\u{110B3}-\\u{110B6}\\u{110B9}\\u{110BA}\\u{110C2}\\u{11100}-\\u{11102}\\u{11127}-\\u{1112B}\\u{1112D}-\\u{11134}\\u{11173}\\u{11180}\\u{11181}\\u{111B6}-\\u{111BE}\\u{111C9}-\\u{111CC}\\u{111CF}\\u{1122F}-\\u{11231}\\u{11234}\\u{11236}\\u{11237}\\u{1123E}\\u{112DF}\\u{112E3}-\\u{112EA}\\u{11300}\\u{11301}\\u{1133B}\\u{1133C}\\u{11340}\\u{11366}-\\u{1136C}\\u{11370}-\\u{11374}\\u{11438}-\\u{1143F}\\u{11442}-\\u{11444}\\u{11446}\\u{1145E}\\u{114B3}-\\u{114B8}\\u{114BA}\\u{114BF}\\u{114C0}\\u{114C2}\\u{114C3}\\u{115B2}-\\u{115B5}\\u{115BC}\\u{115BD}\\u{115BF}\\u{115C0}\\u{115DC}\\u{115DD}\\u{11633}-\\u{1163A}\\u{1163D}\\u{1163F}\\u{11640}\\u{116AB}\\u{116AD}\\u{116B0}-\\u{116B5}\\u{116B7}\\u{1171D}-\\u{1171F}\\u{11722}-\\u{11725}\\u{11727}-\\u{1172B}\\u{1182F}-\\u{11837}\\u{11839}\\u{1183A}\\u{1193B}\\u{1193C}\\u{1193E}\\u{11943}\\u{119D4}-\\u{119D7}\\u{119DA}\\u{119DB}\\u{119E0}\\u{11A01}-\\u{11A06}\\u{11A09}\\u{11A0A}\\u{11A33}-\\u{11A38}\\u{11A3B}-\\u{11A3E}\\u{11A47}\\u{11A51}-\\u{11A56}\\u{11A59}-\\u{11A5B}\\u{11A8A}-\\u{11A96}\\u{11A98}\\u{11A99}\\u{11C30}-\\u{11C36}\\u{11C38}-\\u{11C3D}\\u{11C92}-\\u{11CA7}\\u{11CAA}-\\u{11CB0}\\u{11CB2}\\u{11CB3}\\u{11CB5}\\u{11CB6}\\u{11D31}-\\u{11D36}\\u{11D3A}\\u{11D3C}\\u{11D3D}\\u{11D3F}-\\u{11D45}\\u{11D47}\\u{11D90}\\u{11D91}\\u{11D95}\\u{11D97}\\u{11EF3}\\u{11EF4}\\u{16AF0}-\\u{16AF4}\\u{16B30}-\\u{16B36}\\u{16F4F}\\u{16F8F}-\\u{16F92}\\u{16FE4}\\u{1BC9D}\\u{1BC9E}\\u{1CF00}-\\u{1CF2D}\\u{1CF30}-\\u{1CF46}\\u{1D167}-\\u{1D169}\\u{1D17B}-\\u{1D182}\\u{1D185}-\\u{1D18B}\\u{1D1AA}-\\u{1D1AD}\\u{1D242}-\\u{1D244}\\u{1DA00}-\\u{1DA36}\\u{1DA3B}-\\u{1DA6C}\\u{1DA75}\\u{1DA84}\\u{1DA9B}-\\u{1DA9F}\\u{1DAA1}-\\u{1DAAF}\\u{1E000}-\\u{1E006}\\u{1E008}-\\u{1E018}\\u{1E01B}-\\u{1E021}\\u{1E023}\\u{1E024}\\u{1E026}-\\u{1E02A}\\u{1E130}-\\u{1E136}\\u{1E2AE}\\u{1E2EC}-\\u{1E2EF}\\u{1E8D0}-\\u{1E8D6}\\u{1E944}-\\u{1E94A}\\u{E0100}-\\u{E01EF}]*$/u;\nconst bidiS4EN = /[0-9\\xB2\\xB3\\xB9\\u06F0-\\u06F9\\u2070\\u2074-\\u2079\\u2080-\\u2089\\u2488-\\u249B\\uFF10-\\uFF19\\u{102E1}-\\u{102FB}\\u{1D7CE}-\\u{1D7FF}\\u{1F100}-\\u{1F10A}\\u{1FBF0}-\\u{1FBF9}]/u;\nconst bidiS4AN = /[\\u0600-\\u0605\\u0660-\\u0669\\u066B\\u066C\\u06DD\\u0890\\u0891\\u08E2\\u{10D30}-\\u{10D39}\\u{10E60}-\\u{10E7E}]/u;\nconst bidiS5 = /^[\\0-\\x08\\x0E-\\x1B!-\\x84\\x86-\\u0377\\u037A-\\u037F\\u0384-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u052F\\u0531-\\u0556\\u0559-\\u058A\\u058D-\\u058F\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0606\\u0607\\u0609\\u060A\\u060C\\u060E-\\u061A\\u064B-\\u065F\\u066A\\u0670\\u06D6-\\u06DC\\u06DE-\\u06E4\\u06E7-\\u06ED\\u06F0-\\u06F9\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u07F6-\\u07F9\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u0898-\\u089F\\u08CA-\\u08E1\\u08E3-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09FE\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A76\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AF1\\u0AF9-\\u0AFF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B55-\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B77\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BFA\\u0C00-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3C-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C5D\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C77-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDD\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D00-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4F\\u0D54-\\u0D63\\u0D66-\\u0D7F\\u0D81-\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2-\\u0DF4\\u0E01-\\u0E3A\\u0E3F-\\u0E5B\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F97\\u0F99-\\u0FBC\\u0FBE-\\u0FCC\\u0FCE-\\u0FDA\\u1000-\\u10C5\\u10C7\\u10CD\\u10D0-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u137C\\u1380-\\u1399\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1400-\\u167F\\u1681-\\u169C\\u16A0-\\u16F8\\u1700-\\u1715\\u171F-\\u1736\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17DD\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1800-\\u1819\\u1820-\\u1878\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1940\\u1944-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u19DE-\\u1A1B\\u1A1E-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA0-\\u1AAD\\u1AB0-\\u1ACE\\u1B00-\\u1B4C\\u1B50-\\u1B7E\\u1B80-\\u1BF3\\u1BFC-\\u1C37\\u1C3B-\\u1C49\\u1C4D-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CC7\\u1CD0-\\u1CFA\\u1D00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FC4\\u1FC6-\\u1FD3\\u1FD6-\\u1FDB\\u1FDD-\\u1FEF\\u1FF2-\\u1FF4\\u1FF6-\\u1FFE\\u200B-\\u200E\\u2010-\\u2027\\u202F-\\u205E\\u2060-\\u2064\\u206A-\\u2071\\u2074-\\u208E\\u2090-\\u209C\\u20A0-\\u20C0\\u20D0-\\u20F0\\u2100-\\u218B\\u2190-\\u2426\\u2440-\\u244A\\u2460-\\u2B73\\u2B76-\\u2B95\\u2B97-\\u2CF3\\u2CF9-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D70\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2E5D\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u2FF0-\\u2FFB\\u3001-\\u303F\\u3041-\\u3096\\u3099-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3190-\\u31E3\\u31F0-\\u321E\\u3220-\\uA48C\\uA490-\\uA4C6\\uA4D0-\\uA62B\\uA640-\\uA6F7\\uA700-\\uA7CA\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7D9\\uA7F2-\\uA82C\\uA830-\\uA839\\uA840-\\uA877\\uA880-\\uA8C5\\uA8CE-\\uA8D9\\uA8E0-\\uA953\\uA95F-\\uA97C\\uA980-\\uA9CD\\uA9CF-\\uA9D9\\uA9DE-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA5C-\\uAAC2\\uAADB-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB6B\\uAB70-\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uD800-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1E\\uFB29\\uFD3E-\\uFD4F\\uFDCF\\uFDFD-\\uFE19\\uFE20-\\uFE52\\uFE54-\\uFE66\\uFE68-\\uFE6B\\uFEFF\\uFF01-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC\\uFFE0-\\uFFE6\\uFFE8-\\uFFEE\\uFFF9-\\uFFFD\\u{10000}-\\u{1000B}\\u{1000D}-\\u{10026}\\u{10028}-\\u{1003A}\\u{1003C}\\u{1003D}\\u{1003F}-\\u{1004D}\\u{10050}-\\u{1005D}\\u{10080}-\\u{100FA}\\u{10100}-\\u{10102}\\u{10107}-\\u{10133}\\u{10137}-\\u{1018E}\\u{10190}-\\u{1019C}\\u{101A0}\\u{101D0}-\\u{101FD}\\u{10280}-\\u{1029C}\\u{102A0}-\\u{102D0}\\u{102E0}-\\u{102FB}\\u{10300}-\\u{10323}\\u{1032D}-\\u{1034A}\\u{10350}-\\u{1037A}\\u{10380}-\\u{1039D}\\u{1039F}-\\u{103C3}\\u{103C8}-\\u{103D5}\\u{10400}-\\u{1049D}\\u{104A0}-\\u{104A9}\\u{104B0}-\\u{104D3}\\u{104D8}-\\u{104FB}\\u{10500}-\\u{10527}\\u{10530}-\\u{10563}\\u{1056F}-\\u{1057A}\\u{1057C}-\\u{1058A}\\u{1058C}-\\u{10592}\\u{10594}\\u{10595}\\u{10597}-\\u{105A1}\\u{105A3}-\\u{105B1}\\u{105B3}-\\u{105B9}\\u{105BB}\\u{105BC}\\u{10600}-\\u{10736}\\u{10740}-\\u{10755}\\u{10760}-\\u{10767}\\u{10780}-\\u{10785}\\u{10787}-\\u{107B0}\\u{107B2}-\\u{107BA}\\u{1091F}\\u{10A01}-\\u{10A03}\\u{10A05}\\u{10A06}\\u{10A0C}-\\u{10A0F}\\u{10A38}-\\u{10A3A}\\u{10A3F}\\u{10AE5}\\u{10AE6}\\u{10B39}-\\u{10B3F}\\u{10D24}-\\u{10D27}\\u{10EAB}\\u{10EAC}\\u{10F46}-\\u{10F50}\\u{10F82}-\\u{10F85}\\u{11000}-\\u{1104D}\\u{11052}-\\u{11075}\\u{1107F}-\\u{110C2}\\u{110CD}\\u{110D0}-\\u{110E8}\\u{110F0}-\\u{110F9}\\u{11100}-\\u{11134}\\u{11136}-\\u{11147}\\u{11150}-\\u{11176}\\u{11180}-\\u{111DF}\\u{111E1}-\\u{111F4}\\u{11200}-\\u{11211}\\u{11213}-\\u{1123E}\\u{11280}-\\u{11286}\\u{11288}\\u{1128A}-\\u{1128D}\\u{1128F}-\\u{1129D}\\u{1129F}-\\u{112A9}\\u{112B0}-\\u{112EA}\\u{112F0}-\\u{112F9}\\u{11300}-\\u{11303}\\u{11305}-\\u{1130C}\\u{1130F}\\u{11310}\\u{11313}-\\u{11328}\\u{1132A}-\\u{11330}\\u{11332}\\u{11333}\\u{11335}-\\u{11339}\\u{1133B}-\\u{11344}\\u{11347}\\u{11348}\\u{1134B}-\\u{1134D}\\u{11350}\\u{11357}\\u{1135D}-\\u{11363}\\u{11366}-\\u{1136C}\\u{11370}-\\u{11374}\\u{11400}-\\u{1145B}\\u{1145D}-\\u{11461}\\u{11480}-\\u{114C7}\\u{114D0}-\\u{114D9}\\u{11580}-\\u{115B5}\\u{115B8}-\\u{115DD}\\u{11600}-\\u{11644}\\u{11650}-\\u{11659}\\u{11660}-\\u{1166C}\\u{11680}-\\u{116B9}\\u{116C0}-\\u{116C9}\\u{11700}-\\u{1171A}\\u{1171D}-\\u{1172B}\\u{11730}-\\u{11746}\\u{11800}-\\u{1183B}\\u{118A0}-\\u{118F2}\\u{118FF}-\\u{11906}\\u{11909}\\u{1190C}-\\u{11913}\\u{11915}\\u{11916}\\u{11918}-\\u{11935}\\u{11937}\\u{11938}\\u{1193B}-\\u{11946}\\u{11950}-\\u{11959}\\u{119A0}-\\u{119A7}\\u{119AA}-\\u{119D7}\\u{119DA}-\\u{119E4}\\u{11A00}-\\u{11A47}\\u{11A50}-\\u{11AA2}\\u{11AB0}-\\u{11AF8}\\u{11C00}-\\u{11C08}\\u{11C0A}-\\u{11C36}\\u{11C38}-\\u{11C45}\\u{11C50}-\\u{11C6C}\\u{11C70}-\\u{11C8F}\\u{11C92}-\\u{11CA7}\\u{11CA9}-\\u{11CB6}\\u{11D00}-\\u{11D06}\\u{11D08}\\u{11D09}\\u{11D0B}-\\u{11D36}\\u{11D3A}\\u{11D3C}\\u{11D3D}\\u{11D3F}-\\u{11D47}\\u{11D50}-\\u{11D59}\\u{11D60}-\\u{11D65}\\u{11D67}\\u{11D68}\\u{11D6A}-\\u{11D8E}\\u{11D90}\\u{11D91}\\u{11D93}-\\u{11D98}\\u{11DA0}-\\u{11DA9}\\u{11EE0}-\\u{11EF8}\\u{11FB0}\\u{11FC0}-\\u{11FF1}\\u{11FFF}-\\u{12399}\\u{12400}-\\u{1246E}\\u{12470}-\\u{12474}\\u{12480}-\\u{12543}\\u{12F90}-\\u{12FF2}\\u{13000}-\\u{1342E}\\u{13430}-\\u{13438}\\u{14400}-\\u{14646}\\u{16800}-\\u{16A38}\\u{16A40}-\\u{16A5E}\\u{16A60}-\\u{16A69}\\u{16A6E}-\\u{16ABE}\\u{16AC0}-\\u{16AC9}\\u{16AD0}-\\u{16AED}\\u{16AF0}-\\u{16AF5}\\u{16B00}-\\u{16B45}\\u{16B50}-\\u{16B59}\\u{16B5B}-\\u{16B61}\\u{16B63}-\\u{16B77}\\u{16B7D}-\\u{16B8F}\\u{16E40}-\\u{16E9A}\\u{16F00}-\\u{16F4A}\\u{16F4F}-\\u{16F87}\\u{16F8F}-\\u{16F9F}\\u{16FE0}-\\u{16FE4}\\u{16FF0}\\u{16FF1}\\u{17000}-\\u{187F7}\\u{18800}-\\u{18CD5}\\u{18D00}-\\u{18D08}\\u{1AFF0}-\\u{1AFF3}\\u{1AFF5}-\\u{1AFFB}\\u{1AFFD}\\u{1AFFE}\\u{1B000}-\\u{1B122}\\u{1B150}-\\u{1B152}\\u{1B164}-\\u{1B167}\\u{1B170}-\\u{1B2FB}\\u{1BC00}-\\u{1BC6A}\\u{1BC70}-\\u{1BC7C}\\u{1BC80}-\\u{1BC88}\\u{1BC90}-\\u{1BC99}\\u{1BC9C}-\\u{1BCA3}\\u{1CF00}-\\u{1CF2D}\\u{1CF30}-\\u{1CF46}\\u{1CF50}-\\u{1CFC3}\\u{1D000}-\\u{1D0F5}\\u{1D100}-\\u{1D126}\\u{1D129}-\\u{1D1EA}\\u{1D200}-\\u{1D245}\\u{1D2E0}-\\u{1D2F3}\\u{1D300}-\\u{1D356}\\u{1D360}-\\u{1D378}\\u{1D400}-\\u{1D454}\\u{1D456}-\\u{1D49C}\\u{1D49E}\\u{1D49F}\\u{1D4A2}\\u{1D4A5}\\u{1D4A6}\\u{1D4A9}-\\u{1D4AC}\\u{1D4AE}-\\u{1D4B9}\\u{1D4BB}\\u{1D4BD}-\\u{1D4C3}\\u{1D4C5}-\\u{1D505}\\u{1D507}-\\u{1D50A}\\u{1D50D}-\\u{1D514}\\u{1D516}-\\u{1D51C}\\u{1D51E}-\\u{1D539}\\u{1D53B}-\\u{1D53E}\\u{1D540}-\\u{1D544}\\u{1D546}\\u{1D54A}-\\u{1D550}\\u{1D552}-\\u{1D6A5}\\u{1D6A8}-\\u{1D7CB}\\u{1D7CE}-\\u{1DA8B}\\u{1DA9B}-\\u{1DA9F}\\u{1DAA1}-\\u{1DAAF}\\u{1DF00}-\\u{1DF1E}\\u{1E000}-\\u{1E006}\\u{1E008}-\\u{1E018}\\u{1E01B}-\\u{1E021}\\u{1E023}\\u{1E024}\\u{1E026}-\\u{1E02A}\\u{1E100}-\\u{1E12C}\\u{1E130}-\\u{1E13D}\\u{1E140}-\\u{1E149}\\u{1E14E}\\u{1E14F}\\u{1E290}-\\u{1E2AE}\\u{1E2C0}-\\u{1E2F9}\\u{1E2FF}\\u{1E7E0}-\\u{1E7E6}\\u{1E7E8}-\\u{1E7EB}\\u{1E7ED}\\u{1E7EE}\\u{1E7F0}-\\u{1E7FE}\\u{1E8D0}-\\u{1E8D6}\\u{1E944}-\\u{1E94A}\\u{1EEF0}\\u{1EEF1}\\u{1F000}-\\u{1F02B}\\u{1F030}-\\u{1F093}\\u{1F0A0}-\\u{1F0AE}\\u{1F0B1}-\\u{1F0BF}\\u{1F0C1}-\\u{1F0CF}\\u{1F0D1}-\\u{1F0F5}\\u{1F100}-\\u{1F1AD}\\u{1F1E6}-\\u{1F202}\\u{1F210}-\\u{1F23B}\\u{1F240}-\\u{1F248}\\u{1F250}\\u{1F251}\\u{1F260}-\\u{1F265}\\u{1F300}-\\u{1F6D7}\\u{1F6DD}-\\u{1F6EC}\\u{1F6F0}-\\u{1F6FC}\\u{1F700}-\\u{1F773}\\u{1F780}-\\u{1F7D8}\\u{1F7E0}-\\u{1F7EB}\\u{1F7F0}\\u{1F800}-\\u{1F80B}\\u{1F810}-\\u{1F847}\\u{1F850}-\\u{1F859}\\u{1F860}-\\u{1F887}\\u{1F890}-\\u{1F8AD}\\u{1F8B0}\\u{1F8B1}\\u{1F900}-\\u{1FA53}\\u{1FA60}-\\u{1FA6D}\\u{1FA70}-\\u{1FA74}\\u{1FA78}-\\u{1FA7C}\\u{1FA80}-\\u{1FA86}\\u{1FA90}-\\u{1FAAC}\\u{1FAB0}-\\u{1FABA}\\u{1FAC0}-\\u{1FAC5}\\u{1FAD0}-\\u{1FAD9}\\u{1FAE0}-\\u{1FAE7}\\u{1FAF0}-\\u{1FAF6}\\u{1FB00}-\\u{1FB92}\\u{1FB94}-\\u{1FBCA}\\u{1FBF0}-\\u{1FBF9}\\u{20000}-\\u{2A6DF}\\u{2A700}-\\u{2B738}\\u{2B740}-\\u{2B81D}\\u{2B820}-\\u{2CEA1}\\u{2CEB0}-\\u{2EBE0}\\u{2F800}-\\u{2FA1D}\\u{30000}-\\u{3134A}\\u{E0001}\\u{E0020}-\\u{E007F}\\u{E0100}-\\u{E01EF}\\u{F0000}-\\u{FFFFD}\\u{100000}-\\u{10FFFD}]*$/u;\nconst bidiS6 = /[0-9A-Za-z\\xAA\\xB2\\xB3\\xB5\\xB9\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02B8\\u02BB-\\u02C1\\u02D0\\u02D1\\u02E0-\\u02E4\\u02EE\\u0370-\\u0373\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0482\\u048A-\\u052F\\u0531-\\u0556\\u0559-\\u0589\\u06F0-\\u06F9\\u0903-\\u0939\\u093B\\u093D-\\u0940\\u0949-\\u094C\\u094E-\\u0950\\u0958-\\u0961\\u0964-\\u0980\\u0982\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD-\\u09C0\\u09C7\\u09C8\\u09CB\\u09CC\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E1\\u09E6-\\u09F1\\u09F4-\\u09FA\\u09FC\\u09FD\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3E-\\u0A40\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A6F\\u0A72-\\u0A74\\u0A76\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD-\\u0AC0\\u0AC9\\u0ACB\\u0ACC\\u0AD0\\u0AE0\\u0AE1\\u0AE6-\\u0AF0\\u0AF9\\u0B02\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B3E\\u0B40\\u0B47\\u0B48\\u0B4B\\u0B4C\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B66-\\u0B77\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE\\u0BBF\\u0BC1\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCC\\u0BD0\\u0BD7\\u0BE6-\\u0BF2\\u0C01-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C41-\\u0C44\\u0C58-\\u0C5A\\u0C5D\\u0C60\\u0C61\\u0C66-\\u0C6F\\u0C77\\u0C7F\\u0C80\\u0C82-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA\\u0CCB\\u0CD5\\u0CD6\\u0CDD\\u0CDE\\u0CE0\\u0CE1\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D02-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D40\\u0D46-\\u0D48\\u0D4A-\\u0D4C\\u0D4E\\u0D4F\\u0D54-\\u0D61\\u0D66-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCF-\\u0DD1\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2-\\u0DF4\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E4F-\\u0E5B\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00-\\u0F17\\u0F1A-\\u0F34\\u0F36\\u0F38\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F7F\\u0F85\\u0F88-\\u0F8C\\u0FBE-\\u0FC5\\u0FC7-\\u0FCC\\u0FCE-\\u0FDA\\u1000-\\u102C\\u1031\\u1038\\u103B\\u103C\\u103F-\\u1057\\u105A-\\u105D\\u1061-\\u1070\\u1075-\\u1081\\u1083\\u1084\\u1087-\\u108C\\u108E-\\u109C\\u109E-\\u10C5\\u10C7\\u10CD\\u10D0-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1360-\\u137C\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u167F\\u1681-\\u169A\\u16A0-\\u16F8\\u1700-\\u1711\\u1715\\u171F-\\u1731\\u1734-\\u1736\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17B6\\u17BE-\\u17C5\\u17C7\\u17C8\\u17D4-\\u17DA\\u17DC\\u17E0-\\u17E9\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1923-\\u1926\\u1929-\\u192B\\u1930\\u1931\\u1933-\\u1938\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A16\\u1A19\\u1A1A\\u1A1E-\\u1A55\\u1A57\\u1A61\\u1A63\\u1A64\\u1A6D-\\u1A72\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1AA0-\\u1AAD\\u1B04-\\u1B33\\u1B35\\u1B3B\\u1B3D-\\u1B41\\u1B43-\\u1B4C\\u1B50-\\u1B6A\\u1B74-\\u1B7E\\u1B82-\\u1BA1\\u1BA6\\u1BA7\\u1BAA\\u1BAE-\\u1BE5\\u1BE7\\u1BEA-\\u1BEC\\u1BEE\\u1BF2\\u1BF3\\u1BFC-\\u1C2B\\u1C34\\u1C35\\u1C3B-\\u1C49\\u1C4D-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CC7\\u1CD3\\u1CE1\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5-\\u1CF7\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200E\\u2070\\u2071\\u2074-\\u2079\\u207F-\\u2089\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u214F\\u2160-\\u2188\\u2336-\\u237A\\u2395\\u2488-\\u24E9\\u26AC\\u2800-\\u28FF\\u2C00-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D70\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u302E\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3190-\\u31BF\\u31F0-\\u321C\\u3220-\\u324F\\u3260-\\u327B\\u327F-\\u32B0\\u32C0-\\u32CB\\u32D0-\\u3376\\u337B-\\u33DD\\u33E0-\\u33FE\\u3400-\\u4DBF\\u4E00-\\uA48C\\uA4D0-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66E\\uA680-\\uA69D\\uA6A0-\\uA6EF\\uA6F2-\\uA6F7\\uA722-\\uA787\\uA789-\\uA7CA\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7D9\\uA7F2-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA824\\uA827\\uA830-\\uA837\\uA840-\\uA873\\uA880-\\uA8C3\\uA8CE-\\uA8D9\\uA8F2-\\uA8FE\\uA900-\\uA925\\uA92E-\\uA946\\uA952\\uA953\\uA95F-\\uA97C\\uA983-\\uA9B2\\uA9B4\\uA9B5\\uA9BA\\uA9BB\\uA9BE-\\uA9CD\\uA9CF-\\uA9D9\\uA9DE-\\uA9E4\\uA9E6-\\uA9FE\\uAA00-\\uAA28\\uAA2F\\uAA30\\uAA33\\uAA34\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA4D\\uAA50-\\uAA59\\uAA5C-\\uAA7B\\uAA7D-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAAEB\\uAAEE-\\uAAF5\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB69\\uAB70-\\uABE4\\uABE6\\uABE7\\uABE9-\\uABEC\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uD800-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC\\u{10000}-\\u{1000B}\\u{1000D}-\\u{10026}\\u{10028}-\\u{1003A}\\u{1003C}\\u{1003D}\\u{1003F}-\\u{1004D}\\u{10050}-\\u{1005D}\\u{10080}-\\u{100FA}\\u{10100}\\u{10102}\\u{10107}-\\u{10133}\\u{10137}-\\u{1013F}\\u{1018D}\\u{1018E}\\u{101D0}-\\u{101FC}\\u{10280}-\\u{1029C}\\u{102A0}-\\u{102D0}\\u{102E1}-\\u{102FB}\\u{10300}-\\u{10323}\\u{1032D}-\\u{1034A}\\u{10350}-\\u{10375}\\u{10380}-\\u{1039D}\\u{1039F}-\\u{103C3}\\u{103C8}-\\u{103D5}\\u{10400}-\\u{1049D}\\u{104A0}-\\u{104A9}\\u{104B0}-\\u{104D3}\\u{104D8}-\\u{104FB}\\u{10500}-\\u{10527}\\u{10530}-\\u{10563}\\u{1056F}-\\u{1057A}\\u{1057C}-\\u{1058A}\\u{1058C}-\\u{10592}\\u{10594}\\u{10595}\\u{10597}-\\u{105A1}\\u{105A3}-\\u{105B1}\\u{105B3}-\\u{105B9}\\u{105BB}\\u{105BC}\\u{10600}-\\u{10736}\\u{10740}-\\u{10755}\\u{10760}-\\u{10767}\\u{10780}-\\u{10785}\\u{10787}-\\u{107B0}\\u{107B2}-\\u{107BA}\\u{11000}\\u{11002}-\\u{11037}\\u{11047}-\\u{1104D}\\u{11066}-\\u{1106F}\\u{11071}\\u{11072}\\u{11075}\\u{11082}-\\u{110B2}\\u{110B7}\\u{110B8}\\u{110BB}-\\u{110C1}\\u{110CD}\\u{110D0}-\\u{110E8}\\u{110F0}-\\u{110F9}\\u{11103}-\\u{11126}\\u{1112C}\\u{11136}-\\u{11147}\\u{11150}-\\u{11172}\\u{11174}-\\u{11176}\\u{11182}-\\u{111B5}\\u{111BF}-\\u{111C8}\\u{111CD}\\u{111CE}\\u{111D0}-\\u{111DF}\\u{111E1}-\\u{111F4}\\u{11200}-\\u{11211}\\u{11213}-\\u{1122E}\\u{11232}\\u{11233}\\u{11235}\\u{11238}-\\u{1123D}\\u{11280}-\\u{11286}\\u{11288}\\u{1128A}-\\u{1128D}\\u{1128F}-\\u{1129D}\\u{1129F}-\\u{112A9}\\u{112B0}-\\u{112DE}\\u{112E0}-\\u{112E2}\\u{112F0}-\\u{112F9}\\u{11302}\\u{11303}\\u{11305}-\\u{1130C}\\u{1130F}\\u{11310}\\u{11313}-\\u{11328}\\u{1132A}-\\u{11330}\\u{11332}\\u{11333}\\u{11335}-\\u{11339}\\u{1133D}-\\u{1133F}\\u{11341}-\\u{11344}\\u{11347}\\u{11348}\\u{1134B}-\\u{1134D}\\u{11350}\\u{11357}\\u{1135D}-\\u{11363}\\u{11400}-\\u{11437}\\u{11440}\\u{11441}\\u{11445}\\u{11447}-\\u{1145B}\\u{1145D}\\u{1145F}-\\u{11461}\\u{11480}-\\u{114B2}\\u{114B9}\\u{114BB}-\\u{114BE}\\u{114C1}\\u{114C4}-\\u{114C7}\\u{114D0}-\\u{114D9}\\u{11580}-\\u{115B1}\\u{115B8}-\\u{115BB}\\u{115BE}\\u{115C1}-\\u{115DB}\\u{11600}-\\u{11632}\\u{1163B}\\u{1163C}\\u{1163E}\\u{11641}-\\u{11644}\\u{11650}-\\u{11659}\\u{11680}-\\u{116AA}\\u{116AC}\\u{116AE}\\u{116AF}\\u{116B6}\\u{116B8}\\u{116B9}\\u{116C0}-\\u{116C9}\\u{11700}-\\u{1171A}\\u{11720}\\u{11721}\\u{11726}\\u{11730}-\\u{11746}\\u{11800}-\\u{1182E}\\u{11838}\\u{1183B}\\u{118A0}-\\u{118F2}\\u{118FF}-\\u{11906}\\u{11909}\\u{1190C}-\\u{11913}\\u{11915}\\u{11916}\\u{11918}-\\u{11935}\\u{11937}\\u{11938}\\u{1193D}\\u{1193F}-\\u{11942}\\u{11944}-\\u{11946}\\u{11950}-\\u{11959}\\u{119A0}-\\u{119A7}\\u{119AA}-\\u{119D3}\\u{119DC}-\\u{119DF}\\u{119E1}-\\u{119E4}\\u{11A00}\\u{11A07}\\u{11A08}\\u{11A0B}-\\u{11A32}\\u{11A39}\\u{11A3A}\\u{11A3F}-\\u{11A46}\\u{11A50}\\u{11A57}\\u{11A58}\\u{11A5C}-\\u{11A89}\\u{11A97}\\u{11A9A}-\\u{11AA2}\\u{11AB0}-\\u{11AF8}\\u{11C00}-\\u{11C08}\\u{11C0A}-\\u{11C2F}\\u{11C3E}-\\u{11C45}\\u{11C50}-\\u{11C6C}\\u{11C70}-\\u{11C8F}\\u{11CA9}\\u{11CB1}\\u{11CB4}\\u{11D00}-\\u{11D06}\\u{11D08}\\u{11D09}\\u{11D0B}-\\u{11D30}\\u{11D46}\\u{11D50}-\\u{11D59}\\u{11D60}-\\u{11D65}\\u{11D67}\\u{11D68}\\u{11D6A}-\\u{11D8E}\\u{11D93}\\u{11D94}\\u{11D96}\\u{11D98}\\u{11DA0}-\\u{11DA9}\\u{11EE0}-\\u{11EF2}\\u{11EF5}-\\u{11EF8}\\u{11FB0}\\u{11FC0}-\\u{11FD4}\\u{11FFF}-\\u{12399}\\u{12400}-\\u{1246E}\\u{12470}-\\u{12474}\\u{12480}-\\u{12543}\\u{12F90}-\\u{12FF2}\\u{13000}-\\u{1342E}\\u{13430}-\\u{13438}\\u{14400}-\\u{14646}\\u{16800}-\\u{16A38}\\u{16A40}-\\u{16A5E}\\u{16A60}-\\u{16A69}\\u{16A6E}-\\u{16ABE}\\u{16AC0}-\\u{16AC9}\\u{16AD0}-\\u{16AED}\\u{16AF5}\\u{16B00}-\\u{16B2F}\\u{16B37}-\\u{16B45}\\u{16B50}-\\u{16B59}\\u{16B5B}-\\u{16B61}\\u{16B63}-\\u{16B77}\\u{16B7D}-\\u{16B8F}\\u{16E40}-\\u{16E9A}\\u{16F00}-\\u{16F4A}\\u{16F50}-\\u{16F87}\\u{16F93}-\\u{16F9F}\\u{16FE0}\\u{16FE1}\\u{16FE3}\\u{16FF0}\\u{16FF1}\\u{17000}-\\u{187F7}\\u{18800}-\\u{18CD5}\\u{18D00}-\\u{18D08}\\u{1AFF0}-\\u{1AFF3}\\u{1AFF5}-\\u{1AFFB}\\u{1AFFD}\\u{1AFFE}\\u{1B000}-\\u{1B122}\\u{1B150}-\\u{1B152}\\u{1B164}-\\u{1B167}\\u{1B170}-\\u{1B2FB}\\u{1BC00}-\\u{1BC6A}\\u{1BC70}-\\u{1BC7C}\\u{1BC80}-\\u{1BC88}\\u{1BC90}-\\u{1BC99}\\u{1BC9C}\\u{1BC9F}\\u{1CF50}-\\u{1CFC3}\\u{1D000}-\\u{1D0F5}\\u{1D100}-\\u{1D126}\\u{1D129}-\\u{1D166}\\u{1D16A}-\\u{1D172}\\u{1D183}\\u{1D184}\\u{1D18C}-\\u{1D1A9}\\u{1D1AE}-\\u{1D1E8}\\u{1D2E0}-\\u{1D2F3}\\u{1D360}-\\u{1D378}\\u{1D400}-\\u{1D454}\\u{1D456}-\\u{1D49C}\\u{1D49E}\\u{1D49F}\\u{1D4A2}\\u{1D4A5}\\u{1D4A6}\\u{1D4A9}-\\u{1D4AC}\\u{1D4AE}-\\u{1D4B9}\\u{1D4BB}\\u{1D4BD}-\\u{1D4C3}\\u{1D4C5}-\\u{1D505}\\u{1D507}-\\u{1D50A}\\u{1D50D}-\\u{1D514}\\u{1D516}-\\u{1D51C}\\u{1D51E}-\\u{1D539}\\u{1D53B}-\\u{1D53E}\\u{1D540}-\\u{1D544}\\u{1D546}\\u{1D54A}-\\u{1D550}\\u{1D552}-\\u{1D6A5}\\u{1D6A8}-\\u{1D6DA}\\u{1D6DC}-\\u{1D714}\\u{1D716}-\\u{1D74E}\\u{1D750}-\\u{1D788}\\u{1D78A}-\\u{1D7C2}\\u{1D7C4}-\\u{1D7CB}\\u{1D7CE}-\\u{1D9FF}\\u{1DA37}-\\u{1DA3A}\\u{1DA6D}-\\u{1DA74}\\u{1DA76}-\\u{1DA83}\\u{1DA85}-\\u{1DA8B}\\u{1DF00}-\\u{1DF1E}\\u{1E100}-\\u{1E12C}\\u{1E137}-\\u{1E13D}\\u{1E140}-\\u{1E149}\\u{1E14E}\\u{1E14F}\\u{1E290}-\\u{1E2AD}\\u{1E2C0}-\\u{1E2EB}\\u{1E2F0}-\\u{1E2F9}\\u{1E7E0}-\\u{1E7E6}\\u{1E7E8}-\\u{1E7EB}\\u{1E7ED}\\u{1E7EE}\\u{1E7F0}-\\u{1E7FE}\\u{1F100}-\\u{1F10A}\\u{1F110}-\\u{1F12E}\\u{1F130}-\\u{1F169}\\u{1F170}-\\u{1F1AC}\\u{1F1E6}-\\u{1F202}\\u{1F210}-\\u{1F23B}\\u{1F240}-\\u{1F248}\\u{1F250}\\u{1F251}\\u{1FBF0}-\\u{1FBF9}\\u{20000}-\\u{2A6DF}\\u{2A700}-\\u{2B738}\\u{2B740}-\\u{2B81D}\\u{2B820}-\\u{2CEA1}\\u{2CEB0}-\\u{2EBE0}\\u{2F800}-\\u{2FA1D}\\u{30000}-\\u{3134A}\\u{F0000}-\\u{FFFFD}\\u{100000}-\\u{10FFFD}][\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u0898-\\u089F\\u08CA-\\u08E1\\u08E3-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u09FE\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0AFA-\\u0AFF\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B55\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0C00\\u0C04\\u0C3C\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81\\u0CBC\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D00\\u0D01\\u0D3B\\u0D3C\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0D81\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732\\u1733\\u1752\\u1753\\u1772\\u1773\\u17B4\\u17B5\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DD\\u180B-\\u180D\\u180F\\u1885\\u1886\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1A17\\u1A18\\u1A1B\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1AB0-\\u1ACE\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1BAB-\\u1BAD\\u1BE6\\u1BE8\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302D\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA82C\\uA8C4\\uA8C5\\uA8E0-\\uA8F1\\uA8FF\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uA9BD\\uA9E5\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAA7C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEC\\uAAED\\uAAF6\\uABE5\\uABE8\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\u{101FD}\\u{102E0}\\u{10376}-\\u{1037A}\\u{10A01}-\\u{10A03}\\u{10A05}\\u{10A06}\\u{10A0C}-\\u{10A0F}\\u{10A38}-\\u{10A3A}\\u{10A3F}\\u{10AE5}\\u{10AE6}\\u{10D24}-\\u{10D27}\\u{10EAB}\\u{10EAC}\\u{10F46}-\\u{10F50}\\u{10F82}-\\u{10F85}\\u{11001}\\u{11038}-\\u{11046}\\u{11070}\\u{11073}\\u{11074}\\u{1107F}-\\u{11081}\\u{110B3}-\\u{110B6}\\u{110B9}\\u{110BA}\\u{110C2}\\u{11100}-\\u{11102}\\u{11127}-\\u{1112B}\\u{1112D}-\\u{11134}\\u{11173}\\u{11180}\\u{11181}\\u{111B6}-\\u{111BE}\\u{111C9}-\\u{111CC}\\u{111CF}\\u{1122F}-\\u{11231}\\u{11234}\\u{11236}\\u{11237}\\u{1123E}\\u{112DF}\\u{112E3}-\\u{112EA}\\u{11300}\\u{11301}\\u{1133B}\\u{1133C}\\u{11340}\\u{11366}-\\u{1136C}\\u{11370}-\\u{11374}\\u{11438}-\\u{1143F}\\u{11442}-\\u{11444}\\u{11446}\\u{1145E}\\u{114B3}-\\u{114B8}\\u{114BA}\\u{114BF}\\u{114C0}\\u{114C2}\\u{114C3}\\u{115B2}-\\u{115B5}\\u{115BC}\\u{115BD}\\u{115BF}\\u{115C0}\\u{115DC}\\u{115DD}\\u{11633}-\\u{1163A}\\u{1163D}\\u{1163F}\\u{11640}\\u{116AB}\\u{116AD}\\u{116B0}-\\u{116B5}\\u{116B7}\\u{1171D}-\\u{1171F}\\u{11722}-\\u{11725}\\u{11727}-\\u{1172B}\\u{1182F}-\\u{11837}\\u{11839}\\u{1183A}\\u{1193B}\\u{1193C}\\u{1193E}\\u{11943}\\u{119D4}-\\u{119D7}\\u{119DA}\\u{119DB}\\u{119E0}\\u{11A01}-\\u{11A06}\\u{11A09}\\u{11A0A}\\u{11A33}-\\u{11A38}\\u{11A3B}-\\u{11A3E}\\u{11A47}\\u{11A51}-\\u{11A56}\\u{11A59}-\\u{11A5B}\\u{11A8A}-\\u{11A96}\\u{11A98}\\u{11A99}\\u{11C30}-\\u{11C36}\\u{11C38}-\\u{11C3D}\\u{11C92}-\\u{11CA7}\\u{11CAA}-\\u{11CB0}\\u{11CB2}\\u{11CB3}\\u{11CB5}\\u{11CB6}\\u{11D31}-\\u{11D36}\\u{11D3A}\\u{11D3C}\\u{11D3D}\\u{11D3F}-\\u{11D45}\\u{11D47}\\u{11D90}\\u{11D91}\\u{11D95}\\u{11D97}\\u{11EF3}\\u{11EF4}\\u{16AF0}-\\u{16AF4}\\u{16B30}-\\u{16B36}\\u{16F4F}\\u{16F8F}-\\u{16F92}\\u{16FE4}\\u{1BC9D}\\u{1BC9E}\\u{1CF00}-\\u{1CF2D}\\u{1CF30}-\\u{1CF46}\\u{1D167}-\\u{1D169}\\u{1D17B}-\\u{1D182}\\u{1D185}-\\u{1D18B}\\u{1D1AA}-\\u{1D1AD}\\u{1D242}-\\u{1D244}\\u{1DA00}-\\u{1DA36}\\u{1DA3B}-\\u{1DA6C}\\u{1DA75}\\u{1DA84}\\u{1DA9B}-\\u{1DA9F}\\u{1DAA1}-\\u{1DAAF}\\u{1E000}-\\u{1E006}\\u{1E008}-\\u{1E018}\\u{1E01B}-\\u{1E021}\\u{1E023}\\u{1E024}\\u{1E026}-\\u{1E02A}\\u{1E130}-\\u{1E136}\\u{1E2AE}\\u{1E2EC}-\\u{1E2EF}\\u{1E8D0}-\\u{1E8D6}\\u{1E944}-\\u{1E94A}\\u{E0100}-\\u{E01EF}]*$/u;\n\nmodule.exports = {\n  combiningMarks,\n  combiningClassVirama,\n  validZWNJ,\n  bidiDomain,\n  bidiS1LTR,\n  bidiS1RTL,\n  bidiS2,\n  bidiS3,\n  bidiS4EN,\n  bidiS4AN,\n  bidiS5,\n  bidiS6\n};\n", "\"use strict\";\n\nmodule.exports.STATUS_MAPPING = {\n  mapped: 1,\n  valid: 2,\n  disallowed: 3,\n  disallowed_STD3_valid: 4,\n  disallowed_STD3_mapped: 5,\n  deviation: 6,\n  ignored: 7\n};\n", "\"use strict\";\n\nconst punycode = require(\"punycode\");\nconst regexes = require(\"./lib/regexes.js\");\nconst mappingTable = require(\"./lib/mappingTable.json\");\nconst { STATUS_MAPPING } = require(\"./lib/statusMapping.js\");\n\nfunction containsNonASCII(str) {\n  return /[^\\x00-\\x7F]/u.test(str);\n}\n\nfunction findStatus(val, { useSTD3ASCIIRules }) {\n  let start = 0;\n  let end = mappingTable.length - 1;\n\n  while (start <= end) {\n    const mid = Math.floor((start + end) / 2);\n\n    const target = mappingTable[mid];\n    const min = Array.isArray(target[0]) ? target[0][0] : target[0];\n    const max = Array.isArray(target[0]) ? target[0][1] : target[0];\n\n    if (min <= val && max >= val) {\n      if (useSTD3ASCIIRules &&\n          (target[1] === STATUS_MAPPING.disallowed_STD3_valid || target[1] === STATUS_MAPPING.disallowed_STD3_mapped)) {\n        return [STATUS_MAPPING.disallowed, ...target.slice(2)];\n      } else if (target[1] === STATUS_MAPPING.disallowed_STD3_valid) {\n        return [STATUS_MAPPING.valid, ...target.slice(2)];\n      } else if (target[1] === STATUS_MAPPING.disallowed_STD3_mapped) {\n        return [STATUS_MAPPING.mapped, ...target.slice(2)];\n      }\n\n      return target.slice(1);\n    } else if (min > val) {\n      end = mid - 1;\n    } else {\n      start = mid + 1;\n    }\n  }\n\n  return null;\n}\n\nfunction mapChars(domainName, { useSTD3ASCIIRules, processingOption }) {\n  let hasError = false;\n  let processed = \"\";\n\n  for (const ch of domainName) {\n    const [status, mapping] = findStatus(ch.codePointAt(0), { useSTD3ASCIIRules });\n\n    switch (status) {\n      case STATUS_MAPPING.disallowed:\n        hasError = true;\n        processed += ch;\n        break;\n      case STATUS_MAPPING.ignored:\n        break;\n      case STATUS_MAPPING.mapped:\n        processed += mapping;\n        break;\n      case STATUS_MAPPING.deviation:\n        if (processingOption === \"transitional\") {\n          processed += mapping;\n        } else {\n          processed += ch;\n        }\n        break;\n      case STATUS_MAPPING.valid:\n        processed += ch;\n        break;\n    }\n  }\n\n  return {\n    string: processed,\n    error: hasError\n  };\n}\n\nfunction validateLabel(label, { checkHyphens, checkBidi, checkJoiners, processingOption, useSTD3ASCIIRules }) {\n  if (label.normalize(\"NFC\") !== label) {\n    return false;\n  }\n\n  const codePoints = Array.from(label);\n\n  if (checkHyphens) {\n    if ((codePoints[2] === \"-\" && codePoints[3] === \"-\") ||\n        (label.startsWith(\"-\") || label.endsWith(\"-\"))) {\n      return false;\n    }\n  }\n\n  if (label.includes(\".\") ||\n      (codePoints.length > 0 && regexes.combiningMarks.test(codePoints[0]))) {\n    return false;\n  }\n\n  for (const ch of codePoints) {\n    const [status] = findStatus(ch.codePointAt(0), { useSTD3ASCIIRules });\n    if ((processingOption === \"transitional\" && status !== STATUS_MAPPING.valid) ||\n        (processingOption === \"nontransitional\" &&\n         status !== STATUS_MAPPING.valid && status !== STATUS_MAPPING.deviation)) {\n      return false;\n    }\n  }\n\n  // https://tools.ietf.org/html/rfc5892#appendix-A\n  if (checkJoiners) {\n    let last = 0;\n    for (const [i, ch] of codePoints.entries()) {\n      if (ch === \"\\u200C\" || ch === \"\\u200D\") {\n        if (i > 0) {\n          if (regexes.combiningClassVirama.test(codePoints[i - 1])) {\n            continue;\n          }\n          if (ch === \"\\u200C\") {\n            // TODO: make this more efficient\n            const next = codePoints.indexOf(\"\\u200C\", i + 1);\n            const test = next < 0 ? codePoints.slice(last) : codePoints.slice(last, next);\n            if (regexes.validZWNJ.test(test.join(\"\"))) {\n              last = i + 1;\n              continue;\n            }\n          }\n        }\n        return false;\n      }\n    }\n  }\n\n  // https://tools.ietf.org/html/rfc5893#section-2\n  if (checkBidi) {\n    let rtl;\n\n    // 1\n    if (regexes.bidiS1LTR.test(codePoints[0])) {\n      rtl = false;\n    } else if (regexes.bidiS1RTL.test(codePoints[0])) {\n      rtl = true;\n    } else {\n      return false;\n    }\n\n    if (rtl) {\n      // 2-4\n      if (!regexes.bidiS2.test(label) ||\n          !regexes.bidiS3.test(label) ||\n          (regexes.bidiS4EN.test(label) && regexes.bidiS4AN.test(label))) {\n        return false;\n      }\n    } else if (!regexes.bidiS5.test(label) ||\n               !regexes.bidiS6.test(label)) { // 5-6\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction isBidiDomain(labels) {\n  const domain = labels.map(label => {\n    if (label.startsWith(\"xn--\")) {\n      try {\n        return punycode.decode(label.substring(4));\n      } catch (err) {\n        return \"\";\n      }\n    }\n    return label;\n  }).join(\".\");\n  return regexes.bidiDomain.test(domain);\n}\n\nfunction processing(domainName, options) {\n  const { processingOption } = options;\n\n  // 1. Map.\n  let { string, error } = mapChars(domainName, options);\n\n  // 2. Normalize.\n  string = string.normalize(\"NFC\");\n\n  // 3. Break.\n  const labels = string.split(\".\");\n  const isBidi = isBidiDomain(labels);\n\n  // 4. Convert/Validate.\n  for (const [i, origLabel] of labels.entries()) {\n    let label = origLabel;\n    let curProcessing = processingOption;\n    if (label.startsWith(\"xn--\")) {\n      try {\n        label = punycode.decode(label.substring(4));\n        labels[i] = label;\n      } catch (err) {\n        error = true;\n        continue;\n      }\n      curProcessing = \"nontransitional\";\n    }\n\n    // No need to validate if we already know there is an error.\n    if (error) {\n      continue;\n    }\n    const validation = validateLabel(label, {\n      ...options,\n      processingOption: curProcessing,\n      checkBidi: options.checkBidi && isBidi\n    });\n    if (!validation) {\n      error = true;\n    }\n  }\n\n  return {\n    string: labels.join(\".\"),\n    error\n  };\n}\n\nfunction toASCII(domainName, {\n  checkHyphens = false,\n  checkBidi = false,\n  checkJoiners = false,\n  useSTD3ASCIIRules = false,\n  processingOption = \"nontransitional\",\n  verifyDNSLength = false\n} = {}) {\n  if (processingOption !== \"transitional\" && processingOption !== \"nontransitional\") {\n    throw new RangeError(\"processingOption must be either transitional or nontransitional\");\n  }\n\n  const result = processing(domainName, {\n    processingOption,\n    checkHyphens,\n    checkBidi,\n    checkJoiners,\n    useSTD3ASCIIRules\n  });\n  let labels = result.string.split(\".\");\n  labels = labels.map(l => {\n    if (containsNonASCII(l)) {\n      try {\n        return `xn--${punycode.encode(l)}`;\n      } catch (e) {\n        result.error = true;\n      }\n    }\n    return l;\n  });\n\n  if (verifyDNSLength) {\n    const total = labels.join(\".\").length;\n    if (total > 253 || total === 0) {\n      result.error = true;\n    }\n\n    for (let i = 0; i < labels.length; ++i) {\n      if (labels[i].length > 63 || labels[i].length === 0) {\n        result.error = true;\n        break;\n      }\n    }\n  }\n\n  if (result.error) {\n    return null;\n  }\n  return labels.join(\".\");\n}\n\nfunction toUnicode(domainName, {\n  checkHyphens = false,\n  checkBidi = false,\n  checkJoiners = false,\n  useSTD3ASCIIRules = false,\n  processingOption = \"nontransitional\"\n} = {}) {\n  const result = processing(domainName, {\n    processingOption,\n    checkHyphens,\n    checkBidi,\n    checkJoiners,\n    useSTD3ASCIIRules\n  });\n\n  return {\n    domain: result.string,\n    error: result.error\n  };\n}\n\nmodule.exports = {\n  toASCII,\n  toUnicode\n};\n", "\"use strict\";\n\n// Note that we take code points as JS numbers, not JS strings.\n\nfunction isASCIIDigit(c) {\n  return c >= 0x30 && c <= 0x39;\n}\n\nfunction isASCIIAlpha(c) {\n  return (c >= 0x41 && c <= 0x5A) || (c >= 0x61 && c <= 0x7A);\n}\n\nfunction isASCIIAlphanumeric(c) {\n  return isASCIIAlpha(c) || isASCIIDigit(c);\n}\n\nfunction isASCIIHex(c) {\n  return isASCIIDigit(c) || (c >= 0x41 && c <= 0x46) || (c >= 0x61 && c <= 0x66);\n}\n\nmodule.exports = {\n  isASCIIDigit,\n  isASCIIAlpha,\n  isASCIIAlphanumeric,\n  isASCIIHex\n};\n", "\"use strict\";\nconst utf8Encoder = new TextEncoder();\nconst utf8Decoder = new TextDecoder(\"utf-8\", { ignoreBOM: true });\n\nfunction utf8Encode(string) {\n  return utf8Encoder.encode(string);\n}\n\nfunction utf8DecodeWithoutBOM(bytes) {\n  return utf8Decoder.decode(bytes);\n}\n\nmodule.exports = {\n  utf8Encode,\n  utf8DecodeWithoutBOM\n};\n", "\"use strict\";\nconst { isASCIIHex } = require(\"./infra\");\nconst { utf8Encode } = require(\"./encoding\");\n\nfunction p(char) {\n  return char.codePointAt(0);\n}\n\n// https://url.spec.whatwg.org/#percent-encode\nfunction percentEncode(c) {\n  let hex = c.toString(16).toUpperCase();\n  if (hex.length === 1) {\n    hex = `0${hex}`;\n  }\n\n  return `%${hex}`;\n}\n\n// https://url.spec.whatwg.org/#percent-decode\nfunction percentDecodeBytes(input) {\n  const output = new Uint8Array(input.byteLength);\n  let outputIndex = 0;\n  for (let i = 0; i < input.byteLength; ++i) {\n    const byte = input[i];\n    if (byte !== 0x25) {\n      output[outputIndex++] = byte;\n    } else if (byte === 0x25 && (!isASCIIHex(input[i + 1]) || !isASCIIHex(input[i + 2]))) {\n      output[outputIndex++] = byte;\n    } else {\n      const bytePoint = parseInt(String.fromCodePoint(input[i + 1], input[i + 2]), 16);\n      output[outputIndex++] = bytePoint;\n      i += 2;\n    }\n  }\n\n  return output.slice(0, outputIndex);\n}\n\n// https://url.spec.whatwg.org/#string-percent-decode\nfunction percentDecodeString(input) {\n  const bytes = utf8Encode(input);\n  return percentDecodeBytes(bytes);\n}\n\n// https://url.spec.whatwg.org/#c0-control-percent-encode-set\nfunction isC0ControlPercentEncode(c) {\n  return c <= 0x1F || c > 0x7E;\n}\n\n// https://url.spec.whatwg.org/#fragment-percent-encode-set\nconst extraFragmentPercentEncodeSet = new Set([p(\" \"), p(\"\\\"\"), p(\"<\"), p(\">\"), p(\"`\")]);\nfunction isFragmentPercentEncode(c) {\n  return isC0ControlPercentEncode(c) || extraFragmentPercentEncodeSet.has(c);\n}\n\n// https://url.spec.whatwg.org/#query-percent-encode-set\nconst extraQueryPercentEncodeSet = new Set([p(\" \"), p(\"\\\"\"), p(\"#\"), p(\"<\"), p(\">\")]);\nfunction isQueryPercentEncode(c) {\n  return isC0ControlPercentEncode(c) || extraQueryPercentEncodeSet.has(c);\n}\n\n// https://url.spec.whatwg.org/#special-query-percent-encode-set\nfunction isSpecialQueryPercentEncode(c) {\n  return isQueryPercentEncode(c) || c === p(\"'\");\n}\n\n// https://url.spec.whatwg.org/#path-percent-encode-set\nconst extraPathPercentEncodeSet = new Set([p(\"?\"), p(\"`\"), p(\"{\"), p(\"}\")]);\nfunction isPathPercentEncode(c) {\n  return isQueryPercentEncode(c) || extraPathPercentEncodeSet.has(c);\n}\n\n// https://url.spec.whatwg.org/#userinfo-percent-encode-set\nconst extraUserinfoPercentEncodeSet =\n  new Set([p(\"/\"), p(\":\"), p(\";\"), p(\"=\"), p(\"@\"), p(\"[\"), p(\"\\\\\"), p(\"]\"), p(\"^\"), p(\"|\")]);\nfunction isUserinfoPercentEncode(c) {\n  return isPathPercentEncode(c) || extraUserinfoPercentEncodeSet.has(c);\n}\n\n// https://url.spec.whatwg.org/#component-percent-encode-set\nconst extraComponentPercentEncodeSet = new Set([p(\"$\"), p(\"%\"), p(\"&\"), p(\"+\"), p(\",\")]);\nfunction isComponentPercentEncode(c) {\n  return isUserinfoPercentEncode(c) || extraComponentPercentEncodeSet.has(c);\n}\n\n// https://url.spec.whatwg.org/#application-x-www-form-urlencoded-percent-encode-set\nconst extraURLEncodedPercentEncodeSet = new Set([p(\"!\"), p(\"'\"), p(\"(\"), p(\")\"), p(\"~\")]);\nfunction isURLEncodedPercentEncode(c) {\n  return isComponentPercentEncode(c) || extraURLEncodedPercentEncodeSet.has(c);\n}\n\n// https://url.spec.whatwg.org/#code-point-percent-encode-after-encoding\n// https://url.spec.whatwg.org/#utf-8-percent-encode\n// Assuming encoding is always utf-8 allows us to trim one of the logic branches. TODO: support encoding.\n// The \"-Internal\" variant here has code points as JS strings. The external version used by other files has code points\n// as JS numbers, like the rest of the codebase.\nfunction utf8PercentEncodeCodePointInternal(codePoint, percentEncodePredicate) {\n  const bytes = utf8Encode(codePoint);\n  let output = \"\";\n  for (const byte of bytes) {\n    // Our percentEncodePredicate operates on bytes, not code points, so this is slightly different from the spec.\n    if (!percentEncodePredicate(byte)) {\n      output += String.fromCharCode(byte);\n    } else {\n      output += percentEncode(byte);\n    }\n  }\n\n  return output;\n}\n\nfunction utf8PercentEncodeCodePoint(codePoint, percentEncodePredicate) {\n  return utf8PercentEncodeCodePointInternal(String.fromCodePoint(codePoint), percentEncodePredicate);\n}\n\n// https://url.spec.whatwg.org/#string-percent-encode-after-encoding\n// https://url.spec.whatwg.org/#string-utf-8-percent-encode\nfunction utf8PercentEncodeString(input, percentEncodePredicate, spaceAsPlus = false) {\n  let output = \"\";\n  for (const codePoint of input) {\n    if (spaceAsPlus && codePoint === \" \") {\n      output += \"+\";\n    } else {\n      output += utf8PercentEncodeCodePointInternal(codePoint, percentEncodePredicate);\n    }\n  }\n  return output;\n}\n\nmodule.exports = {\n  isC0ControlPercentEncode,\n  isFragmentPercentEncode,\n  isQueryPercentEncode,\n  isSpecialQueryPercentEncode,\n  isPathPercentEncode,\n  isUserinfoPercentEncode,\n  isURLEncodedPercentEncode,\n  percentDecodeString,\n  percentDecodeBytes,\n  utf8PercentEncodeString,\n  utf8PercentEncodeCodePoint\n};\n", "\"use strict\";\nconst tr46 = require(\"tr46\");\n\nconst infra = require(\"./infra\");\nconst { utf8DecodeWithoutBOM } = require(\"./encoding\");\nconst { percentDecodeString, utf8PercentEncodeCodePoint, utf8PercentEncodeString, isC0ControlPercentEncode,\n  isFragmentPercentEncode, isQueryPercentEncode, isSpecialQueryPercentEncode, isPathPercentEncode,\n  isUserinfoPercentEncode } = require(\"./percent-encoding\");\n\nfunction p(char) {\n  return char.codePointAt(0);\n}\n\nconst specialSchemes = {\n  ftp: 21,\n  file: null,\n  http: 80,\n  https: 443,\n  ws: 80,\n  wss: 443\n};\n\nconst failure = Symbol(\"failure\");\n\nfunction countSymbols(str) {\n  return [...str].length;\n}\n\nfunction at(input, idx) {\n  const c = input[idx];\n  return isNaN(c) ? undefined : String.fromCodePoint(c);\n}\n\nfunction isSingleDot(buffer) {\n  return buffer === \".\" || buffer.toLowerCase() === \"%2e\";\n}\n\nfunction isDoubleDot(buffer) {\n  buffer = buffer.toLowerCase();\n  return buffer === \"..\" || buffer === \"%2e.\" || buffer === \".%2e\" || buffer === \"%2e%2e\";\n}\n\nfunction isWindowsDriveLetterCodePoints(cp1, cp2) {\n  return infra.isASCIIAlpha(cp1) && (cp2 === p(\":\") || cp2 === p(\"|\"));\n}\n\nfunction isWindowsDriveLetterString(string) {\n  return string.length === 2 && infra.isASCIIAlpha(string.codePointAt(0)) && (string[1] === \":\" || string[1] === \"|\");\n}\n\nfunction isNormalizedWindowsDriveLetterString(string) {\n  return string.length === 2 && infra.isASCIIAlpha(string.codePointAt(0)) && string[1] === \":\";\n}\n\nfunction containsForbiddenHostCodePoint(string) {\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|\\/|:|<|>|\\?|@|\\[|\\\\|\\]|\\^|\\|/u) !== -1;\n}\n\nfunction containsForbiddenDomainCodePoint(string) {\n  return containsForbiddenHostCodePoint(string) || string.search(/[\\u0000-\\u001F]|%|\\u007F/u) !== -1;\n}\n\nfunction isSpecialScheme(scheme) {\n  return specialSchemes[scheme] !== undefined;\n}\n\nfunction isSpecial(url) {\n  return isSpecialScheme(url.scheme);\n}\n\nfunction isNotSpecial(url) {\n  return !isSpecialScheme(url.scheme);\n}\n\nfunction defaultPort(scheme) {\n  return specialSchemes[scheme];\n}\n\nfunction parseIPv4Number(input) {\n  if (input === \"\") {\n    return failure;\n  }\n\n  let R = 10;\n\n  if (input.length >= 2 && input.charAt(0) === \"0\" && input.charAt(1).toLowerCase() === \"x\") {\n    input = input.substring(2);\n    R = 16;\n  } else if (input.length >= 2 && input.charAt(0) === \"0\") {\n    input = input.substring(1);\n    R = 8;\n  }\n\n  if (input === \"\") {\n    return 0;\n  }\n\n  let regex = /[^0-7]/u;\n  if (R === 10) {\n    regex = /[^0-9]/u;\n  }\n  if (R === 16) {\n    regex = /[^0-9A-Fa-f]/u;\n  }\n\n  if (regex.test(input)) {\n    return failure;\n  }\n\n  return parseInt(input, R);\n}\n\nfunction parseIPv4(input) {\n  const parts = input.split(\".\");\n  if (parts[parts.length - 1] === \"\") {\n    if (parts.length > 1) {\n      parts.pop();\n    }\n  }\n\n  if (parts.length > 4) {\n    return failure;\n  }\n\n  const numbers = [];\n  for (const part of parts) {\n    const n = parseIPv4Number(part);\n    if (n === failure) {\n      return failure;\n    }\n\n    numbers.push(n);\n  }\n\n  for (let i = 0; i < numbers.length - 1; ++i) {\n    if (numbers[i] > 255) {\n      return failure;\n    }\n  }\n  if (numbers[numbers.length - 1] >= 256 ** (5 - numbers.length)) {\n    return failure;\n  }\n\n  let ipv4 = numbers.pop();\n  let counter = 0;\n\n  for (const n of numbers) {\n    ipv4 += n * 256 ** (3 - counter);\n    ++counter;\n  }\n\n  return ipv4;\n}\n\nfunction serializeIPv4(address) {\n  let output = \"\";\n  let n = address;\n\n  for (let i = 1; i <= 4; ++i) {\n    output = String(n % 256) + output;\n    if (i !== 4) {\n      output = `.${output}`;\n    }\n    n = Math.floor(n / 256);\n  }\n\n  return output;\n}\n\nfunction parseIPv6(input) {\n  const address = [0, 0, 0, 0, 0, 0, 0, 0];\n  let pieceIndex = 0;\n  let compress = null;\n  let pointer = 0;\n\n  input = Array.from(input, c => c.codePointAt(0));\n\n  if (input[pointer] === p(\":\")) {\n    if (input[pointer + 1] !== p(\":\")) {\n      return failure;\n    }\n\n    pointer += 2;\n    ++pieceIndex;\n    compress = pieceIndex;\n  }\n\n  while (pointer < input.length) {\n    if (pieceIndex === 8) {\n      return failure;\n    }\n\n    if (input[pointer] === p(\":\")) {\n      if (compress !== null) {\n        return failure;\n      }\n      ++pointer;\n      ++pieceIndex;\n      compress = pieceIndex;\n      continue;\n    }\n\n    let value = 0;\n    let length = 0;\n\n    while (length < 4 && infra.isASCIIHex(input[pointer])) {\n      value = value * 0x10 + parseInt(at(input, pointer), 16);\n      ++pointer;\n      ++length;\n    }\n\n    if (input[pointer] === p(\".\")) {\n      if (length === 0) {\n        return failure;\n      }\n\n      pointer -= length;\n\n      if (pieceIndex > 6) {\n        return failure;\n      }\n\n      let numbersSeen = 0;\n\n      while (input[pointer] !== undefined) {\n        let ipv4Piece = null;\n\n        if (numbersSeen > 0) {\n          if (input[pointer] === p(\".\") && numbersSeen < 4) {\n            ++pointer;\n          } else {\n            return failure;\n          }\n        }\n\n        if (!infra.isASCIIDigit(input[pointer])) {\n          return failure;\n        }\n\n        while (infra.isASCIIDigit(input[pointer])) {\n          const number = parseInt(at(input, pointer));\n          if (ipv4Piece === null) {\n            ipv4Piece = number;\n          } else if (ipv4Piece === 0) {\n            return failure;\n          } else {\n            ipv4Piece = ipv4Piece * 10 + number;\n          }\n          if (ipv4Piece > 255) {\n            return failure;\n          }\n          ++pointer;\n        }\n\n        address[pieceIndex] = address[pieceIndex] * 0x100 + ipv4Piece;\n\n        ++numbersSeen;\n\n        if (numbersSeen === 2 || numbersSeen === 4) {\n          ++pieceIndex;\n        }\n      }\n\n      if (numbersSeen !== 4) {\n        return failure;\n      }\n\n      break;\n    } else if (input[pointer] === p(\":\")) {\n      ++pointer;\n      if (input[pointer] === undefined) {\n        return failure;\n      }\n    } else if (input[pointer] !== undefined) {\n      return failure;\n    }\n\n    address[pieceIndex] = value;\n    ++pieceIndex;\n  }\n\n  if (compress !== null) {\n    let swaps = pieceIndex - compress;\n    pieceIndex = 7;\n    while (pieceIndex !== 0 && swaps > 0) {\n      const temp = address[compress + swaps - 1];\n      address[compress + swaps - 1] = address[pieceIndex];\n      address[pieceIndex] = temp;\n      --pieceIndex;\n      --swaps;\n    }\n  } else if (compress === null && pieceIndex !== 8) {\n    return failure;\n  }\n\n  return address;\n}\n\nfunction serializeIPv6(address) {\n  let output = \"\";\n  const compress = findLongestZeroSequence(address);\n  let ignore0 = false;\n\n  for (let pieceIndex = 0; pieceIndex <= 7; ++pieceIndex) {\n    if (ignore0 && address[pieceIndex] === 0) {\n      continue;\n    } else if (ignore0) {\n      ignore0 = false;\n    }\n\n    if (compress === pieceIndex) {\n      const separator = pieceIndex === 0 ? \"::\" : \":\";\n      output += separator;\n      ignore0 = true;\n      continue;\n    }\n\n    output += address[pieceIndex].toString(16);\n\n    if (pieceIndex !== 7) {\n      output += \":\";\n    }\n  }\n\n  return output;\n}\n\nfunction parseHost(input, isNotSpecialArg = false) {\n  if (input[0] === \"[\") {\n    if (input[input.length - 1] !== \"]\") {\n      return failure;\n    }\n\n    return parseIPv6(input.substring(1, input.length - 1));\n  }\n\n  if (isNotSpecialArg) {\n    return parseOpaqueHost(input);\n  }\n\n  const domain = utf8DecodeWithoutBOM(percentDecodeString(input));\n  const asciiDomain = domainToASCII(domain);\n  if (asciiDomain === failure) {\n    return failure;\n  }\n\n  if (containsForbiddenDomainCodePoint(asciiDomain)) {\n    return failure;\n  }\n\n  if (endsInANumber(asciiDomain)) {\n    return parseIPv4(asciiDomain);\n  }\n\n  return asciiDomain;\n}\n\nfunction endsInANumber(input) {\n  const parts = input.split(\".\");\n  if (parts[parts.length - 1] === \"\") {\n    if (parts.length === 1) {\n      return false;\n    }\n    parts.pop();\n  }\n\n  const last = parts[parts.length - 1];\n  if (parseIPv4Number(last) !== failure) {\n    return true;\n  }\n\n  if (/^[0-9]+$/u.test(last)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction parseOpaqueHost(input) {\n  if (containsForbiddenHostCodePoint(input)) {\n    return failure;\n  }\n\n  return utf8PercentEncodeString(input, isC0ControlPercentEncode);\n}\n\nfunction findLongestZeroSequence(arr) {\n  let maxIdx = null;\n  let maxLen = 1; // only find elements > 1\n  let currStart = null;\n  let currLen = 0;\n\n  for (let i = 0; i < arr.length; ++i) {\n    if (arr[i] !== 0) {\n      if (currLen > maxLen) {\n        maxIdx = currStart;\n        maxLen = currLen;\n      }\n\n      currStart = null;\n      currLen = 0;\n    } else {\n      if (currStart === null) {\n        currStart = i;\n      }\n      ++currLen;\n    }\n  }\n\n  // if trailing zeros\n  if (currLen > maxLen) {\n    return currStart;\n  }\n\n  return maxIdx;\n}\n\nfunction serializeHost(host) {\n  if (typeof host === \"number\") {\n    return serializeIPv4(host);\n  }\n\n  // IPv6 serializer\n  if (host instanceof Array) {\n    return `[${serializeIPv6(host)}]`;\n  }\n\n  return host;\n}\n\nfunction domainToASCII(domain, beStrict = false) {\n  const result = tr46.toASCII(domain, {\n    checkBidi: true,\n    checkHyphens: false,\n    checkJoiners: true,\n    useSTD3ASCIIRules: beStrict,\n    verifyDNSLength: beStrict\n  });\n  if (result === null || result === \"\") {\n    return failure;\n  }\n  return result;\n}\n\nfunction trimControlChars(url) {\n  return url.replace(/^[\\u0000-\\u001F\\u0020]+|[\\u0000-\\u001F\\u0020]+$/ug, \"\");\n}\n\nfunction trimTabAndNewline(url) {\n  return url.replace(/\\u0009|\\u000A|\\u000D/ug, \"\");\n}\n\nfunction shortenPath(url) {\n  const { path } = url;\n  if (path.length === 0) {\n    return;\n  }\n  if (url.scheme === \"file\" && path.length === 1 && isNormalizedWindowsDriveLetter(path[0])) {\n    return;\n  }\n\n  path.pop();\n}\n\nfunction includesCredentials(url) {\n  return url.username !== \"\" || url.password !== \"\";\n}\n\nfunction cannotHaveAUsernamePasswordPort(url) {\n  return url.host === null || url.host === \"\" || url.scheme === \"file\";\n}\n\nfunction hasAnOpaquePath(url) {\n  return typeof url.path === \"string\";\n}\n\nfunction isNormalizedWindowsDriveLetter(string) {\n  return /^[A-Za-z]:$/u.test(string);\n}\n\nfunction URLStateMachine(input, base, encodingOverride, url, stateOverride) {\n  this.pointer = 0;\n  this.input = input;\n  this.base = base || null;\n  this.encodingOverride = encodingOverride || \"utf-8\";\n  this.stateOverride = stateOverride;\n  this.url = url;\n  this.failure = false;\n  this.parseError = false;\n\n  if (!this.url) {\n    this.url = {\n      scheme: \"\",\n      username: \"\",\n      password: \"\",\n      host: null,\n      port: null,\n      path: [],\n      query: null,\n      fragment: null\n    };\n\n    const res = trimControlChars(this.input);\n    if (res !== this.input) {\n      this.parseError = true;\n    }\n    this.input = res;\n  }\n\n  const res = trimTabAndNewline(this.input);\n  if (res !== this.input) {\n    this.parseError = true;\n  }\n  this.input = res;\n\n  this.state = stateOverride || \"scheme start\";\n\n  this.buffer = \"\";\n  this.atFlag = false;\n  this.arrFlag = false;\n  this.passwordTokenSeenFlag = false;\n\n  this.input = Array.from(this.input, c => c.codePointAt(0));\n\n  for (; this.pointer <= this.input.length; ++this.pointer) {\n    const c = this.input[this.pointer];\n    const cStr = isNaN(c) ? undefined : String.fromCodePoint(c);\n\n    // exec state machine\n    const ret = this[`parse ${this.state}`](c, cStr);\n    if (!ret) {\n      break; // terminate algorithm\n    } else if (ret === failure) {\n      this.failure = true;\n      break;\n    }\n  }\n}\n\nURLStateMachine.prototype[\"parse scheme start\"] = function parseSchemeStart(c, cStr) {\n  if (infra.isASCIIAlpha(c)) {\n    this.buffer += cStr.toLowerCase();\n    this.state = \"scheme\";\n  } else if (!this.stateOverride) {\n    this.state = \"no scheme\";\n    --this.pointer;\n  } else {\n    this.parseError = true;\n    return failure;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse scheme\"] = function parseScheme(c, cStr) {\n  if (infra.isASCIIAlphanumeric(c) || c === p(\"+\") || c === p(\"-\") || c === p(\".\")) {\n    this.buffer += cStr.toLowerCase();\n  } else if (c === p(\":\")) {\n    if (this.stateOverride) {\n      if (isSpecial(this.url) && !isSpecialScheme(this.buffer)) {\n        return false;\n      }\n\n      if (!isSpecial(this.url) && isSpecialScheme(this.buffer)) {\n        return false;\n      }\n\n      if ((includesCredentials(this.url) || this.url.port !== null) && this.buffer === \"file\") {\n        return false;\n      }\n\n      if (this.url.scheme === \"file\" && this.url.host === \"\") {\n        return false;\n      }\n    }\n    this.url.scheme = this.buffer;\n    if (this.stateOverride) {\n      if (this.url.port === defaultPort(this.url.scheme)) {\n        this.url.port = null;\n      }\n      return false;\n    }\n    this.buffer = \"\";\n    if (this.url.scheme === \"file\") {\n      if (this.input[this.pointer + 1] !== p(\"/\") || this.input[this.pointer + 2] !== p(\"/\")) {\n        this.parseError = true;\n      }\n      this.state = \"file\";\n    } else if (isSpecial(this.url) && this.base !== null && this.base.scheme === this.url.scheme) {\n      this.state = \"special relative or authority\";\n    } else if (isSpecial(this.url)) {\n      this.state = \"special authority slashes\";\n    } else if (this.input[this.pointer + 1] === p(\"/\")) {\n      this.state = \"path or authority\";\n      ++this.pointer;\n    } else {\n      this.url.path = \"\";\n      this.state = \"opaque path\";\n    }\n  } else if (!this.stateOverride) {\n    this.buffer = \"\";\n    this.state = \"no scheme\";\n    this.pointer = -1;\n  } else {\n    this.parseError = true;\n    return failure;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse no scheme\"] = function parseNoScheme(c) {\n  if (this.base === null || (hasAnOpaquePath(this.base) && c !== p(\"#\"))) {\n    return failure;\n  } else if (hasAnOpaquePath(this.base) && c === p(\"#\")) {\n    this.url.scheme = this.base.scheme;\n    this.url.path = this.base.path;\n    this.url.query = this.base.query;\n    this.url.fragment = \"\";\n    this.state = \"fragment\";\n  } else if (this.base.scheme === \"file\") {\n    this.state = \"file\";\n    --this.pointer;\n  } else {\n    this.state = \"relative\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse special relative or authority\"] = function parseSpecialRelativeOrAuthority(c) {\n  if (c === p(\"/\") && this.input[this.pointer + 1] === p(\"/\")) {\n    this.state = \"special authority ignore slashes\";\n    ++this.pointer;\n  } else {\n    this.parseError = true;\n    this.state = \"relative\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse path or authority\"] = function parsePathOrAuthority(c) {\n  if (c === p(\"/\")) {\n    this.state = \"authority\";\n  } else {\n    this.state = \"path\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse relative\"] = function parseRelative(c) {\n  this.url.scheme = this.base.scheme;\n  if (c === p(\"/\")) {\n    this.state = \"relative slash\";\n  } else if (isSpecial(this.url) && c === p(\"\\\\\")) {\n    this.parseError = true;\n    this.state = \"relative slash\";\n  } else {\n    this.url.username = this.base.username;\n    this.url.password = this.base.password;\n    this.url.host = this.base.host;\n    this.url.port = this.base.port;\n    this.url.path = this.base.path.slice();\n    this.url.query = this.base.query;\n    if (c === p(\"?\")) {\n      this.url.query = \"\";\n      this.state = \"query\";\n    } else if (c === p(\"#\")) {\n      this.url.fragment = \"\";\n      this.state = \"fragment\";\n    } else if (!isNaN(c)) {\n      this.url.query = null;\n      this.url.path.pop();\n      this.state = \"path\";\n      --this.pointer;\n    }\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse relative slash\"] = function parseRelativeSlash(c) {\n  if (isSpecial(this.url) && (c === p(\"/\") || c === p(\"\\\\\"))) {\n    if (c === p(\"\\\\\")) {\n      this.parseError = true;\n    }\n    this.state = \"special authority ignore slashes\";\n  } else if (c === p(\"/\")) {\n    this.state = \"authority\";\n  } else {\n    this.url.username = this.base.username;\n    this.url.password = this.base.password;\n    this.url.host = this.base.host;\n    this.url.port = this.base.port;\n    this.state = \"path\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse special authority slashes\"] = function parseSpecialAuthoritySlashes(c) {\n  if (c === p(\"/\") && this.input[this.pointer + 1] === p(\"/\")) {\n    this.state = \"special authority ignore slashes\";\n    ++this.pointer;\n  } else {\n    this.parseError = true;\n    this.state = \"special authority ignore slashes\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse special authority ignore slashes\"] = function parseSpecialAuthorityIgnoreSlashes(c) {\n  if (c !== p(\"/\") && c !== p(\"\\\\\")) {\n    this.state = \"authority\";\n    --this.pointer;\n  } else {\n    this.parseError = true;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse authority\"] = function parseAuthority(c, cStr) {\n  if (c === p(\"@\")) {\n    this.parseError = true;\n    if (this.atFlag) {\n      this.buffer = `%40${this.buffer}`;\n    }\n    this.atFlag = true;\n\n    // careful, this is based on buffer and has its own pointer (this.pointer != pointer) and inner chars\n    const len = countSymbols(this.buffer);\n    for (let pointer = 0; pointer < len; ++pointer) {\n      const codePoint = this.buffer.codePointAt(pointer);\n\n      if (codePoint === p(\":\") && !this.passwordTokenSeenFlag) {\n        this.passwordTokenSeenFlag = true;\n        continue;\n      }\n      const encodedCodePoints = utf8PercentEncodeCodePoint(codePoint, isUserinfoPercentEncode);\n      if (this.passwordTokenSeenFlag) {\n        this.url.password += encodedCodePoints;\n      } else {\n        this.url.username += encodedCodePoints;\n      }\n    }\n    this.buffer = \"\";\n  } else if (isNaN(c) || c === p(\"/\") || c === p(\"?\") || c === p(\"#\") ||\n             (isSpecial(this.url) && c === p(\"\\\\\"))) {\n    if (this.atFlag && this.buffer === \"\") {\n      this.parseError = true;\n      return failure;\n    }\n    this.pointer -= countSymbols(this.buffer) + 1;\n    this.buffer = \"\";\n    this.state = \"host\";\n  } else {\n    this.buffer += cStr;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse hostname\"] =\nURLStateMachine.prototype[\"parse host\"] = function parseHostName(c, cStr) {\n  if (this.stateOverride && this.url.scheme === \"file\") {\n    --this.pointer;\n    this.state = \"file host\";\n  } else if (c === p(\":\") && !this.arrFlag) {\n    if (this.buffer === \"\") {\n      this.parseError = true;\n      return failure;\n    }\n\n    if (this.stateOverride === \"hostname\") {\n      return false;\n    }\n\n    const host = parseHost(this.buffer, isNotSpecial(this.url));\n    if (host === failure) {\n      return failure;\n    }\n\n    this.url.host = host;\n    this.buffer = \"\";\n    this.state = \"port\";\n  } else if (isNaN(c) || c === p(\"/\") || c === p(\"?\") || c === p(\"#\") ||\n             (isSpecial(this.url) && c === p(\"\\\\\"))) {\n    --this.pointer;\n    if (isSpecial(this.url) && this.buffer === \"\") {\n      this.parseError = true;\n      return failure;\n    } else if (this.stateOverride && this.buffer === \"\" &&\n               (includesCredentials(this.url) || this.url.port !== null)) {\n      this.parseError = true;\n      return false;\n    }\n\n    const host = parseHost(this.buffer, isNotSpecial(this.url));\n    if (host === failure) {\n      return failure;\n    }\n\n    this.url.host = host;\n    this.buffer = \"\";\n    this.state = \"path start\";\n    if (this.stateOverride) {\n      return false;\n    }\n  } else {\n    if (c === p(\"[\")) {\n      this.arrFlag = true;\n    } else if (c === p(\"]\")) {\n      this.arrFlag = false;\n    }\n    this.buffer += cStr;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse port\"] = function parsePort(c, cStr) {\n  if (infra.isASCIIDigit(c)) {\n    this.buffer += cStr;\n  } else if (isNaN(c) || c === p(\"/\") || c === p(\"?\") || c === p(\"#\") ||\n             (isSpecial(this.url) && c === p(\"\\\\\")) ||\n             this.stateOverride) {\n    if (this.buffer !== \"\") {\n      const port = parseInt(this.buffer);\n      if (port > 2 ** 16 - 1) {\n        this.parseError = true;\n        return failure;\n      }\n      this.url.port = port === defaultPort(this.url.scheme) ? null : port;\n      this.buffer = \"\";\n    }\n    if (this.stateOverride) {\n      return false;\n    }\n    this.state = \"path start\";\n    --this.pointer;\n  } else {\n    this.parseError = true;\n    return failure;\n  }\n\n  return true;\n};\n\nconst fileOtherwiseCodePoints = new Set([p(\"/\"), p(\"\\\\\"), p(\"?\"), p(\"#\")]);\n\nfunction startsWithWindowsDriveLetter(input, pointer) {\n  const length = input.length - pointer;\n  return length >= 2 &&\n    isWindowsDriveLetterCodePoints(input[pointer], input[pointer + 1]) &&\n    (length === 2 || fileOtherwiseCodePoints.has(input[pointer + 2]));\n}\n\nURLStateMachine.prototype[\"parse file\"] = function parseFile(c) {\n  this.url.scheme = \"file\";\n  this.url.host = \"\";\n\n  if (c === p(\"/\") || c === p(\"\\\\\")) {\n    if (c === p(\"\\\\\")) {\n      this.parseError = true;\n    }\n    this.state = \"file slash\";\n  } else if (this.base !== null && this.base.scheme === \"file\") {\n    this.url.host = this.base.host;\n    this.url.path = this.base.path.slice();\n    this.url.query = this.base.query;\n    if (c === p(\"?\")) {\n      this.url.query = \"\";\n      this.state = \"query\";\n    } else if (c === p(\"#\")) {\n      this.url.fragment = \"\";\n      this.state = \"fragment\";\n    } else if (!isNaN(c)) {\n      this.url.query = null;\n      if (!startsWithWindowsDriveLetter(this.input, this.pointer)) {\n        shortenPath(this.url);\n      } else {\n        this.parseError = true;\n        this.url.path = [];\n      }\n\n      this.state = \"path\";\n      --this.pointer;\n    }\n  } else {\n    this.state = \"path\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse file slash\"] = function parseFileSlash(c) {\n  if (c === p(\"/\") || c === p(\"\\\\\")) {\n    if (c === p(\"\\\\\")) {\n      this.parseError = true;\n    }\n    this.state = \"file host\";\n  } else {\n    if (this.base !== null && this.base.scheme === \"file\") {\n      if (!startsWithWindowsDriveLetter(this.input, this.pointer) &&\n          isNormalizedWindowsDriveLetterString(this.base.path[0])) {\n        this.url.path.push(this.base.path[0]);\n      }\n      this.url.host = this.base.host;\n    }\n    this.state = \"path\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse file host\"] = function parseFileHost(c, cStr) {\n  if (isNaN(c) || c === p(\"/\") || c === p(\"\\\\\") || c === p(\"?\") || c === p(\"#\")) {\n    --this.pointer;\n    if (!this.stateOverride && isWindowsDriveLetterString(this.buffer)) {\n      this.parseError = true;\n      this.state = \"path\";\n    } else if (this.buffer === \"\") {\n      this.url.host = \"\";\n      if (this.stateOverride) {\n        return false;\n      }\n      this.state = \"path start\";\n    } else {\n      let host = parseHost(this.buffer, isNotSpecial(this.url));\n      if (host === failure) {\n        return failure;\n      }\n      if (host === \"localhost\") {\n        host = \"\";\n      }\n      this.url.host = host;\n\n      if (this.stateOverride) {\n        return false;\n      }\n\n      this.buffer = \"\";\n      this.state = \"path start\";\n    }\n  } else {\n    this.buffer += cStr;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse path start\"] = function parsePathStart(c) {\n  if (isSpecial(this.url)) {\n    if (c === p(\"\\\\\")) {\n      this.parseError = true;\n    }\n    this.state = \"path\";\n\n    if (c !== p(\"/\") && c !== p(\"\\\\\")) {\n      --this.pointer;\n    }\n  } else if (!this.stateOverride && c === p(\"?\")) {\n    this.url.query = \"\";\n    this.state = \"query\";\n  } else if (!this.stateOverride && c === p(\"#\")) {\n    this.url.fragment = \"\";\n    this.state = \"fragment\";\n  } else if (c !== undefined) {\n    this.state = \"path\";\n    if (c !== p(\"/\")) {\n      --this.pointer;\n    }\n  } else if (this.stateOverride && this.url.host === null) {\n    this.url.path.push(\"\");\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse path\"] = function parsePath(c) {\n  if (isNaN(c) || c === p(\"/\") || (isSpecial(this.url) && c === p(\"\\\\\")) ||\n      (!this.stateOverride && (c === p(\"?\") || c === p(\"#\")))) {\n    if (isSpecial(this.url) && c === p(\"\\\\\")) {\n      this.parseError = true;\n    }\n\n    if (isDoubleDot(this.buffer)) {\n      shortenPath(this.url);\n      if (c !== p(\"/\") && !(isSpecial(this.url) && c === p(\"\\\\\"))) {\n        this.url.path.push(\"\");\n      }\n    } else if (isSingleDot(this.buffer) && c !== p(\"/\") &&\n               !(isSpecial(this.url) && c === p(\"\\\\\"))) {\n      this.url.path.push(\"\");\n    } else if (!isSingleDot(this.buffer)) {\n      if (this.url.scheme === \"file\" && this.url.path.length === 0 && isWindowsDriveLetterString(this.buffer)) {\n        this.buffer = `${this.buffer[0]}:`;\n      }\n      this.url.path.push(this.buffer);\n    }\n    this.buffer = \"\";\n    if (c === p(\"?\")) {\n      this.url.query = \"\";\n      this.state = \"query\";\n    }\n    if (c === p(\"#\")) {\n      this.url.fragment = \"\";\n      this.state = \"fragment\";\n    }\n  } else {\n    // TODO: If c is not a URL code point and not \"%\", parse error.\n\n    if (c === p(\"%\") &&\n      (!infra.isASCIIHex(this.input[this.pointer + 1]) ||\n        !infra.isASCIIHex(this.input[this.pointer + 2]))) {\n      this.parseError = true;\n    }\n\n    this.buffer += utf8PercentEncodeCodePoint(c, isPathPercentEncode);\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse opaque path\"] = function parseOpaquePath(c) {\n  if (c === p(\"?\")) {\n    this.url.query = \"\";\n    this.state = \"query\";\n  } else if (c === p(\"#\")) {\n    this.url.fragment = \"\";\n    this.state = \"fragment\";\n  } else {\n    // TODO: Add: not a URL code point\n    if (!isNaN(c) && c !== p(\"%\")) {\n      this.parseError = true;\n    }\n\n    if (c === p(\"%\") &&\n        (!infra.isASCIIHex(this.input[this.pointer + 1]) ||\n         !infra.isASCIIHex(this.input[this.pointer + 2]))) {\n      this.parseError = true;\n    }\n\n    if (!isNaN(c)) {\n      this.url.path += utf8PercentEncodeCodePoint(c, isC0ControlPercentEncode);\n    }\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse query\"] = function parseQuery(c, cStr) {\n  if (!isSpecial(this.url) || this.url.scheme === \"ws\" || this.url.scheme === \"wss\") {\n    this.encodingOverride = \"utf-8\";\n  }\n\n  if ((!this.stateOverride && c === p(\"#\")) || isNaN(c)) {\n    const queryPercentEncodePredicate = isSpecial(this.url) ? isSpecialQueryPercentEncode : isQueryPercentEncode;\n    this.url.query += utf8PercentEncodeString(this.buffer, queryPercentEncodePredicate);\n\n    this.buffer = \"\";\n\n    if (c === p(\"#\")) {\n      this.url.fragment = \"\";\n      this.state = \"fragment\";\n    }\n  } else if (!isNaN(c)) {\n    // TODO: If c is not a URL code point and not \"%\", parse error.\n\n    if (c === p(\"%\") &&\n      (!infra.isASCIIHex(this.input[this.pointer + 1]) ||\n        !infra.isASCIIHex(this.input[this.pointer + 2]))) {\n      this.parseError = true;\n    }\n\n    this.buffer += cStr;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse fragment\"] = function parseFragment(c) {\n  if (!isNaN(c)) {\n    // TODO: If c is not a URL code point and not \"%\", parse error.\n    if (c === p(\"%\") &&\n      (!infra.isASCIIHex(this.input[this.pointer + 1]) ||\n        !infra.isASCIIHex(this.input[this.pointer + 2]))) {\n      this.parseError = true;\n    }\n\n    this.url.fragment += utf8PercentEncodeCodePoint(c, isFragmentPercentEncode);\n  }\n\n  return true;\n};\n\nfunction serializeURL(url, excludeFragment) {\n  let output = `${url.scheme}:`;\n  if (url.host !== null) {\n    output += \"//\";\n\n    if (url.username !== \"\" || url.password !== \"\") {\n      output += url.username;\n      if (url.password !== \"\") {\n        output += `:${url.password}`;\n      }\n      output += \"@\";\n    }\n\n    output += serializeHost(url.host);\n\n    if (url.port !== null) {\n      output += `:${url.port}`;\n    }\n  }\n\n  if (url.host === null && !hasAnOpaquePath(url) && url.path.length > 1 && url.path[0] === \"\") {\n    output += \"/.\";\n  }\n  output += serializePath(url);\n\n  if (url.query !== null) {\n    output += `?${url.query}`;\n  }\n\n  if (!excludeFragment && url.fragment !== null) {\n    output += `#${url.fragment}`;\n  }\n\n  return output;\n}\n\nfunction serializeOrigin(tuple) {\n  let result = `${tuple.scheme}://`;\n  result += serializeHost(tuple.host);\n\n  if (tuple.port !== null) {\n    result += `:${tuple.port}`;\n  }\n\n  return result;\n}\n\nfunction serializePath(url) {\n  if (hasAnOpaquePath(url)) {\n    return url.path;\n  }\n\n  let output = \"\";\n  for (const segment of url.path) {\n    output += `/${segment}`;\n  }\n  return output;\n}\n\nmodule.exports.serializeURL = serializeURL;\n\nmodule.exports.serializePath = serializePath;\n\nmodule.exports.serializeURLOrigin = function (url) {\n  // https://url.spec.whatwg.org/#concept-url-origin\n  switch (url.scheme) {\n    case \"blob\":\n      try {\n        return module.exports.serializeURLOrigin(module.exports.parseURL(serializePath(url)));\n      } catch (e) {\n        // serializing an opaque origin returns \"null\"\n        return \"null\";\n      }\n    case \"ftp\":\n    case \"http\":\n    case \"https\":\n    case \"ws\":\n    case \"wss\":\n      return serializeOrigin({\n        scheme: url.scheme,\n        host: url.host,\n        port: url.port\n      });\n    case \"file\":\n      // The spec says:\n      // > Unfortunate as it is, this is left as an exercise to the reader. When in doubt, return a new opaque origin.\n      // Browsers tested so far:\n      // - Chrome says \"file://\", but treats file: URLs as cross-origin for most (all?) purposes; see e.g.\n      //   https://bugs.chromium.org/p/chromium/issues/detail?id=37586\n      // - Firefox says \"null\", but treats file: URLs as same-origin sometimes based on directory stuff; see\n      //   https://developer.mozilla.org/en-US/docs/Archive/Misc_top_level/Same-origin_policy_for_file:_URIs\n      return \"null\";\n    default:\n      // serializing an opaque origin returns \"null\"\n      return \"null\";\n  }\n};\n\nmodule.exports.basicURLParse = function (input, options) {\n  if (options === undefined) {\n    options = {};\n  }\n\n  const usm = new URLStateMachine(input, options.baseURL, options.encodingOverride, options.url, options.stateOverride);\n  if (usm.failure) {\n    return null;\n  }\n\n  return usm.url;\n};\n\nmodule.exports.setTheUsername = function (url, username) {\n  url.username = utf8PercentEncodeString(username, isUserinfoPercentEncode);\n};\n\nmodule.exports.setThePassword = function (url, password) {\n  url.password = utf8PercentEncodeString(password, isUserinfoPercentEncode);\n};\n\nmodule.exports.serializeHost = serializeHost;\n\nmodule.exports.cannotHaveAUsernamePasswordPort = cannotHaveAUsernamePasswordPort;\n\nmodule.exports.hasAnOpaquePath = hasAnOpaquePath;\n\nmodule.exports.serializeInteger = function (integer) {\n  return String(integer);\n};\n\nmodule.exports.parseURL = function (input, options) {\n  if (options === undefined) {\n    options = {};\n  }\n\n  // We don't handle blobs, so this just delegates:\n  return module.exports.basicURLParse(input, { baseURL: options.baseURL, encodingOverride: options.encodingOverride });\n};\n", "\"use strict\";\nconst { utf8Encode, utf8DecodeWithoutBOM } = require(\"./encoding\");\nconst { percentDecodeBytes, utf8PercentEncodeString, isURLEncodedPercentEncode } = require(\"./percent-encoding\");\n\nfunction p(char) {\n  return char.codePointAt(0);\n}\n\n// https://url.spec.whatwg.org/#concept-urlencoded-parser\nfunction parseUrlencoded(input) {\n  const sequences = strictlySplitByteSequence(input, p(\"&\"));\n  const output = [];\n  for (const bytes of sequences) {\n    if (bytes.length === 0) {\n      continue;\n    }\n\n    let name, value;\n    const indexOfEqual = bytes.indexOf(p(\"=\"));\n\n    if (indexOfEqual >= 0) {\n      name = bytes.slice(0, indexOfEqual);\n      value = bytes.slice(indexOfEqual + 1);\n    } else {\n      name = bytes;\n      value = new Uint8Array(0);\n    }\n\n    name = replaceByteInByteSequence(name, 0x2B, 0x20);\n    value = replaceByteInByteSequence(value, 0x2B, 0x20);\n\n    const nameString = utf8DecodeWithoutBOM(percentDecodeBytes(name));\n    const valueString = utf8DecodeWithoutBOM(percentDecodeBytes(value));\n\n    output.push([nameString, valueString]);\n  }\n  return output;\n}\n\n// https://url.spec.whatwg.org/#concept-urlencoded-string-parser\nfunction parseUrlencodedString(input) {\n  return parseUrlencoded(utf8Encode(input));\n}\n\n// https://url.spec.whatwg.org/#concept-urlencoded-serializer\nfunction serializeUrlencoded(tuples, encodingOverride = undefined) {\n  let encoding = \"utf-8\";\n  if (encodingOverride !== undefined) {\n    // TODO \"get the output encoding\", i.e. handle encoding labels vs. names.\n    encoding = encodingOverride;\n  }\n\n  let output = \"\";\n  for (const [i, tuple] of tuples.entries()) {\n    // TODO: handle encoding override\n\n    const name = utf8PercentEncodeString(tuple[0], isURLEncodedPercentEncode, true);\n\n    let value = tuple[1];\n    if (tuple.length > 2 && tuple[2] !== undefined) {\n      if (tuple[2] === \"hidden\" && name === \"_charset_\") {\n        value = encoding;\n      } else if (tuple[2] === \"file\") {\n        // value is a File object\n        value = value.name;\n      }\n    }\n\n    value = utf8PercentEncodeString(value, isURLEncodedPercentEncode, true);\n\n    if (i !== 0) {\n      output += \"&\";\n    }\n    output += `${name}=${value}`;\n  }\n  return output;\n}\n\nfunction strictlySplitByteSequence(buf, cp) {\n  const list = [];\n  let last = 0;\n  let i = buf.indexOf(cp);\n  while (i >= 0) {\n    list.push(buf.slice(last, i));\n    last = i + 1;\n    i = buf.indexOf(cp, last);\n  }\n  if (last !== buf.length) {\n    list.push(buf.slice(last));\n  }\n  return list;\n}\n\nfunction replaceByteInByteSequence(buf, from, to) {\n  let i = buf.indexOf(from);\n  while (i >= 0) {\n    buf[i] = to;\n    i = buf.indexOf(from, i + 1);\n  }\n  return buf;\n}\n\nmodule.exports = {\n  parseUrlencodedString,\n  serializeUrlencoded\n};\n", "\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nexports.convert = (globalObject, value, { context = \"The provided value\" } = {}) => {\n  if (typeof value !== \"function\") {\n    throw new globalObject.TypeError(context + \" is not a function\");\n  }\n\n  function invokeTheCallbackFunction(...args) {\n    const thisArg = utils.tryWrapperForImpl(this);\n    let callResult;\n\n    for (let i = 0; i < args.length; i++) {\n      args[i] = utils.tryWrapperForImpl(args[i]);\n    }\n\n    callResult = Reflect.apply(value, thisArg, args);\n\n    callResult = conversions[\"any\"](callResult, { context: context, globals: globalObject });\n\n    return callResult;\n  }\n\n  invokeTheCallbackFunction.construct = (...args) => {\n    for (let i = 0; i < args.length; i++) {\n      args[i] = utils.tryWrapperForImpl(args[i]);\n    }\n\n    let callResult = Reflect.construct(value, args);\n\n    callResult = conversions[\"any\"](callResult, { context: context, globals: globalObject });\n\n    return callResult;\n  };\n\n  invokeTheCallbackFunction[utils.wrapperSymbol] = value;\n  invokeTheCallbackFunction.objectReference = value;\n\n  return invokeTheCallbackFunction;\n};\n", "\"use strict\";\nconst urlencoded = require(\"./urlencoded\");\n\nexports.implementation = class URLSearchParamsImpl {\n  constructor(globalObject, constructorArgs, { doNotStripQMark = false }) {\n    let init = constructorArgs[0];\n    this._list = [];\n    this._url = null;\n\n    if (!doNotStripQMark && typeof init === \"string\" && init[0] === \"?\") {\n      init = init.slice(1);\n    }\n\n    if (Array.isArray(init)) {\n      for (const pair of init) {\n        if (pair.length !== 2) {\n          throw new TypeError(\"Failed to construct 'URLSearchParams': parameter 1 sequence's element does not \" +\n                              \"contain exactly two elements.\");\n        }\n        this._list.push([pair[0], pair[1]]);\n      }\n    } else if (typeof init === \"object\" && Object.getPrototypeOf(init) === null) {\n      for (const name of Object.keys(init)) {\n        const value = init[name];\n        this._list.push([name, value]);\n      }\n    } else {\n      this._list = urlencoded.parseUrlencodedString(init);\n    }\n  }\n\n  _updateSteps() {\n    if (this._url !== null) {\n      let query = urlencoded.serializeUrlencoded(this._list);\n      if (query === \"\") {\n        query = null;\n      }\n      this._url._url.query = query;\n    }\n  }\n\n  append(name, value) {\n    this._list.push([name, value]);\n    this._updateSteps();\n  }\n\n  delete(name) {\n    let i = 0;\n    while (i < this._list.length) {\n      if (this._list[i][0] === name) {\n        this._list.splice(i, 1);\n      } else {\n        i++;\n      }\n    }\n    this._updateSteps();\n  }\n\n  get(name) {\n    for (const tuple of this._list) {\n      if (tuple[0] === name) {\n        return tuple[1];\n      }\n    }\n    return null;\n  }\n\n  getAll(name) {\n    const output = [];\n    for (const tuple of this._list) {\n      if (tuple[0] === name) {\n        output.push(tuple[1]);\n      }\n    }\n    return output;\n  }\n\n  has(name) {\n    for (const tuple of this._list) {\n      if (tuple[0] === name) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  set(name, value) {\n    let found = false;\n    let i = 0;\n    while (i < this._list.length) {\n      if (this._list[i][0] === name) {\n        if (found) {\n          this._list.splice(i, 1);\n        } else {\n          found = true;\n          this._list[i][1] = value;\n          i++;\n        }\n      } else {\n        i++;\n      }\n    }\n    if (!found) {\n      this._list.push([name, value]);\n    }\n    this._updateSteps();\n  }\n\n  sort() {\n    this._list.sort((a, b) => {\n      if (a[0] < b[0]) {\n        return -1;\n      }\n      if (a[0] > b[0]) {\n        return 1;\n      }\n      return 0;\n    });\n\n    this._updateSteps();\n  }\n\n  [Symbol.iterator]() {\n    return this._list[Symbol.iterator]();\n  }\n\n  toString() {\n    return urlencoded.serializeUrlencoded(this._list);\n  }\n};\n", "\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst Function = require(\"./Function.js\");\nconst newObjectInRealm = utils.newObjectInRealm;\nconst implSymbol = utils.implSymbol;\nconst ctorRegistrySymbol = utils.ctorRegistrySymbol;\n\nconst interfaceName = \"URLSearchParams\";\n\nexports.is = value => {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\nexports.isImpl = value => {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\nexports.convert = (globalObject, value, { context = \"The provided value\" } = {}) => {\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n  throw new globalObject.TypeError(`${context} is not of type 'URLSearchParams'.`);\n};\n\nexports.createDefaultIterator = (globalObject, target, kind) => {\n  const ctorRegistry = globalObject[ctorRegistrySymbol];\n  const iteratorPrototype = ctorRegistry[\"URLSearchParams Iterator\"];\n  const iterator = Object.create(iteratorPrototype);\n  Object.defineProperty(iterator, utils.iterInternalSymbol, {\n    value: { target, kind, index: 0 },\n    configurable: true\n  });\n  return iterator;\n};\n\nfunction makeWrapper(globalObject, newTarget) {\n  let proto;\n  if (newTarget !== undefined) {\n    proto = newTarget.prototype;\n  }\n\n  if (!utils.isObject(proto)) {\n    proto = globalObject[ctorRegistrySymbol][\"URLSearchParams\"].prototype;\n  }\n\n  return Object.create(proto);\n}\n\nexports.create = (globalObject, constructorArgs, privateData) => {\n  const wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\n\nexports.createImpl = (globalObject, constructorArgs, privateData) => {\n  const wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\n\nexports._internalSetup = (wrapper, globalObject) => {};\n\nexports.setup = (wrapper, globalObject, constructorArgs = [], privateData = {}) => {\n  privateData.wrapper = wrapper;\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper;\n};\n\nexports.new = (globalObject, newTarget) => {\n  const wrapper = makeWrapper(globalObject, newTarget);\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper[implSymbol];\n};\n\nconst exposed = new Set([\"Window\", \"Worker\"]);\n\nexports.install = (globalObject, globalNames) => {\n  if (!globalNames.some(globalName => exposed.has(globalName))) {\n    return;\n  }\n\n  const ctorRegistry = utils.initCtorRegistry(globalObject);\n  class URLSearchParams {\n    constructor() {\n      const args = [];\n      {\n        let curArg = arguments[0];\n        if (curArg !== undefined) {\n          if (utils.isObject(curArg)) {\n            if (curArg[Symbol.iterator] !== undefined) {\n              if (!utils.isObject(curArg)) {\n                throw new globalObject.TypeError(\n                  \"Failed to construct 'URLSearchParams': parameter 1\" + \" sequence\" + \" is not an iterable object.\"\n                );\n              } else {\n                const V = [];\n                const tmp = curArg;\n                for (let nextItem of tmp) {\n                  if (!utils.isObject(nextItem)) {\n                    throw new globalObject.TypeError(\n                      \"Failed to construct 'URLSearchParams': parameter 1\" +\n                        \" sequence\" +\n                        \"'s element\" +\n                        \" is not an iterable object.\"\n                    );\n                  } else {\n                    const V = [];\n                    const tmp = nextItem;\n                    for (let nextItem of tmp) {\n                      nextItem = conversions[\"USVString\"](nextItem, {\n                        context:\n                          \"Failed to construct 'URLSearchParams': parameter 1\" +\n                          \" sequence\" +\n                          \"'s element\" +\n                          \"'s element\",\n                        globals: globalObject\n                      });\n\n                      V.push(nextItem);\n                    }\n                    nextItem = V;\n                  }\n\n                  V.push(nextItem);\n                }\n                curArg = V;\n              }\n            } else {\n              if (!utils.isObject(curArg)) {\n                throw new globalObject.TypeError(\n                  \"Failed to construct 'URLSearchParams': parameter 1\" + \" record\" + \" is not an object.\"\n                );\n              } else {\n                const result = Object.create(null);\n                for (const key of Reflect.ownKeys(curArg)) {\n                  const desc = Object.getOwnPropertyDescriptor(curArg, key);\n                  if (desc && desc.enumerable) {\n                    let typedKey = key;\n\n                    typedKey = conversions[\"USVString\"](typedKey, {\n                      context: \"Failed to construct 'URLSearchParams': parameter 1\" + \" record\" + \"'s key\",\n                      globals: globalObject\n                    });\n\n                    let typedValue = curArg[key];\n\n                    typedValue = conversions[\"USVString\"](typedValue, {\n                      context: \"Failed to construct 'URLSearchParams': parameter 1\" + \" record\" + \"'s value\",\n                      globals: globalObject\n                    });\n\n                    result[typedKey] = typedValue;\n                  }\n                }\n                curArg = result;\n              }\n            }\n          } else {\n            curArg = conversions[\"USVString\"](curArg, {\n              context: \"Failed to construct 'URLSearchParams': parameter 1\",\n              globals: globalObject\n            });\n          }\n        } else {\n          curArg = \"\";\n        }\n        args.push(curArg);\n      }\n      return exports.setup(Object.create(new.target.prototype), globalObject, args);\n    }\n\n    append(name, value) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'append' called on an object that is not a valid instance of URLSearchParams.\"\n        );\n      }\n\n      if (arguments.length < 2) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'append' on 'URLSearchParams': 2 arguments required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'append' on 'URLSearchParams': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'append' on 'URLSearchParams': parameter 2\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol].append(...args));\n    }\n\n    delete(name) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'delete' called on an object that is not a valid instance of URLSearchParams.\"\n        );\n      }\n\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'delete' on 'URLSearchParams': 1 argument required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'delete' on 'URLSearchParams': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol].delete(...args));\n    }\n\n    get(name) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get' called on an object that is not a valid instance of URLSearchParams.\");\n      }\n\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'get' on 'URLSearchParams': 1 argument required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'get' on 'URLSearchParams': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].get(...args);\n    }\n\n    getAll(name) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'getAll' called on an object that is not a valid instance of URLSearchParams.\"\n        );\n      }\n\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'getAll' on 'URLSearchParams': 1 argument required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'getAll' on 'URLSearchParams': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol].getAll(...args));\n    }\n\n    has(name) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'has' called on an object that is not a valid instance of URLSearchParams.\");\n      }\n\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'has' on 'URLSearchParams': 1 argument required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'has' on 'URLSearchParams': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].has(...args);\n    }\n\n    set(name, value) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set' called on an object that is not a valid instance of URLSearchParams.\");\n      }\n\n      if (arguments.length < 2) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'set' on 'URLSearchParams': 2 arguments required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'set' on 'URLSearchParams': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'set' on 'URLSearchParams': parameter 2\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol].set(...args));\n    }\n\n    sort() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'sort' called on an object that is not a valid instance of URLSearchParams.\");\n      }\n\n      return utils.tryWrapperForImpl(esValue[implSymbol].sort());\n    }\n\n    toString() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'toString' called on an object that is not a valid instance of URLSearchParams.\"\n        );\n      }\n\n      return esValue[implSymbol].toString();\n    }\n\n    keys() {\n      if (!exports.is(this)) {\n        throw new globalObject.TypeError(\"'keys' called on an object that is not a valid instance of URLSearchParams.\");\n      }\n      return exports.createDefaultIterator(globalObject, this, \"key\");\n    }\n\n    values() {\n      if (!exports.is(this)) {\n        throw new globalObject.TypeError(\n          \"'values' called on an object that is not a valid instance of URLSearchParams.\"\n        );\n      }\n      return exports.createDefaultIterator(globalObject, this, \"value\");\n    }\n\n    entries() {\n      if (!exports.is(this)) {\n        throw new globalObject.TypeError(\n          \"'entries' called on an object that is not a valid instance of URLSearchParams.\"\n        );\n      }\n      return exports.createDefaultIterator(globalObject, this, \"key+value\");\n    }\n\n    forEach(callback) {\n      if (!exports.is(this)) {\n        throw new globalObject.TypeError(\n          \"'forEach' called on an object that is not a valid instance of URLSearchParams.\"\n        );\n      }\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          \"Failed to execute 'forEach' on 'iterable': 1 argument required, but only 0 present.\"\n        );\n      }\n      callback = Function.convert(globalObject, callback, {\n        context: \"Failed to execute 'forEach' on 'iterable': The callback provided as parameter 1\"\n      });\n      const thisArg = arguments[1];\n      let pairs = Array.from(this[implSymbol]);\n      let i = 0;\n      while (i < pairs.length) {\n        const [key, value] = pairs[i].map(utils.tryWrapperForImpl);\n        callback.call(thisArg, value, key, this);\n        pairs = Array.from(this[implSymbol]);\n        i++;\n      }\n    }\n  }\n  Object.defineProperties(URLSearchParams.prototype, {\n    append: { enumerable: true },\n    delete: { enumerable: true },\n    get: { enumerable: true },\n    getAll: { enumerable: true },\n    has: { enumerable: true },\n    set: { enumerable: true },\n    sort: { enumerable: true },\n    toString: { enumerable: true },\n    keys: { enumerable: true },\n    values: { enumerable: true },\n    entries: { enumerable: true },\n    forEach: { enumerable: true },\n    [Symbol.toStringTag]: { value: \"URLSearchParams\", configurable: true },\n    [Symbol.iterator]: { value: URLSearchParams.prototype.entries, configurable: true, writable: true }\n  });\n  ctorRegistry[interfaceName] = URLSearchParams;\n\n  ctorRegistry[\"URLSearchParams Iterator\"] = Object.create(ctorRegistry[\"%IteratorPrototype%\"], {\n    [Symbol.toStringTag]: {\n      configurable: true,\n      value: \"URLSearchParams Iterator\"\n    }\n  });\n  utils.define(ctorRegistry[\"URLSearchParams Iterator\"], {\n    next() {\n      const internal = this && this[utils.iterInternalSymbol];\n      if (!internal) {\n        throw new globalObject.TypeError(\"next() called on a value that is not a URLSearchParams iterator object\");\n      }\n\n      const { target, kind, index } = internal;\n      const values = Array.from(target[implSymbol]);\n      const len = values.length;\n      if (index >= len) {\n        return newObjectInRealm(globalObject, { value: undefined, done: true });\n      }\n\n      const pair = values[index];\n      internal.index = index + 1;\n      return newObjectInRealm(globalObject, utils.iteratorResult(pair.map(utils.tryWrapperForImpl), kind));\n    }\n  });\n\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: URLSearchParams\n  });\n};\n\nconst Impl = require(\"./URLSearchParams-impl.js\");\n", "\"use strict\";\nconst usm = require(\"./url-state-machine\");\nconst urlencoded = require(\"./urlencoded\");\nconst URLSearchParams = require(\"./URLSearchParams\");\n\nexports.implementation = class URLImpl {\n  constructor(globalObject, constructorArgs) {\n    const url = constructorArgs[0];\n    const base = constructorArgs[1];\n\n    let parsedBase = null;\n    if (base !== undefined) {\n      parsedBase = usm.basicURLParse(base);\n      if (parsedBase === null) {\n        throw new TypeError(`Invalid base URL: ${base}`);\n      }\n    }\n\n    const parsedURL = usm.basicURLParse(url, { baseURL: parsedBase });\n    if (parsedURL === null) {\n      throw new TypeError(`Invalid URL: ${url}`);\n    }\n\n    const query = parsedURL.query !== null ? parsedURL.query : \"\";\n\n    this._url = parsedURL;\n\n    // We cannot invoke the \"new URLSearchParams object\" algorithm without going through the constructor, which strips\n    // question mark by default. Therefore the doNotStripQMark hack is used.\n    this._query = URLSearchParams.createImpl(globalObject, [query], { doNotStripQMark: true });\n    this._query._url = this;\n  }\n\n  get href() {\n    return usm.serializeURL(this._url);\n  }\n\n  set href(v) {\n    const parsedURL = usm.basicURLParse(v);\n    if (parsedURL === null) {\n      throw new TypeError(`Invalid URL: ${v}`);\n    }\n\n    this._url = parsedURL;\n\n    this._query._list.splice(0);\n    const { query } = parsedURL;\n    if (query !== null) {\n      this._query._list = urlencoded.parseUrlencodedString(query);\n    }\n  }\n\n  get origin() {\n    return usm.serializeURLOrigin(this._url);\n  }\n\n  get protocol() {\n    return `${this._url.scheme}:`;\n  }\n\n  set protocol(v) {\n    usm.basicURLParse(`${v}:`, { url: this._url, stateOverride: \"scheme start\" });\n  }\n\n  get username() {\n    return this._url.username;\n  }\n\n  set username(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setTheUsername(this._url, v);\n  }\n\n  get password() {\n    return this._url.password;\n  }\n\n  set password(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setThePassword(this._url, v);\n  }\n\n  get host() {\n    const url = this._url;\n\n    if (url.host === null) {\n      return \"\";\n    }\n\n    if (url.port === null) {\n      return usm.serializeHost(url.host);\n    }\n\n    return `${usm.serializeHost(url.host)}:${usm.serializeInteger(url.port)}`;\n  }\n\n  set host(v) {\n    if (usm.hasAnOpaquePath(this._url)) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"host\" });\n  }\n\n  get hostname() {\n    if (this._url.host === null) {\n      return \"\";\n    }\n\n    return usm.serializeHost(this._url.host);\n  }\n\n  set hostname(v) {\n    if (usm.hasAnOpaquePath(this._url)) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"hostname\" });\n  }\n\n  get port() {\n    if (this._url.port === null) {\n      return \"\";\n    }\n\n    return usm.serializeInteger(this._url.port);\n  }\n\n  set port(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    if (v === \"\") {\n      this._url.port = null;\n    } else {\n      usm.basicURLParse(v, { url: this._url, stateOverride: \"port\" });\n    }\n  }\n\n  get pathname() {\n    return usm.serializePath(this._url);\n  }\n\n  set pathname(v) {\n    if (usm.hasAnOpaquePath(this._url)) {\n      return;\n    }\n\n    this._url.path = [];\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"path start\" });\n  }\n\n  get search() {\n    if (this._url.query === null || this._url.query === \"\") {\n      return \"\";\n    }\n\n    return `?${this._url.query}`;\n  }\n\n  set search(v) {\n    const url = this._url;\n\n    if (v === \"\") {\n      url.query = null;\n      this._query._list = [];\n      return;\n    }\n\n    const input = v[0] === \"?\" ? v.substring(1) : v;\n    url.query = \"\";\n    usm.basicURLParse(input, { url, stateOverride: \"query\" });\n    this._query._list = urlencoded.parseUrlencodedString(input);\n  }\n\n  get searchParams() {\n    return this._query;\n  }\n\n  get hash() {\n    if (this._url.fragment === null || this._url.fragment === \"\") {\n      return \"\";\n    }\n\n    return `#${this._url.fragment}`;\n  }\n\n  set hash(v) {\n    if (v === \"\") {\n      this._url.fragment = null;\n      return;\n    }\n\n    const input = v[0] === \"#\" ? v.substring(1) : v;\n    this._url.fragment = \"\";\n    usm.basicURLParse(input, { url: this._url, stateOverride: \"fragment\" });\n  }\n\n  toJSON() {\n    return this.href;\n  }\n};\n", "\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst implSymbol = utils.implSymbol;\nconst ctorRegistrySymbol = utils.ctorRegistrySymbol;\n\nconst interfaceName = \"URL\";\n\nexports.is = value => {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\nexports.isImpl = value => {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\nexports.convert = (globalObject, value, { context = \"The provided value\" } = {}) => {\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n  throw new globalObject.TypeError(`${context} is not of type 'URL'.`);\n};\n\nfunction makeWrapper(globalObject, newTarget) {\n  let proto;\n  if (newTarget !== undefined) {\n    proto = newTarget.prototype;\n  }\n\n  if (!utils.isObject(proto)) {\n    proto = globalObject[ctorRegistrySymbol][\"URL\"].prototype;\n  }\n\n  return Object.create(proto);\n}\n\nexports.create = (globalObject, constructorArgs, privateData) => {\n  const wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\n\nexports.createImpl = (globalObject, constructorArgs, privateData) => {\n  const wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\n\nexports._internalSetup = (wrapper, globalObject) => {};\n\nexports.setup = (wrapper, globalObject, constructorArgs = [], privateData = {}) => {\n  privateData.wrapper = wrapper;\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper;\n};\n\nexports.new = (globalObject, newTarget) => {\n  const wrapper = makeWrapper(globalObject, newTarget);\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper[implSymbol];\n};\n\nconst exposed = new Set([\"Window\", \"Worker\"]);\n\nexports.install = (globalObject, globalNames) => {\n  if (!globalNames.some(globalName => exposed.has(globalName))) {\n    return;\n  }\n\n  const ctorRegistry = utils.initCtorRegistry(globalObject);\n  class URL {\n    constructor(url) {\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          `Failed to construct 'URL': 1 argument required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to construct 'URL': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        if (curArg !== undefined) {\n          curArg = conversions[\"USVString\"](curArg, {\n            context: \"Failed to construct 'URL': parameter 2\",\n            globals: globalObject\n          });\n        }\n        args.push(curArg);\n      }\n      return exports.setup(Object.create(new.target.prototype), globalObject, args);\n    }\n\n    toJSON() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'toJSON' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol].toJSON();\n    }\n\n    get href() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get href' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"href\"];\n    }\n\n    set href(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set href' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'href' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"href\"] = V;\n    }\n\n    toString() {\n      const esValue = this;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'toString' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"href\"];\n    }\n\n    get origin() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get origin' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"origin\"];\n    }\n\n    get protocol() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get protocol' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"protocol\"];\n    }\n\n    set protocol(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set protocol' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'protocol' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"protocol\"] = V;\n    }\n\n    get username() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get username' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"username\"];\n    }\n\n    set username(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set username' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'username' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"username\"] = V;\n    }\n\n    get password() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get password' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"password\"];\n    }\n\n    set password(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set password' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'password' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"password\"] = V;\n    }\n\n    get host() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get host' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"host\"];\n    }\n\n    set host(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set host' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'host' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"host\"] = V;\n    }\n\n    get hostname() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get hostname' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"hostname\"];\n    }\n\n    set hostname(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set hostname' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'hostname' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"hostname\"] = V;\n    }\n\n    get port() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get port' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"port\"];\n    }\n\n    set port(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set port' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'port' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"port\"] = V;\n    }\n\n    get pathname() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get pathname' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"pathname\"];\n    }\n\n    set pathname(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set pathname' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'pathname' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"pathname\"] = V;\n    }\n\n    get search() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get search' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"search\"];\n    }\n\n    set search(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set search' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'search' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"search\"] = V;\n    }\n\n    get searchParams() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get searchParams' called on an object that is not a valid instance of URL.\");\n      }\n\n      return utils.getSameObject(this, \"searchParams\", () => {\n        return utils.tryWrapperForImpl(esValue[implSymbol][\"searchParams\"]);\n      });\n    }\n\n    get hash() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get hash' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"hash\"];\n    }\n\n    set hash(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set hash' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'hash' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"hash\"] = V;\n    }\n  }\n  Object.defineProperties(URL.prototype, {\n    toJSON: { enumerable: true },\n    href: { enumerable: true },\n    toString: { enumerable: true },\n    origin: { enumerable: true },\n    protocol: { enumerable: true },\n    username: { enumerable: true },\n    password: { enumerable: true },\n    host: { enumerable: true },\n    hostname: { enumerable: true },\n    port: { enumerable: true },\n    pathname: { enumerable: true },\n    search: { enumerable: true },\n    searchParams: { enumerable: true },\n    hash: { enumerable: true },\n    [Symbol.toStringTag]: { value: \"URL\", configurable: true }\n  });\n  ctorRegistry[interfaceName] = URL;\n\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: URL\n  });\n\n  if (globalNames.includes(\"Window\")) {\n    Object.defineProperty(globalObject, \"webkitURL\", {\n      configurable: true,\n      writable: true,\n      value: URL\n    });\n  }\n};\n\nconst Impl = require(\"./URL-impl.js\");\n", "\"use strict\";\n\nconst URL = require(\"./lib/URL\");\nconst URLSearchParams = require(\"./lib/URLSearchParams\");\n\nexports.URL = URL;\nexports.URLSearchParams = URLSearchParams;\n", "\"use strict\";\n\nconst { URL, URLSearchParams } = require(\"./webidl2js-wrapper\");\nconst urlStateMachine = require(\"./lib/url-state-machine\");\nconst percentEncoding = require(\"./lib/percent-encoding\");\n\nconst sharedGlobalObject = { Array, Object, Promise, String, TypeError };\nURL.install(sharedGlobalObject, [\"Window\"]);\nURLSearchParams.install(sharedGlobalObject, [\"Window\"]);\n\nexports.URL = sharedGlobalObject.URL;\nexports.URLSearchParams = sharedGlobalObject.URLSearchParams;\n\nexports.parseURL = urlStateMachine.parseURL;\nexports.basicURLParse = urlStateMachine.basicURLParse;\nexports.serializeURL = urlStateMachine.serializeURL;\nexports.serializePath = urlStateMachine.serializePath;\nexports.serializeHost = urlStateMachine.serializeHost;\nexports.serializeInteger = urlStateMachine.serializeInteger;\nexports.serializeURLOrigin = urlStateMachine.serializeURLOrigin;\nexports.setTheUsername = urlStateMachine.setTheUsername;\nexports.setThePassword = urlStateMachine.setThePassword;\nexports.cannotHaveAUsernamePasswordPort = urlStateMachine.cannotHaveAUsernamePasswordPort;\nexports.hasAnOpaquePath = urlStateMachine.hasAnOpaquePath;\n\nexports.percentDecodeString = percentEncoding.percentDecodeString;\nexports.percentDecodeBytes = percentEncoding.percentDecodeBytes;\n"],
  "mappings": "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",
  "names": []
}
